- en: P3：3. L1_3 Software - Python小能 - BV1CB4y1U7P6
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P3：3. L1_3 软件 - Python小能 - BV1CB4y1U7P6
- en: Now， this is a class on deep learning， both theory and practice。 In order to
    get the practical aspects done， well， we'll need to talk about software， how。
    you install things， how to get help， and basically where you can run things。 So
    let's get started。 The tools that we are going to use are Python， and well， in
    reality， really everybody's using。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这是一个关于深度学习的课程，既有理论也有实践。为了完成实践部分，我们需要讨论软件，如何安装，如何获取帮助，以及基本上在哪里可以运行这些东西。那么，开始吧。我们将要使用的工具是Python，实际上，几乎每个人都在使用它。
- en: Python in one way or another for machine learning and data science。 We're going
    to use Conda as a package manager for simplicity。 There are a lot more detailed
    instructions in the installation chapter on d2l。ai。 So this is really just an
    overview。 Now， within Python， we are going to use notebooks。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Python在机器学习和数据科学中无处不在。我们将使用Conda作为包管理器，简化操作。有关更详细的安装说明，可以参考d2l.ai中的安装章节。所以，这里只是一个概览。现在，在Python中，我们将使用笔记本。
- en: and that means Jupyter。 That's just so much easier to keep track of all your
    experiments。 And if you just write maybe 100， 200 lines of code， Jupyter is a
    perfectly good tool。 for building such things。 Now if you have larger software
    projects and you try to do it all in Jupyter。 well， that， leads to a little bit
    of spaghetti code。 But for the purpose of this course。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着Jupyter。这样你就能更轻松地跟踪所有的实验。如果你只写大约100到200行代码，Jupyter是一个非常合适的工具，用于构建这样的东西。现在，如果你有更大的软件项目，试图把所有东西都做在Jupyter里，这样就会产生一些乱七八糟的代码。但对于本课程的目的来说…
- en: this is more than plenty。 So if you have really long， large software projects。
    maybe then for your course project， you probably want to do some experiments in
    Jupyter and then actually put things into。 proper libraries。 If you want to enjoy
    all the notebooks that I'm going through in the same slide form as。 what I'm doing
    in this lecture， you'll need to install RISE through Conda。 Otherwise。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这已经足够了。所以，如果你有非常长的、大型的软件项目，可能在你的课程项目中，你会想在Jupyter中进行一些实验，然后再将代码放到适当的库中。如果你想以我在讲座中使用的相同幻灯片格式享受我展示的所有笔记本，你需要通过Conda安装RISE。否则…
- en: you don't really need it。 You can just look through the notebooks as they are。
    And last but not least， well， you need a deep learning framework。 The one that
    we picked for this course is MXNet-Glue on。 The reason for that is because it's
    very scalable and easy to use and has a nice imperative。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你其实不需要它。你可以直接查看这些笔记本。最后但同样重要的是，你需要一个深度学习框架。我们为本课程选择的是MXNet-Glue on。选择它的原因是它非常可扩展，易于使用，并且具有良好的命令式接口。
- en: interface。 It works nicely on a wide variety of hardware and scales well。 If
    you have another deep learning framework， you're still going to be able to benefit
    from。 all the theory and all the models。 But if you want to walk along and actually
    try out some of the codes。 you'll need to install， MXNet。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 它在各种硬件上运行良好，并且能够很好地扩展。如果你使用的是其他深度学习框架，你仍然能够从所有的理论和模型中受益。但如果你想跟着实践，实际尝试一些代码，你需要安装MXNet。
- en: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_1.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_1.png)'
- en: Now， how do you do that？ Well， if you have a generic cloud machine with Linux
    or if you have a Linux laptop or。 desktop， it's fairly straightforward， you pull
    the latest mini-conder installer from， a Conda。 You get the latest version of
    our book from d2l-en。zip。 You unzip that。 And within that。 you'll find an environment
    which includes all the relevant packages。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何操作呢？如果你有一台通用的Linux云机器，或者你有一台Linux笔记本电脑或桌面电脑，那就相当简单，你只需从Conda下载最新的mini-conda安装程序。然后从d2l-en.zip获取我们书籍的最新版本。解压缩后，你会找到一个环境，其中包含所有相关的包。
- en: And then all that's required is just you create this environment with Conda。
    So it's very straightforward。 Conda。n。create -f as in file name environment。yml
    and you're done。 And then you just activate Glue on。 That's the environment that
    we're providing。 So source activate Glue on， trip to notebook and you're done。
    Now if you're not GPU， well。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，所需的全部操作就是通过Conda创建这个环境。非常简单。只需运行`Conda.n.create -f`，后面跟上文件名`environment.yml`，然后完成。接着激活Glue
    on环境。这是我们提供的环境。所以，输入`source activate Glue on`，进入笔记本就完成了。如果没有GPU，那就…
- en: you'll need to install the NVIDIA drivers， CUDA， CUDA-en。n。 Maybe TensorRT。
    Well。 NVIDIA has their own way of doing things and you'll need to follow the instructions。
    on their website。 This will probably take you a little bit longer than the actual
    MXNet installation。 One important thing is you need to update the environment
    variable， environment。yml， to。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要安装 NVIDIA 驱动程序、CUDA、CUDA-en.n。可能还需要 TensorRT。好吧，NVIDIA 有他们自己的一套做法，你需要按照他们网站上的说明来操作。这可能会比实际安装
    MXNet 稍微花费你更多的时间。有一点很重要，你需要更新环境变量，环境.yml，去。
- en: replace MXNet with MXNet-cu92， for instance for CUDA 9。2 or any other CUDA version
    that。 you might have at the time when you're watching this video。 That's just
    to make sure that you're actually able to use the GPU on your device。 Now if you
    don't have Linux but a Mac， instructions are almost the same。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，替换 MXNet 为 MXNet-cu92，以支持 CUDA 9.2，或者任何你在观看本视频时可能使用的 CUDA 版本。这只是为了确保你能在设备上实际使用
    GPU。如果你没有 Linux 系统，而是使用 Mac，指令几乎是一样的。
- en: The only difference is that you replace Linux by Mac OS。 So if you compare this。
    it's only really one word that changes。 Now if you have a Windows box， it's a
    little bit different。 You need to download an exit file。 So it's Windows x8664
    exit。 And the other thing is that the CondaActivation command looks a little bit
    different。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的区别是你将 Linux 替换为 Mac OS。所以如果你对比一下，实际上只有一个词需要改变。如果你使用的是 Windows 系统，情况稍有不同。你需要下载一个退出文件。所以是
    Windows x8664 exit。另一个不同之处是 CondaActivation 命令看起来稍微不同。
- en: You just say activate Lorne。 Before that you needed to type in source， activate
    Lorne。 here it's just activate Lorne。 That's really the entire difference between
    Windows。 Mac OS and Linux。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需输入 `activate Lorne`。之前你需要输入 `source activate Lorne`，现在只需要 `activate Lorne`。这就是
    Windows、Mac OS 和 Linux 之间的唯一差异。
- en: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_3.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_3.png)'
- en: Now if you don't want to go through all the pain of installing the NVIDIA drivers
    because。 that can take some time and if you've never done it before， you'll probably
    need to sign。 up for a developer account and all of that。 You can just do that
    directly in AWS。 So what you might want to do is you start with the base AMI for
    deep learning。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想经历安装 NVIDIA 驱动程序的所有麻烦，因为这可能需要一些时间，而且如果你以前没有做过，你可能需要注册一个开发者账户，等等。你可以直接在
    AWS 上完成这一过程。所以你可以选择从深度学习的基础 AMI 开始。
- en: So if you follow the top link， you'll find all the relevant pieces。 Some machine
    learning AMIs。 The current latest one is this one here but if you watch it later，
    probably this will have。 been superseded by a more recent one with more recent
    NVIDIA drivers and all of that。 So therefore go there， look for the base AMI。
    You then follow the steps for basic MXNet 2。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你点击上面的链接，你会找到所有相关的资料。一些机器学习的 AMI，目前最新的是这个，但是如果你稍后观看，可能这个版本会被更新的版本所取代，包含更先进的
    NVIDIA 驱动等。因此，去那里，查找基础 AMI。然后按照基础 MXNet 2 的步骤进行。
- en: 0 to install as before and obviously for P2P3， G2， G3 or any other GPU instances
    that you may find。 you need the appropriate NVIDIA drivers， you update the Conda
    environment and you're done。 Now this will allow you to run MXNet on a machine
    in the cloud but obviously if you want。 to use Jupyter， there's a tiny little
    problem， right？
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程和之前一样，显然对于 P2P3、G2、G3 或任何其他 GPU 实例，你需要安装相应的 NVIDIA 驱动程序，更新 Conda 环境后，你就完成了。现在，这将允许你在云端的机器上运行
    MXNet，但显然，如果你想使用 Jupyter，就会遇到一个小问题，对吧？
- en: Because Jupyter sets up a web server on the machine on which it's running and
    you want。 to avoid two things， namely you want to avoid making that web server
    world accessible because。 otherwise some random guy could just connect to this
    machine that you just launched and。 run whatever they want on this machine they
    could root it probably。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 Jupyter 在运行的机器上设置了一个 Web 服务器，而你需要避免两件事，首先你要避免让这个 Web 服务器对外开放，因为否则，任何人都可能连接到你刚启动的这台机器，并在这台机器上执行任何他们想做的事情，甚至可能获得
    root 权限。
- en: So it's very much in your interest not to just make this machine world accessible。
    Instead of that what you do is you use SSH secure shell for port forwarding and
    what it。 does is it basically intercepts the port that the web server opens on
    this remote cloud machine。 and routes any requests to and from this port through
    the SSH tunnel to your local machine。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，确保不让这台机器对外开放是你的利益所在。你要做的是使用 SSH 安全外壳来进行端口转发。它的作用是基本上拦截远程云机器上 Web 服务器打开的端口，并通过
    SSH 隧道将任何来自这个端口的请求转发到你的本地机器。
- en: right fakes this port being there。 That's really just essential information
    you know signaling conduit and then you can locally。 far up your web browser on
    the port where you usually would expect Jupyter and run it。 We'll actually see
    that live in action in the next few lectures when we need GPUs for。 now look at
    the Jupyter instructions and go through the details there of how to do it。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对，端口在那里。这真的是一些基本信息，你知道它是信号传导通道，然后你可以在本地的网页浏览器上启动那个端口，通常是Jupyter端口，并运行它。我们实际上会在接下来的几讲中看到这在实际操作中的应用，当我们需要GPU时。现在来看一下Jupyter的操作说明，并详细了解如何操作。
- en: Obviously you need to set up an AWS account so in the lecture 2 we will cover
    that in a。 bit more detail on how to launch machine instances and all of that
    but you can also just go to。 the website on the books so the look in the appendix
    for AWS and we'll walk you through。 details of how to do all of this。 So if you
    need AWS credit for the class email us and we will send you with an appropriate。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你需要设置一个AWS账户，所以在第二讲中，我们会更详细地介绍如何启动机器实例等内容，但你也可以直接访问书中的网站，查看AWS的附录，我们会引导你完成如何操作的细节。如果你需要AWS的学术积分，可以给我们发邮件，我们会为你提供合适的支持。
- en: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_5.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_5.png)'
- en: credit code。 Now if you want to use Colab， well you can do that so you go to
    colab。research。google。com， make sure you activate the GPU supported run time so
    you need to select the appropriate。 run time and then before you actually want
    to run MXNet you need to add those two lines。 namely pip install MXNet-cu92 and
    pip install d2l to your config and then you're up and running。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 信用代码。如果你想使用Colab，当然可以，你只需访问colab.research.google.com，确保激活GPU支持的运行时，你需要选择适当的运行时。然后，在你实际运行MXNet之前，你需要将这两行代码添加到配置中，分别是`pip
    install MXNet-cu92`和`pip install d2l`，然后你就可以开始运行了。
- en: on colab。 Now colabs nice in the far as it gives you free as in sponsored by
    Google access to GPU。 machines at least as long as Google decides to sponsor that。
    The downside is after some inactivity that machine is torn down so you can just
    come。 back after dinner and expect all the things to be there you need to check
    point and other。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在Colab上。现在，Colab挺不错的，因为它提供由Google赞助的免费的GPU访问，至少在Google决定继续赞助的情况下是这样的。缺点是，如果机器长时间没有活动，它会被关闭，所以你不能指望晚饭后回来时一切都在，需要做检查点等其他操作。
- en: things your notebooks are still some will survive but the variables on the local
    machine。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你的笔记本有些内容会保存下来，但本地机器上的变量会丢失。
- en: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_7.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/007fdf61da7a2bab43bace2ce1cd3a03_7.png)'
- en: will not。 So you get somebody loose some。 [BLANK_AUDIO]。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 不会。所以你得到了一些松动的。 [BLANK_AUDIO]。
