- en: P14：14. L3_3 Setting up a GPU instance on AWS - Python小能 - BV1CB4y1U7P6
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P14：14. L3_3 在AWS上设置GPU实例 - Python小能 - BV1CB4y1U7P6
- en: Okay， so the first thing we do is we go to a WS dot Amazon。com and I've already
    logged。 in and let's actually launch an instance。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，首先我们要做的是访问AWS的官网（aws.amazon.com），我已经登录了，现在让我们启动一个实例。
- en: '![](img/92691646dec3e7da35d283da51f447a7_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_1.png)'
- en: So this time I've taken care， making sure that I launched the right instance。
    And I select let's say the deep learning base army Ubuntu version 15。0。 Now if
    I want to run things on a GPU I need to select an instance that actually has a，
    GPU， right？
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这次我已经确认，确保我启动了正确的实例。我选择了深度学习基础Ubuntu版本15.0。现在，如果我想在GPU上运行任务，我需要选择一个实际上有GPU的实例，对吧？
- en: So don't select something like a T2 instance because it does not have a GPU。
    So matter of fact your Raspberry Pi at home is probably faster than a T2 instance
    on average。 or something like that。 So a T2 nano is about the smallest you can
    get。 Anyway。 so let's take a GPU instance and one that I'm going to pick is a
    P2 X large。 Okay。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 不要选择像T2这样的实例，因为它没有GPU。事实上，你家里的Raspberry Pi可能比T2实例还快，平均来说可能是这样。所以T2 nano是最小的实例了。无论如何，我们选择一个GPU实例，我选择的是P2
    X大实例。好的。
- en: now let's quickly illustrate the issue of the spot prices。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们快速说明一下竞价价格的问题。
- en: '![](img/92691646dec3e7da35d283da51f447a7_3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_3.png)'
- en: So let's search for that and let's look for on demand instances on demand pricing。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们来搜索一下，看看按需实例的定价。
- en: '![](img/92691646dec3e7da35d283da51f447a7_5.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_5.png)'
- en: And this is in Ohio and if you were to go somewhere else it would cost more。
    So these are GPU instances。 So P2 8X large has 8 GPUs， P2 16X large has 16 GPUs。
    The one that we're interested in here is a P2 X large that will be probably good
    enough。 for most of what you're doing。 If you have projects that need a lot of
    compute， talk to us。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在俄亥俄州，如果你去其他地方，价格会更高。这些是GPU实例。P2 8X大实例有8个GPU，P2 16X大实例有16个GPU。我们感兴趣的是P2 X大实例，它可能足够应付你大多数的工作。如果你的项目需要大量计算能力，跟我们联系。
- en: we can help you with that and then， those circumstances should you have to pay，
    right？
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以帮助你解决这个问题，那么如果你必须支付，应该怎么做呢？
- en: So we'll help you， we'll get you credits but we're not going to hand out blank
    checks to。 everybody because at least we want to know what you're going to use
    it for。 So no Bitcoin mining on AWS credits。 I mean it's a bad return right now
    anyway but still。 In any case， if you look at the P2 X large， they cost about
    90 cents an hour。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们会帮你，给你一些积分，但不会给每个人发空白支票。至少我们想知道你打算用它做什么。所以AWS积分不能用于比特币挖矿。其实现在回报率很低，但还是不行。无论如何，如果你看一下P2
    X大实例，它的价格大约是每小时90美分。
- en: '![](img/92691646dec3e7da35d283da51f447a7_7.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_7.png)'
- en: And let's just look at that。 So that's what we pick。 Now let's look at spot
    instances。 So those spot instances are a lot cheaper， right？ They're something
    between 37 and 30 cents an hour。 Now you might wonder why on earth would people
    pay different amounts for that and where do。 those spot instances come from in
    the first place？
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这个。所以这就是我们选择的内容。现在我们来看看竞价实例。那么这些竞价实例是不是便宜很多呢？它们的价格大约是每小时37到30美分之间。你可能会想，为什么人们会为此支付不同的价格，这些竞价实例最初来自哪里？
- en: Spot instances are essentially surplus instances that currently nobody's really
    using at full。 price because AWS tries very hard to make sure that when anybody
    comes and says hey I。 want to have a machine， you need to have access capacity
    around。 So therefore we have some space。 And rather than having those space sit
    idly， Amazon auctions them off， essentially eBay， style。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 竞价实例本质上是目前没有人完全使用的剩余实例，因为AWS尽力确保任何人一旦说“嘿，我想要一台机器”，就能获得相应的计算能力。因此，AWS会将这些空闲的资源进行拍卖，类似eBay的模式。
- en: And you get quite a bargain but there's a cash。 Catch is。 if at some point somebody
    else comes along and is willing to pay either more on。 the auction or full price
    while you're out。 The good thing is you don't pay for that last hour where you
    got kicked out。 So in any case we actually don't want to get kicked out so we're
    going to bid a reckless， 50 cents。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你能以相当便宜的价格获得这些实例，但有个陷阱。如果某个时候其他人愿意支付更高的价格，或者直接支付全价，而你被淘汰了，可能会被踢出去。不过好消息是你不会为被踢出去的最后一小时支付费用。所以我们其实不想被踢出去，所以我们会出价50美分，尽管这有点鲁莽。
- en: Don't make it a--that's still a bargain relative to 90 cents that you'd be paying
    otherwise。 Okay。 now next add storage。 And here it's 50 gigabytes， mind you when
    that machine goes down those 50 gigabytes are。 gone。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 别觉得这个很贵——相对于你否则要支付的90美分，这其实是个便宜的交易。好了，接下来是添加存储。这里是50GB，记住，当这台机器关闭时，这50GB就会丢失。
- en: '![](img/92691646dec3e7da35d283da51f447a7_9.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_9.png)'
- en: So let's add a new volume and I'm going to--well， okay let's just create a new
    one for now。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们来添加一个新的存储卷，我将——好吧，先创建一个新的。
- en: '![](img/92691646dec3e7da35d283da51f447a7_11.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_11.png)'
- en: So when I could snapshot this and so on but in any case let's do that。 So this
    is going to be persistent so I can reuse it。 Think of it like a USB key that you're
    attaching to it， right？ Going to add some tags。 no security group， fine， insecure
    open to the world。 Okay。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我可以对其进行快照，等等，但无论如何，还是按照这个做。所以这将是持久的，这样我就可以重复使用它。可以把它当作你插入的USB密钥，理解吗？接下来会添加一些标签。没有安全组，没问题，开放给全世界，没安全性。好了。
- en: this is telling me that it's going to cost。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我它将会花费。
- en: '![](img/92691646dec3e7da35d283da51f447a7_13.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_13.png)'
- en: And so now I don't have a key pair on this machine so start 157 and I download
    this key， pair。 Okay。 this is now going to request the spot instance。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这台机器上没有密钥对，所以start 157并下载这个密钥对。好的，这现在会请求一个Spot实例。
- en: '![](img/92691646dec3e7da35d283da51f447a7_15.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_15.png)'
- en: Okay， here's spot instance is now being created， that's good。 View spot requests。
    And lo and behold this was actually fulfilled。 Great。 So now I can click on it
    and it will tell me that it's initializing and doing its thing。 In the meantime
    let's quickly go and do two things。 Let's quickly create an SSH directory。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，Spot实例现在正在创建中，很好。查看Spot请求。瞧，这个请求已被满足。太棒了。现在我可以点击它，它会告诉我正在初始化并执行任务。与此同时，我们来快速做两件事。我们快速创建一个SSH目录。
- en: SSH keygen and then I would go and move this key into， SSH。 And it may not agree
    with that simply because right now this is--no actually it should be， fine。 We'll
    find out。 Okay， so here if we look at the instance we'll see that it's initializing
    so it's doing。 its thing and here's the public IP number。 Okay， so SSH minus identity
    start 157 PEM， Ubuntu add。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: SSH keygen，然后我会把这个密钥移到SSH里。它可能会不同意这样做，因为现在这个是——不，其实应该没问题，我们来看看。好了，现在如果我们查看实例，会看到它正在初始化，正在执行任务，这里是公共IP地址。好了，接下来是SSH
    minus identity start 157 PEM，Ubuntu add。
- en: Okay， so since the first time I'm connecting to this machine it will ask me
    whether I really。 want to connect to this and yes。 And basically it， you know。
    complaints that my SSH key is too insecure so it'll force me， to fix this。 And
    so I'm going to use CH mod minus read A。 Okay， so CH mod 400。 Yep， now only I
    can read it。 Okay。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，由于这是我第一次连接到这台机器，它会问我是否真的想连接到这台机器，选择是。基本上，它会抱怨我的SSH密钥太不安全，因此会强制我修复它。所以我要使用CH
    mod minus read A。好的，使用CH mod 400。没错，现在只有我能读取它。好的。
- en: good。 If we ask this agent in the machine now， I mean--so。 Now at this point
    we can go and follow the install instructions that are posted for instance。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。如果我们现在询问机器上的这个代理，我是说——现在在这个阶段，我们可以按照论坛上发布的安装说明来操作实例。
- en: '![](img/92691646dec3e7da35d283da51f447a7_17.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_17.png)'
- en: on the forum。 This is really just combining things from a couple of slides。
    Now here's one important thing and this is where a couple of people got stuck。
    So this machine has different versions of CUDA installed， user。 You'll see that
    it has CUDA 8， 9， 9。2 and CUDA 10 installed。 And in particular--it currently defaults
    to CUDA 9。0。 Right。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是将几张幻灯片的内容结合在一起。现在有一点很重要，这是几个用户卡住的地方。这台机器安装了不同版本的CUDA。你会看到它安装了CUDA 8、9、9.2和CUDA
    10。特别是——它当前默认使用CUDA 9.0，对吧。
- en: So that's not necessarily what we want。 So we need to change it， let's say to
    CUDA 10。 So actually the instructions have CUDA 9。2 pointing to it but anyway
    let's do this。 So I just created some link。 If you've never seen sudo before。
    that just means you're doing that as root。 Okay， fine。 So now we have CUDA working。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这不一定是我们想要的。因此，我们需要将它更改为CUDA 10。实际上，说明中提到的是CUDA 9.2指向它，不过我们还是按照这个做。于是我创建了一些链接。如果你从未见过sudo，它只是意味着你以root身份执行命令。好的，没问题。现在CUDA已经可以使用了。
- en: Next thing is we need to get CUDA。 Okay， let's execute it。 It will now ask me
    whether I accept the license terms， yes。 You can change all that with default
    flags but does it automatically。 Okay， fine。 It sets this all up。 Yes。 Okay， now
    the reason why I have to do this is because now it's updated my path and now。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的事情是我们需要获取 CUDA。好的，执行它。现在它会问我是否接受许可协议，答案是“是”。你可以用默认选项更改所有内容，但它会自动完成。好的，没问题。它会设置好这些。是的。好的，现在我需要这么做的原因是它更新了我的路径，现在。
- en: if I want to find out whether Conda is in my path， well there we go。 Okay， good。
    So now we need to set up the appropriate environment and we're going to do this。
    And the only difference is that now we need to pick CUDA 10。0， so CU100。 So now
    if you look at the ammo file for Glue on for the environment， you'll see that
    it。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想查看 Conda 是否在我的路径中，嗯，那就这样吧。好的，没问题。那么现在我们需要设置好适当的环境，我们将这么做。唯一的区别是现在我们需要选择
    CUDA 10.0，所以是 CU100。如果你查看 Glueon 环境的 ammo 文件，你会看到它。
- en: needs Python， Jupyter， Matplotlib， Pandas and then CUDA 100。 So if you're on
    a CPU version。 you do not want to install the CUDA version， right？ On the other
    hand， if you need the GPUs。 then well you need to do that。 So NVIDIA SMI shows
    me that I have one GPU right now on this machine。 It's a K80 and it also shows
    that it's currently using the CUDA 10。0 version。 Okay。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 需要 Python、Jupyter、Matplotlib、Pandas 以及 CUDA 10.0。如果你使用的是 CPU 版本，就不需要安装 CUDA
    版本，对吧？另一方面，如果你需要使用 GPU，那你就得安装它。所以 NVIDIA SMI 显示我现在这台机器上有一块 GPU。是 K80，并且它显示当前正在使用
    CUDA 10.0 版本。好的。
- en: Everybody comfortable with that so far？ Okay， good。 Okay， let's do this。 Conda
    in create and then source activate。 So it now does its thing and installs quite
    happily as it would。 It takes a little while。 While it's doing that， actually
    let's just open another shell and already set it up with。 port forwarding such
    that we can do this automatically。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，大家都理解了吗？好的，太好了。那么，接下来我们来做这件事。先创建 Conda 环境，然后使用 `source activate`。这样它就开始执行并愉快地安装了，像往常一样。需要一点时间。在它执行的同时，其实我们可以再打开一个终端，并提前设置好端口转发，这样我们就能自动完成这个过程。
- en: So if you don't know how to do port forwarding， let's go to d2l。ai and in the
    appendix it actually。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道如何进行端口转发，咱们可以去 d2l.ai，附录中实际上有讲解。
- en: '![](img/92691646dec3e7da35d283da51f447a7_19.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_19.png)'
- en: '![](img/92691646dec3e7da35d283da51f447a7_20.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_20.png)'
- en: will give you fairly detailed instructions on how to use Jupyter。 So what we'll
    have to do is we'll have to add this to my SSH command。 SSH minus i。 Okay。 Does
    anybody remember the IP number？ No。 125， 40， 199。 And now， okay。 Actually I'll
    have to do something a little bit differently here。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 会给你提供相当详细的 Jupyter 使用说明。我们需要做的是把这个命令添加到我的 SSH 命令中。SSH -i。好的。有人记得 IP 地址吗？没有。125，40，199。现在，好吧。实际上，我得稍微做些不同的操作。
- en: The reason is that I already have a local version of Jupyter running。 And that's
    already running on port 8888。 So if I set the port forwarding to the same port
    and I basically have two services going。 to the same port。 That doesn't work very
    well。 So let's just pick 88090。 Okay。 And this should be fine。 And I used the
    argument in the wrong order。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 原因是我已经在本地运行了一个 Jupyter 实例，并且它已经在端口 8888 上运行。所以如果我将端口转发设置为同一个端口，就相当于同时有两个服务运行在同一个端口。这不好用。所以我们换成
    88090。好的，这样应该可以了。我把参数顺序弄错了。
- en: So let's log out and try this again。 And now things are fine。 Before that I
    had the error message。 Let's just pull it up here。 Channel setup forward listener
    TCP/IP cannot listen to port 8888。 Because there's already server running。 And
    we local Jupyter server。 So we're almost done。 Please worry I have to do an install。
    So actually I can just do this here。 Okay。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们注销并重新尝试。现在一切正常。之前我遇到过错误信息。我们可以把它拉出来看一下。频道设置转发监听器 TCP/IP 无法监听端口 8888。因为已有一个服务器在运行。而且我们本地有
    Jupyter 服务器。所以我们快完成了。请不用担心，我还需要进行一个安装。实际上，我可以在这里执行这个操作。好的。
- en: So activating glo on。 And now Jupyter notebook。 And of course it's supremely
    unhappy because there's no local machine there。 No local browser there。 So now
    we need to take this line here。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在激活 glo。然后启动 Jupyter notebook。当然，它现在非常不高兴，因为本地机器上没有浏览器。所以我们现在需要用这行命令。
- en: '![](img/92691646dec3e7da35d283da51f447a7_22.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_22.png)'
- en: Copy it into the browser。 And make one minor edit。 Because we need to connect
    on that new port。 And lo and behold， we're now connected to our machine in the
    cloud。 There are a couple of pitfalls to this。 So remember we launched a spot
    instance。 So that spot instance unfortunately means that it could go down anytime。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 把它复制到浏览器中。然后做一个小小的修改。因为我们需要连接到那个新端口。瞧，我们现在已经连接到云中的机器了。这里有几个陷阱。记住我们启动了一个竞价实例。所以那个竞价实例不幸的是，意味着它随时可能停止。
- en: So this is not a nice situation to be in。 But fortunately we allocate as an
    extra disk。 So we have this disk， XVDB。 So if you were to type in free， you would
    see that XVDA is our standard。 It's basically hard drive number one。 And hard
    drive number B is XVDB。 And right now it's not set up yet。 So sudo fdisk diff
    XVDB。 Right now there's nothing there。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这不是一个理想的情况。但是幸运的是，我们分配了一个额外的磁盘。所以我们有这个磁盘，XVDB。如果你输入 free 命令，你会看到 XVDA 是我们的标准磁盘，它基本上是硬盘
    1。硬盘 B 是 XVDB。现在它还没有设置好。所以输入 sudo fdisk diff XVDB。目前这里没有任何内容。
- en: So let's create a new partition。 So remember that was the eighth gigabytes partition。
    New partition。 primary partition number one。 Make it all defaults。 And yeah。 And
    it's already set up as a Linux partition so everything's good。 So I just write
    it back。 Good。 Now I need to create a-- yes？ [INAUDIBLE]， That's the next line
    that I'm going to type in。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们创建一个新的分区。记住，那是一个 8GB 的分区。新分区。主分区编号一。设置为所有默认值。是的，已经设置为 Linux 分区，所以一切正常。所以我只是把它写回去。好。现在我需要创建一个——是吗？[无法听清]，这是我接下来要输入的下一行。
- en: So right now it's just a partition that's tagged as a Linux partition。 The next
    thing I need to do is I need to set up X4。 And I need to give XVDB1 because that
    was the primary partition one。 And of course it's root because I'm formatting
    something。 Now I need to do one more thing。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在它只是一个标记为 Linux 分区的分区。接下来我需要做的是设置 X4。并且我需要给 XVDB1，因为那是主分区一。当然它是根分区，因为我要格式化一些东西。现在我还需要做一件事。
- en: I need to create a local directory。 Payload， let's say。 And now I'm going to
    mount VDB1。 And so now we have this thing mounted on Home Ubuntu Payload。 This
    is our second disk。 That disk will not die if the machine dies。 So now let's go
    to Payload。 And of course this fails。 The reason why it fails is because I mounted
    it as root。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要创建一个本地目录。假设我们叫它 Payload。现在我要挂载 VDB1。所以现在我们把它挂载到 Home Ubuntu Payload 上。这是我们的第二个磁盘。这个磁盘如果机器死掉了也不会坏掉。所以现在我们进入
    Payload。然后当然它失败了。失败的原因是因为我把它挂载为根目录。
- en: So now the last thing that I need to do is CH1A plus RvX。 This is insecure but
    fine。 This basically means anybody can write on it。 Now it works。 Good。 And so
    now you can write on it。 This creates partition。 And so that way if you have to
    do longer experiments and you want to make JWs。 Creates go a little bit longer，
    maybe a factor of two or three more。 Do that。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在我需要做的最后一件事是 CH1A + RvX。这是不安全的，但没关系。这基本上意味着任何人都可以对其进行写操作。现在它工作了。好。所以现在你可以写入它。这就创建了分区。这样，如果你需要做更长时间的实验，或者你想制作
    JWs，创建过程可能会稍微长一点，也许是原来时间的两到三倍。就这样做。
- en: Now last thing about the costs and the pricing and the bids， you're not necessarily
    going。 to pay your maximum bid。 It's just that you're not never going to pay more
    than your maximum bid。 So it's just like eBay。 Let's say you want to buy that
    new laptop for up to $1。000 in the second highest bid， a $700。 You're going to
    pay $700 for this laptop。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在关于成本、定价和竞标的最后一点，你不一定会支付你的最高竞标价。只是说你永远不会支付超过你的最高竞标价。所以这就像 eBay。假设你想以最多 $1,000
    的价格购买一台新笔记本，而第二高的竞标价是 $700。那么你将支付 $700 购买这台笔记本。
- en: So this is a second price auction。 And you can prove that it's incentive compatible。
    What happens on AWS with spot prices is a little bit more complicated。 just there
    are multiple machines and so on。 And the math works out a little bit more interestingly。
    If you're interested in that， take an EC class like electronic commerce class。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是一个第二高价拍卖。你可以证明它是激励兼容的。在 AWS 上，关于竞价价格的情况稍微复杂一些，因为有多个机器等等。数学原理稍微有点不同。如果你对这个感兴趣，可以去上类似电子商务类的课程。
- en: computational advertising and other things。 There's a lot of really nice stuff
    in there。 Way beyond the scope of this class。 And so with that， we're going to
    do one thing。 namely we're going to kill it all。 And then I hand over to move。
    Shut down the notebook server。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 计算广告和其他相关内容。这里面有很多非常有用的东西，远远超出了本课程的范围。所以在这一点上，我们将做一件事。也就是我们将把一切结束。然后我把任务交给 Move，关闭笔记本服务器。
- en: '![](img/92691646dec3e7da35d283da51f447a7_24.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_24.png)'
- en: OK， fine。 Locked out。 And now， so I can always click on instances。 And I can
    see this one's running。 And actions， instance state， terminate。 Terminate this
    instance。 Now it's gone。 OK。 so that was the very quick overview of how to set
    up a machine。 You can actually script all of this。 such that you don't need to
    do this through the， command line every time。 Right？
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，没问题，已锁定。现在，我可以随时点击实例。我可以看到这个正在运行。然后选择操作，实例状态，终止。终止这个实例。现在它已经消失了。好的，这就是快速概述如何设置机器。你实际上可以将这一切脚本化，这样你就不需要每次都通过命令行来做了，对吧？
- en: So you basically build a script。 Then you can actually launch spot instances
    from the command line。 Execute that script there。 And then in five minutes later。
    after you've come back from making yourself a cup of coffee， you have the machine
    ready。 I strongly recommend that you do that。 It's fairly straightforward scripting。
    OK， yes？ [INAUDIBLE]。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你基本上是构建一个脚本。然后你可以从命令行启动 Spot 实例。在那里执行那个脚本。然后五分钟后，在你去泡一杯咖啡回来后，机器就准备好了。我强烈推荐你这么做。它其实是相当简单的脚本编写。好的，是吗？[听不清的声音]。
- en: Well， yes， there。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，确实是这样。
- en: '![](img/92691646dec3e7da35d283da51f447a7_26.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_26.png)'
- en: The only thing is you have to put that into some executable file。 You'll probably
    need to put like。 you know， use a bin bash or whatever in there。 You probably
    want to combine this with photo。 Those scripts are not available， but I'm fairly
    sure that there are tons of similar scripts。 available on the internet if you
    search for set up a spot instance on AWS script with， photo。 Well。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一需要注意的是，你必须将其放入某个可执行文件中。你可能需要在其中加入，比如说，使用 bin bash 或者类似的东西。你可能还想将这个与照片结合使用。那些脚本是不可用的，但我几乎可以确定，如果你在互联网上搜索关于在
    AWS 上设置 Spot 实例的脚本，使用照片，应该能找到大量类似的脚本。嗯。
- en: we can do that。 OK。 And so the first link has something in there。 OK。 This is
    a little bit more detailed。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以做到这一点。好的。那么，第一个链接里面有些东西。好的，这是更详细一点的。
- en: '![](img/92691646dec3e7da35d283da51f447a7_28.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_28.png)'
- en: There's a whole bunch of other interesting things， because you can pick instances
    and。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有很多其他有趣的东西，因为你可以选择实例等等。
- en: '![](img/92691646dec3e7da35d283da51f447a7_30.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_30.png)'
- en: so on。 But this was the--let me Google that for you type of solution。 There's
    tons of stuff out there。 Yeah， use one that works for you。 OK， good。 So with that。
    I hand over to the grandmaster himself， Mu， and he'll talk about autograph， and
    related things。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 等等。但这就是那种——让我为你 Google 一下的解决方案。外面有大量的东西。是的，使用一个适合你的。好的，那么，接下来我将交给真正的大师，Mu，他将谈论签名和相关的内容。
- en: '![](img/92691646dec3e7da35d283da51f447a7_32.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92691646dec3e7da35d283da51f447a7_32.png)'
