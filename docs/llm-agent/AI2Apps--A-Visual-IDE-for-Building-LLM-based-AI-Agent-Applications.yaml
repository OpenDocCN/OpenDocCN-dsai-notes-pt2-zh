- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-09-08 18:48:46'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-09-08 18:48:46'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'AI2Apps: A Visual IDE for Building LLM-based AI Agent Applications'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AI2Apps：用于构建基于LLM的AI代理应用程序的视觉IDE
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2404.04902](https://ar5iv.labs.arxiv.org/html/2404.04902)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://ar5iv.labs.arxiv.org/html/2404.04902](https://ar5iv.labs.arxiv.org/html/2404.04902)
- en: Xin Pang^(1†), Zhucong Li^(2,4†), Jiaxiang Chen^(2,4), Yuan Cheng^(2,3), Yinghui
    Xu², Yuan Qi^(2,3)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Pang Xin^(1†), Zhucong Li^(2,4†), Jiaxiang Chen^(2,4), Yuan Cheng^(2,3), Yinghui
    Xu², Yuan Qi^(2,3)
- en: ¹ ContinuAI ² Artificial Intelligence Innovation and Incubation Institute,
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: ¹ ContinuAI ² 人工智能创新与孵化研究所，
- en: Fudan University, Shanghai, China
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 复旦大学，中国上海
- en: ³ Shanghai Academy of Artificial Intelligence for Science, Shanghai, China
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ³ 上海科学人工智能研究院，中国上海
- en: ⁴ School of Computer Science, Fudan University, Shanghai, China
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ⁴ 复旦大学计算机科学学院，中国上海
- en: pxavdpro@gmail.com, {zcli22, jiaxiangchen23}@m.fudan.edu.cn
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: pxavdpro@gmail.com, {zcli22, jiaxiangchen23}@m.fudan.edu.cn
- en: '{cheng_yuan, xuyinghui, qiyuan}@fudan.edu.cn'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '{cheng_yuan, xuyinghui, qiyuan}@fudan.edu.cn'
- en: Abstract
  id: totrans-13
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要
- en: We introduce AI2Apps, a Visual Integrated Development Environment (Visual IDE)
    with full-cycle capabilities that accelerates developers to build deployable LLM-based
    AI agent Applications. This Visual IDE prioritizes both the Integrity of its development
    tools and the Visuality of its components, ensuring a smooth and efficient building
    experience. On one hand, AI2Apps integrates a comprehensive development toolkit—ranging
    from a prototyping canvas and AI-assisted code editor to agent debugger, management
    system, and deployment tools—all within a web-based graphical user interface.
    On the other hand, AI2Apps visualizes reusable front-end and back-end code as
    intuitive drag-and-drop components. Furthermore, a plugin system named AI2Apps
    Extension (AAE) is designed for Extensibility, showcasing how a new plugin with
    20 components enables web agent to mimic human-like browsing behavior. Our case
    study demonstrates substantial efficiency improvements, with AI2Apps reducing
    token consumption and API calls when debugging a specific sophisticated multimodal
    agent by approximately 90% and 80%, respectively. The AI2Apps, including an online
    demo¹¹1[https://www.ai2apps.com](https://www.ai2apps.com), open-source code²²2[https://github.com/Avdpro/ai2apps](https://github.com/Avdpro/ai2apps),
    and a screencast video³³3[https://youtu.be/tQTqxk1LzzU](https://youtu.be/tQTqxk1LzzU),
    is now publicly accessible.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们介绍了AI2Apps，这是一种具有全周期能力的视觉集成开发环境（Visual IDE），加速开发人员构建可部署的基于LLM的AI代理应用程序。这个视觉IDE优先考虑其开发工具的完整性和组件的可视性，确保顺畅高效的构建体验。一方面，AI2Apps集成了全面的开发工具包——从原型画布和AI辅助代码编辑器到代理调试器、管理系统和部署工具——所有这些都在基于网页的图形用户界面中。另一方面，AI2Apps将可重用的前端和后端代码可视化为直观的拖放组件。此外，一个名为AI2Apps
    Extension（AAE）的插件系统旨在实现可扩展性，展示了如何通过一个包含20个组件的新插件使网络代理模拟类人浏览行为。我们的案例研究表明，AI2Apps在调试一个特定复杂的多模态代理时，将令牌消耗和API调用分别减少了约90%和80%，显著提高了效率。AI2Apps，包括在线演示¹¹1[https://www.ai2apps.com](https://www.ai2apps.com)、开源代码²²2[https://github.com/Avdpro/ai2apps](https://github.com/Avdpro/ai2apps)和演示视频³³3[https://youtu.be/tQTqxk1LzzU](https://youtu.be/tQTqxk1LzzU)，现在公开提供。
- en: '²²footnotetext: Corresponding author.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '²²footnotetext: 通讯作者。'
- en: 1 Introduction
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 引言
- en: The advent of Large Language Models (LLMs) has significantly advanced the technology
    of AI agents, paving the way for next-generation applications. Nonetheless, developers
    are in urgent need of a comprehensive full-stack solution to alleviate the repetitive
    tasks and escalating costs they face. However, despite achieving remarkable success,
    existing efforts to develop LLM-based AI agent applications still face their respective
    limitations. LLM Operations (LLMOps) platforms often lack integration with engineering-level
    tools designed for professional developers, thereby limiting the flexibility in
    programming and debugging (Openai, [2023](#bib.bib27); LangChain, [2023b](#bib.bib15);
    Microsoft, [2023a](#bib.bib19); Baidubce, [2023a](#bib.bib2); ByteDance, [2023](#bib.bib7);
    Gao et al., [2024](#bib.bib11); Xie et al., [2023](#bib.bib34); LangGenius, [2023](#bib.bib16);
    Logspace, [2023](#bib.bib18); FlowiseAI, [2023](#bib.bib10); Dataelement, [2023](#bib.bib9)).
    Integrated Development Environments (IDEs) fall short in providing sufficient
    reusable visual components and remain cumbersome and time-consuming throughout
    the development process. (Microsoft, [2023c](#bib.bib21), [e](#bib.bib23)). Software
    Development Kits (SDKs), serving as the foundation of agent frameworks, are typically
    integrated into LLMOps or utilized through IDEs (Microsoft, [2023d](#bib.bib22);
    AutoGPT, [2023](#bib.bib1); LangChain, [2023a](#bib.bib14); Wu et al., [2023](#bib.bib32);
    Li et al., [2023](#bib.bib17); Chen et al., [2023](#bib.bib8); Baidubce, [2023b](#bib.bib3);
    Nakajima, [2023](#bib.bib25); Microsoft, [2023b](#bib.bib20); Hong et al., [2023](#bib.bib12)).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 大型语言模型（LLMs）的出现显著推动了AI代理技术的发展，为下一代应用程序铺平了道路。然而，开发者迫切需要一个全面的全栈解决方案，以减轻他们面临的重复任务和不断上涨的成本。尽管取得了显著成功，现有的LLM基础AI代理应用程序开发工作仍面临各自的局限性。LLM操作（LLMOps）平台通常缺乏与专业开发者设计的工程级工具的集成，从而限制了编程和调试的灵活性（Openai,
    [2023](#bib.bib27); LangChain, [2023b](#bib.bib15); Microsoft, [2023a](#bib.bib19);
    Baidubce, [2023a](#bib.bib2); ByteDance, [2023](#bib.bib7); Gao et al., [2024](#bib.bib11);
    Xie et al., [2023](#bib.bib34); LangGenius, [2023](#bib.bib16); Logspace, [2023](#bib.bib18);
    FlowiseAI, [2023](#bib.bib10); Dataelement, [2023](#bib.bib9))。集成开发环境（IDEs）在提供足够的可重用视觉组件方面表现不足，并且在整个开发过程中仍然繁琐且耗时。（Microsoft,
    [2023c](#bib.bib21), [e](#bib.bib23)）。软件开发工具包（SDKs），作为代理框架的基础，通常集成于LLMOps中或通过IDEs使用（Microsoft,
    [2023d](#bib.bib22); AutoGPT, [2023](#bib.bib1); LangChain, [2023a](#bib.bib14);
    Wu et al., [2023](#bib.bib32); Li et al., [2023](#bib.bib17); Chen et al., [2023](#bib.bib8);
    Baidubce, [2023b](#bib.bib3); Nakajima, [2023](#bib.bib25); Microsoft, [2023b](#bib.bib20);
    Hong et al., [2023](#bib.bib12))。
- en: '![Refer to caption](img/fa2543f421f9e12af14ebad87cef47b4.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/fa2543f421f9e12af14ebad87cef47b4.png)'
- en: 'Figure 1: The comparison between AI2Apps and existing works on building LLM-based
    AI agent application is outlined, with the integrity of development tools represented
    on the vertical axis and the visuality of components indicated on the horizontal
    axis.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：展示了AI2Apps与现有LLM基础AI代理应用程序构建工作的比较，开发工具的完整性表示在纵轴上，组件的可视性表示在横轴上。
- en: 'In response to the aforementioned shortcomings, we introduce AI2Apps, a Visual
    Integrated Development Environment (Visual IDE) with full-cycle capabilities that
    empowers developers to efficiently build deployable LLM-based AI agent Applications.
    To the best of our knowledge, AI2Apps is the first LLM-based AI agent application
    development environment that achieves the engineering-level integrity and the
    full-stack visuality of a Visual IDE, as shown in Figure [1](#S1.F1 "Figure 1
    ‣ 1 Introduction ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent Applications").
    Its advantages are reflected in:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 针对上述不足，我们介绍了AI2Apps，一个具有全周期能力的可视化集成开发环境（Visual IDE），使开发者能够高效构建可部署的LLM基础AI代理应用程序。根据我们所知，AI2Apps是第一个在工程级完整性和Visual
    IDE的全栈可视性上取得突破的LLM基础AI代理应用程序开发环境，如图[1](#S1.F1 "图 1 ‣ 1 介绍 ‣ AI2Apps：构建LLM基础AI代理应用程序的可视化IDE")所示。其优势体现在：
- en: '1.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: Integrity. AI2Apps achieves engineering-level integrity by offering a seamlessly
    integrated development toolkit within a web-based Graphical User Interface (GUI),
    featuring a range of tools from a prototyping canvas and AI-assisted code editor
    to an agent debugger, management system, and deployment tool. In design mode,
    developers can quickly design agents by dragging and dropping components in the
    prototyping canvas. In code mode, AI2Apps features the AI-assisted code editor
    designed to help developers write agent application code faster and more consistently.
    The management system automatically maintains two-way synchronization between
    the prototyping canvas and the code editor, greatly improving programming efficiency.
    Then the agent debugger offers topology-based debugging features, including the
    breakpoint, step run, trace, and GPT mimic. These features allow developers to
    quickly pinpoint issues and optimize agent performance. Completed AI agents can
    be packaged as deployable web/mobile applications by deployment tool with one
    click. They can also be integrated as AI extensions into existing websites/applications
    with just a few lines of code.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完整性。AI2Apps 通过提供一个无缝集成的开发工具包，实现了工程级的完整性，该工具包包含在基于 Web 的图形用户界面（GUI）中，提供了从原型画布和
    AI 辅助代码编辑器到代理调试器、管理系统和部署工具的一系列工具。在设计模式下，开发者可以通过在原型画布中拖放组件快速设计代理。在代码模式下，AI2Apps
    提供了 AI 辅助的代码编辑器，旨在帮助开发者更快、更一致地编写代理应用程序代码。管理系统自动维护原型画布和代码编辑器之间的双向同步，极大地提高了编程效率。然后，代理调试器提供了基于拓扑的调试功能，包括断点、单步运行、跟踪和
    GPT 模拟。这些功能使开发者能够快速定位问题并优化代理性能。完成的 AI 代理可以通过部署工具一键打包成可部署的 Web/移动应用程序。它们也可以通过几行代码集成到现有网站/应用程序中，作为
    AI 扩展。
- en: '2.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Visuality. AI2Apps achieves full-stack visuality by representing multi-dimensional
    reusable front-end and back-end code as drag-and-drop visual components. AI2Apps
    provides reusable components oriented toward three dimensions: user interaction,
    chain, and flow control. The user interaction represents the front-end GUI widgets
    that facilitate user-agent interaction modes. Relying solely on chat is often
    not efficient enough to engage with users. Therefore, AI2Apps offers over 50 GUI
    widgets to support agent development, including menus, buttons, charts, and more.
    These widgets enable agents to interact with users in a manner akin to real-world
    applications. The chain represents the backend sequential flow that includes LLMs,
    prompts, code, agents, and other tools as components. The flow control enables
    developers to express the logic of applications, incorporating components such
    as connectors, branches, array loops, summaries, and error handlers. It offers
    a visual representation of what is traditionally expressed as textual program
    code.'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可视化。AI2Apps 通过将多维可重用的前端和后端代码表示为拖放可视化组件，实现了全栈可视化。AI2Apps 提供了面向三维的可重用组件：用户交互、链和流控制。用户交互代表了促进用户-代理交互模式的前端
    GUI 小部件。仅依靠聊天通常不足以有效地与用户互动。因此，AI2Apps 提供了 50 多种 GUI 小部件以支持代理开发，包括菜单、按钮、图表等。这些小部件使代理能够以类似于现实世界应用程序的方式与用户互动。链表示包括
    LLM、提示、代码、代理和其他工具作为组件的后端顺序流。流控制使开发者能够表达应用程序的逻辑，包括连接器、分支、数组循环、摘要和错误处理器等组件。它提供了传统上以文本程序代码形式表示的可视化表示。
- en: '3.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Extensibility. AI2Apps Extension (AAE) is a plugin extension system specifically
    designed for AI2Apps. AAE offers developers extensive opportunities to enhance
    applications by leveraging open technologies as plugins and draggable components.
    In our screencast video⁴⁴4[https://youtu.be/tQTqxk1LzzU](https://youtu.be/tQTqxk1LzzU)
    we showcase how a new plugin with 20 components enables web agent applications
    to mimic human-like browsing behavior.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可扩展性。AI2Apps 扩展（AAE）是一个专门为 AI2Apps 设计的插件扩展系统。AAE 为开发者提供了广泛的机会，通过利用开放技术作为插件和可拖拽组件来增强应用程序。在我们的视频演示⁴⁴4[https://youtu.be/tQTqxk1LzzU](https://youtu.be/tQTqxk1LzzU)中，我们展示了一个具有
    20 个组件的新插件如何使 Web 代理应用程序模拟类人浏览行为。
- en: We conduct a case study and find substantial efficiency improvements. With the
    help of the agent debugger, AI2Apps can reduce token consumption and API calls
    when debugging a story writing multimodal agent application by approximately 90%
    and 80%, respectively.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进行了一项案例研究，发现效率有了显著提升。借助代理调试器，AI2Apps 在调试一个故事编写的多模态代理应用程序时，能将令牌消耗和 API 调用分别减少约
    90% 和 80%。
- en: Our Contributions. (1) We design a Visual IDE with full-cycle capabilities that
    accelerates developers to build deployable LLM-based AI agent applications. (2)
    We implement a plugin extension system for this Visual IDE, offering developers
    extensive opportunities to enhance applications by freely leveraging open technologies.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的贡献。 (1) 我们设计了一款具有全周期能力的可视化 IDE，加速开发人员构建可部署的基于 LLM 的 AI 代理应用程序。 (2) 我们为该可视化
    IDE 实现了一个插件扩展系统，提供了广泛的机会，让开发人员通过自由利用开放技术来增强应用程序。
- en: '![Refer to caption](img/44e2657973721f20783ede6de3114a40.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/44e2657973721f20783ede6de3114a40.png)'
- en: 'Figure 2: Architecture of AI2Apps. The left and right sides display screenshots.
    (a) Prototyping Canvas utilizes built-in components for designing topology diagrams.
    (b) Code Editor utilizes AI assistance to continue programming the code generated
    in real-time by the Prototyping Canvas. (c) Agent Debugger pinpoints issues and
    optimizes agent performance. (d) Deployment Tool releases deployable apps. (e)
    Plugin Extension System introduces new components. (f) Management System supports
    the operating environment and resource scheduling.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：AI2Apps 的架构。左侧和右侧显示了截图。 (a) 原型画布利用内置组件设计拓扑图。 (b) 代码编辑器利用 AI 助手继续编程，实时生成代码。
    (c) 代理调试器定位问题并优化代理性能。 (d) 部署工具发布可部署的应用程序。 (e) 插件扩展系统引入新组件。 (f) 管理系统支持操作环境和资源调度。
- en: 2 Preliminary
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 初步概述
- en: 2.1 LLM-based AI Agent
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1 基于 LLM 的 AI 代理
- en: AI agents are artificial entities that are capable of perceiving their surroundings
    using sensors, making decisions, and then taking actions in response using actuators.
    LLM-based AI Agent means employing LLMs as the primary component of brain or controller
    of these agents and expanding their perceptual and action space through strategies
    such as multimodal perception and tool utilization (Xi et al., [2023](#bib.bib33);
    Nakano et al., [2021](#bib.bib26); Yao et al., [2022](#bib.bib35); Schick et al.,
    [2024](#bib.bib29); Wei et al., [2022](#bib.bib31); Kojima et al., [2022](#bib.bib13);
    Wang et al., [2023](#bib.bib30)). They have been applied to various real-world
    scenarios, such as software development (Li et al., [2023](#bib.bib17); Qian et al.,
    [2023](#bib.bib28); Hong et al., [2023](#bib.bib12)) and scientific research (Boiko
    et al., [2023a](#bib.bib4); Bran et al., [2023](#bib.bib6); Boiko et al., [2023b](#bib.bib5)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: AI 代理是能够使用传感器感知周围环境、做出决策并通过执行器采取相应行动的人工实体。基于 LLM 的 AI 代理是指将 LLM 作为这些代理的主要大脑或控制器，并通过多模态感知和工具利用等策略扩展它们的感知和行动空间（Xi
    等，[2023](#bib.bib33)；Nakano 等，[2021](#bib.bib26)；Yao 等，[2022](#bib.bib35)；Schick
    等，[2024](#bib.bib29)；Wei 等，[2022](#bib.bib31)；Kojima 等，[2022](#bib.bib13)；Wang
    等，[2023](#bib.bib30)）。它们已被应用于各种现实场景，如软件开发（Li 等，[2023](#bib.bib17)；Qian 等，[2023](#bib.bib28)；Hong
    等，[2023](#bib.bib12)）和科学研究（Boiko 等，[2023a](#bib.bib4)；Bran 等，[2023](#bib.bib6)；Boiko
    等，[2023b](#bib.bib5)）。
- en: 2.2 Visual IDE
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2 可视化集成开发环境（IDE）
- en: 'IDEs are software suites that enhance software development through features
    like source-code editors, build automation tools, and debuggers. The VScode (Microsoft,
    [2023f](#bib.bib24)) mentioned in Figure [1](#S1.F1 "Figure 1 ‣ 1 Introduction
    ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent Applications") is indeed
    a widely used IDE software.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 'IDE 是通过源代码编辑器、构建自动化工具和调试器等功能提升软件开发的软件套件。图 [1](#S1.F1 "图 1 ‣ 1 引言 ‣ AI2Apps:
    一种用于构建基于 LLM 的 AI 代理应用程序的可视化 IDE") 中提到的 VScode（微软，[2023f](#bib.bib24)）确实是广泛使用的
    IDE 软件。'
- en: 'Visual IDEs surpass traditional text-based IDEs by enhancing efficiency, improving
    code understanding, and facilitating collaboration through user-friendly GUIs,
    rapid prototyping, and integrated development resources. The other two concepts
    mentioned earlier that are easily confused are: SDKs often manifest as Application
    Programming Interfaces (APIs) or software frameworks and comprise on-device libraries
    with reusable functions for interfacing with specific programming languages. LLMOps
    platforms are specialized tools designed to streamline the deployment, management,
    and scaling of LLMs. These platforms are crucial for businesses and developers
    that LLMs for applications such as chatbots, content generation, data analysis,
    and more.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化集成开发环境（IDE）通过增强效率、改善代码理解和通过用户友好的图形用户界面（GUI）、快速原型制作和集成开发资源促进协作，超越了传统的基于文本的IDE。之前提到的另两个容易混淆的概念是：SDK通常表现为应用程序编程接口（API）或软件框架，并包含用于与特定编程语言接口的设备上的可重用函数库。LLMOps平台是专门设计的工具，用于简化LLMs的部署、管理和扩展。这些平台对于将LLMs用于聊天机器人、内容生成、数据分析等应用的企业和开发者至关重要。
- en: 3 The AI2Apps Framework
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 AI2Apps框架
- en: 'AI2Apps is designed for both the integrity of its development tools and the
    visuality of its components, ensuring a smooth and efficient building experience.
    It can be organized into six blocks, as shown in Figure [2](#S1.F2 "Figure 2 ‣
    1 Introduction ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent Applications").'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 'AI2Apps旨在兼顾开发工具的完整性和组件的可视化，确保顺畅而高效的构建体验。它可以被组织成六个模块，如图[2](#S1.F2 "Figure 2
    ‣ 1 Introduction ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent Applications")所示。'
- en: 3.1 Prototyping Canvas
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1 原型画布
- en: 'Prototype design plays a pivotal role in application development by creating
    interactive models to validate functionality and user experience, ultimately reducing
    costs and ensuring the delivery of a successful application that meets user needs.
    In design mode, developers can quickly design agent logic by dragging and dropping
    components in the prototyping canvas. Its features include:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 原型设计在应用程序开发中发挥着关键作用，通过创建交互模型来验证功能和用户体验，*最终*降低成本并确保交付符合用户需求的成功应用程序。在设计模式下，开发人员可以通过拖放原型画布中的组件快速设计代理逻辑。其特点包括：
- en: Topology-based. The prototyping canvas represents application logic in the form
    of a topology diagram, thereby breaking down all coupled code into clear and reliable
    units. Compared to reading complex code line by line, the advantages of AI agent
    code containing topology diagrams in later maintenance are enormous. It not only
    provides a clear understanding of the original code’s design rationale but also
    allows for quicker identification of code issues.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 基于拓扑。原型画布以拓扑图的形式表示应用逻辑，从而将所有耦合代码分解为清晰且可靠的单元。与逐行阅读复杂代码相比，AI代理代码中包含拓扑图在后期维护中的优势巨大。它不仅提供了对原始代码设计原理的清晰理解，还允许更快地识别代码问题。
- en: 'Visual Components. The prototyping canvas visualizes components oriented toward
    three dimensions: user interaction, chain, and flow control. The user interaction
    represents the front-end GUI widgets that facilitate user-agent interaction modes.
    Relying solely on chat is often not efficient enough to engage with users. Therefore,
    AI2Apps offers over 50 GUI widgets to support agent development, including menus,
    buttons, charts, and more. These widgets enable agents to interact with users
    in a manner akin to real-world applications. The chain represents the backend
    sequential flow that includes LLMs, prompts, code, agents, and other tools as
    visual components. The flow control enables developers to express the logic of
    applications, incorporating components such as connectors, branches, array loops,
    summaries, and error handlers. As a result, developers can easily add and configure
    them without having to manually write extensive code. This not only enhances development
    efficiency, but also reduces the likelihood of errors.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化组件。原型画布将组件可视化为面向三个维度：用户交互、链和流控制。用户交互表示前端GUI小部件，促进用户与代理的交互模式。仅依赖聊天通常不足以有效地与用户互动。因此，AI2Apps提供了超过50个GUI小部件以支持代理开发，包括菜单、按钮、图表等。这些小部件使代理能够以类似于现实世界应用程序的方式与用户互动。链表示包括LLMs、提示、代码、代理和其他工具的后端顺序流作为可视化组件。流控制使开发人员能够表达应用程序的逻辑，包含连接器、分支、数组循环、摘要和错误处理程序等组件。因此，开发人员可以轻松地添加和配置这些组件，而无需手动编写大量代码。这不仅提高了开发效率，而且减少了错误的可能性。
- en: Code Sync. Traditional development approaches struggle to maintain real-time
    synchronization between the initial design and code implementation, rendering
    design documents less effective as references during maintenance phases. AI2Apps’
    innovative “Design and Coding at Same Time” mode guarantees constant alignment
    between design and implementation, effectively eliminating any discrepancies between
    the envisioned design and the actual code.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 代码同步。传统开发方法难以维持初始设计和代码实现之间的实时同步，这使得设计文档在维护阶段作为参考时效果减弱。AI2Apps 的创新“设计与编码同时进行”模式保证了设计与实现之间的持续对齐，有效消除了设计设想与实际代码之间的任何差异。
- en: 'Prototyping Canvas Code Editor Agent Debugger Deployment Tool Name Topology
    Components Code Sync AI Copilot Multi-lang Breakpoint Step Run Trace Code App
    Visual IDE: AI2Apps (Ours)^∗ ✓ ✓ Two-way ✓ ✓ ✓ ✓ ✓ ✓ Open IDE: Prompt flow w/
    VScode (Microsoft, [2023c](#bib.bib21)) ✓ ✗ Two-way ✗ ✗ ✓ ✓ ✓ ✓ Open Semantic
    Kernel w/ VScode (Microsoft, [2023e](#bib.bib23)) ✗ ✗ ✗ ✗ ✓ ✓ ✓ ✗ ✓ Open LLMOps
    Platform: GPTs (Openai, [2023](#bib.bib27)) ✗ ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✗ Closed LangSmith
    (LangChain, [2023b](#bib.bib15)) ✗ ✓ ✗ ✗ ✓ ✓ ✓ ✓ ✓ Closed Autogen Studio (Microsoft,
    [2023a](#bib.bib19)) ✗ ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✓ Closed Appbuilder (Baidubce, [2023a](#bib.bib2))
    ✗ ✓ ✗ ✗ ✓ ✗ ✗ ✗ ✓ Closed Coze (ByteDance, [2023](#bib.bib7)) ✓ ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✗
    Closed AgentScope^∗ (Gao et al., [2024](#bib.bib11)) ✗ ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✓ Closed
    OpenAgent^∗ (Xie et al., [2023](#bib.bib34)) ✗ ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✗ Closed Dify^∗ (LangGenius,
    [2023](#bib.bib16)) ✗ ✓ One-way ✗ ✓ ✗ ✗ ✗ ✓ Closed Langflow^∗ (Logspace, [2023](#bib.bib18))
    ✓ ✓ One-way ✗ ✗ ✗ ✗ ✗ ✓ Closed Flowise^∗ (FlowiseAI, [2023](#bib.bib10)) ✓ ✓ One-way
    ✗ ✗ ✗ ✗ ✗ ✓ Closed Bisheng^∗ (Dataelement, [2023](#bib.bib9)) ✓ ✓ One-way ✗ ✗
    ✗ ✗ ✗ ✓ Closed SDK: Prompt flow^∗ (Microsoft, [2023b](#bib.bib20)) ✗ ✗ ✗ ✗ ✗ ✗
    ✗ ✗ ✓ ✗ Semantic Kernel^∗ (Microsoft, [2023d](#bib.bib22)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗
    AutoGPT^∗ (AutoGPT, [2023](#bib.bib1)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ BabyAGI^∗ (Nakajima,
    [2023](#bib.bib25)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ LangChain^∗ (LangChain, [2023a](#bib.bib14))
    ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ Autogen^∗ (Wu et al., [2023](#bib.bib32)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗
    ✓ ✗ MetaGPT^∗ (Hong et al., [2023](#bib.bib12)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ AppBuilder-SDK^∗
    (Baidubce, [2023b](#bib.bib3)) ✗ ✓ ✗ ✗ ✓ ✗ ✗ ✗ ✓ ✗ Camel^∗ (Li et al., [2023](#bib.bib17))
    ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ Closed AgentVerse^∗ (Chen et al., [2023](#bib.bib8)) ✗ ✗ ✗ ✗
    ✗ ✗ ✗ ✗ ✓ Closed'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '原型画布 代码编辑器 代理调试器 部署工具 名称 拓扑 组件 代码同步 AI Copilot 多语言 断点 步骤运行 跟踪代码 应用 可视化 IDE:
    AI2Apps (我们的)^∗ ✓ ✓ 双向 ✓ ✓ ✓ ✓ ✓ ✓ 开放 IDE: Prompt flow w/ VScode (Microsoft, [2023c](#bib.bib21))
    ✓ ✗ 双向 ✗ ✗ ✓ ✓ ✓ ✓ 开放 Semantic Kernel w/ VScode (Microsoft, [2023e](#bib.bib23))
    ✗ ✗ ✗ ✗ ✓ ✓ ✓ ✗ ✓ 开放 LLMOps 平台: GPTs (Openai, [2023](#bib.bib27)) ✗ ✓ ✗ ✗ ✗ ✗
    ✗ ✗ ✗ 封闭 LangSmith (LangChain, [2023b](#bib.bib15)) ✗ ✓ ✗ ✗ ✓ ✓ ✓ ✓ ✓ 封闭 Autogen
    Studio (Microsoft, [2023a](#bib.bib19)) ✗ ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✓ 封闭 Appbuilder (Baidubce,
    [2023a](#bib.bib2)) ✗ ✓ ✗ ✗ ✓ ✗ ✗ ✗ ✓ 封闭 Coze (ByteDance, [2023](#bib.bib7)) ✓
    ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✗ 封闭 AgentScope^∗ (Gao et al., [2024](#bib.bib11)) ✗ ✓ ✗ ✗ ✗ ✗ ✗
    ✗ ✓ 封闭 OpenAgent^∗ (Xie et al., [2023](#bib.bib34)) ✗ ✓ ✗ ✗ ✗ ✗ ✗ ✗ ✗ 封闭 Dify^∗
    (LangGenius, [2023](#bib.bib16)) ✗ ✓ 单向 ✗ ✓ ✗ ✗ ✗ ✓ 封闭 Langflow^∗ (Logspace, [2023](#bib.bib18))
    ✓ ✓ 单向 ✗ ✗ ✗ ✗ ✗ ✓ 封闭 Flowise^∗ (FlowiseAI, [2023](#bib.bib10)) ✓ ✓ 单向 ✗ ✗ ✗ ✗
    ✗ ✓ 封闭 Bisheng^∗ (Dataelement, [2023](#bib.bib9)) ✓ ✓ 单向 ✗ ✗ ✗ ✗ ✗ ✓ 封闭 SDK: Prompt
    flow^∗ (Microsoft, [2023b](#bib.bib20)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ Semantic Kernel^∗
    (Microsoft, [2023d](#bib.bib22)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ AutoGPT^∗ (AutoGPT, [2023](#bib.bib1))
    ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ BabyAGI^∗ (Nakajima, [2023](#bib.bib25)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓
    ✗ LangChain^∗ (LangChain, [2023a](#bib.bib14)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ Autogen^∗ (Wu
    et al., [2023](#bib.bib32)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ MetaGPT^∗ (Hong et al., [2023](#bib.bib12))
    ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ ✗ AppBuilder-SDK^∗ (Baidubce, [2023b](#bib.bib3)) ✗ ✓ ✗ ✗ ✓
    ✗ ✗ ✗ ✓ ✗ Camel^∗ (Li et al., [2023](#bib.bib17)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ 封闭 AgentVerse^∗
    (Chen et al., [2023](#bib.bib8)) ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✗ ✓ 封闭'
- en: 'Table 1: Comparison between AI2Apps and current existing works via the integrity
    of development tools. The “^∗” indicates that the project has been open-sourced.
    The “Two-way” means that the two-way synchronization in real-time between the
    prototyping canvas and the code editor. The “One-way” means only one-way synchronization.
    The “Open” indicates that the generated application belongs to the user’s personal
    copyright and can be freely used. The “Closed” indicates that the generated application
    can only be deployed within the platform itself or encapsulated as an API. All
    statistics in the table are collected by March 2024.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '表 1: AI2Apps 与当前现有作品在开发工具完整性方面的比较。“^∗” 表示项目已开源。“双向”表示原型画布和代码编辑器之间的实时双向同步。“单向”表示仅有单向同步。“开放”表示生成的应用程序属于用户个人版权，可以自由使用。“封闭”表示生成的应用程序只能在平台内部部署或封装为
    API。表中的所有统计数据均截至 2024 年 3 月收集。'
- en: '| Name | User Interaction | Chain | Flow Control |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 用户互动 | 链接 | 流程控制 |'
- en: '| Visual IDE: |  |  |  |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 可视化 IDE: |  |  |  |'
- en: '| AI2Apps (Ours)^∗ | ✓ | ✓ | ✓ |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| AI2Apps (我们)^∗ | ✓ | ✓ | ✓ |'
- en: '| IDE: |  |  |  |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| IDE： |  |  |  |'
- en: '| PromptFlow w/ VScode (Microsoft, [2023c](#bib.bib21)) | ✗ | ✓ | ✗ |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| PromptFlow w/ VScode (Microsoft, [2023c](#bib.bib21)) | ✗ | ✓ | ✗ |'
- en: '| Semantic Kernel w/ VScode (Microsoft, [2023e](#bib.bib23)) | ✗ | ✗ | ✗ |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| Semantic Kernel w/ VScode (Microsoft, [2023e](#bib.bib23)) | ✗ | ✗ | ✗ |'
- en: '| LLMOps Platform: |  |  |  |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| LLMOps 平台： |  |  |  |'
- en: '| GPTs (Openai, [2023](#bib.bib27)) | ✗ | Limited | ✗ |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| GPTs (Openai, [2023](#bib.bib27)) | ✗ | 限制 | ✗ |'
- en: '| LangSmith (LangChain, [2023b](#bib.bib15)) | ✗ | Limited | ✗ |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| LangSmith (LangChain, [2023b](#bib.bib15)) | ✗ | 限制 | ✗ |'
- en: '| Autogen Studio (Microsoft, [2023a](#bib.bib19)) | ✗ | Limited | ✗ |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| Autogen Studio (Microsoft, [2023a](#bib.bib19)) | ✗ | 限制 | ✗ |'
- en: '| Appbuilder (Baidubce, [2023a](#bib.bib2)) | ✗ | Limited | ✗ |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| Appbuilder (Baidubce, [2023a](#bib.bib2)) | ✗ | 限制 | ✗ |'
- en: '| Coze (ByteDance, [2023](#bib.bib7)) | ✗ | ✓ | ✗ |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| Coze (ByteDance, [2023](#bib.bib7)) | ✗ | ✓ | ✗ |'
- en: '| AgentScope^∗ (Gao et al., [2024](#bib.bib11)) | ✗ | Limited | ✗ |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| AgentScope^∗ (Gao 等, [2024](#bib.bib11)) | ✗ | 限制 | ✗ |'
- en: '| OpenAgent^∗ (Xie et al., [2023](#bib.bib34)) | ✗ | Limited | ✗ |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| OpenAgent^∗ (Xie 等, [2023](#bib.bib34)) | ✗ | 限制 | ✗ |'
- en: '| Dify^∗ (LangGenius, [2023](#bib.bib16)) | ✗ | ✓ | ✗ |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| Dify^∗ (LangGenius, [2023](#bib.bib16)) | ✗ | ✓ | ✗ |'
- en: '| Langflow^∗ (Logspace, [2023](#bib.bib18)) | ✗ | ✓ | ✗ |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| Langflow^∗ (Logspace, [2023](#bib.bib18)) | ✗ | ✓ | ✗ |'
- en: '| Flowise^∗ (FlowiseAI, [2023](#bib.bib10)) | ✗ | ✓ | ✗ |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| Flowise^∗ (FlowiseAI, [2023](#bib.bib10)) | ✗ | ✓ | ✗ |'
- en: '| Bisheng^∗ (Dataelement, [2023](#bib.bib9)) | ✗ | ✓ | ✗ |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| Bisheng^∗ (Dataelement, [2023](#bib.bib9)) | ✗ | ✓ | ✗ |'
- en: '| SDK: |  |  |  |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| SDK： |  |  |  |'
- en: '| Prompt flow^∗ (Microsoft, [2023b](#bib.bib20)) | ✗ | ✗ | ✗ |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| Prompt flow^∗ (Microsoft, [2023b](#bib.bib20)) | ✗ | ✗ | ✗ |'
- en: '| Semantic Kernel^∗ (Microsoft, [2023d](#bib.bib22)) | ✗ | ✗ | ✗ |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| Semantic Kernel^∗ (Microsoft, [2023d](#bib.bib22)) | ✗ | ✗ | ✗ |'
- en: '| AutoGPT^∗ (AutoGPT, [2023](#bib.bib1)) | ✗ | ✗ | ✗ |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| AutoGPT^∗ (AutoGPT, [2023](#bib.bib1)) | ✗ | ✗ | ✗ |'
- en: '| BabyAGI^∗ (Nakajima, [2023](#bib.bib25)) | ✗ | ✗ | ✗ |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| BabyAGI^∗ (Nakajima, [2023](#bib.bib25)) | ✗ | ✗ | ✗ |'
- en: '| LangChain^∗ (LangChain, [2023a](#bib.bib14)) | ✗ | ✗ | ✗ |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| LangChain^∗ (LangChain, [2023a](#bib.bib14)) | ✗ | ✗ | ✗ |'
- en: '| Autogen^∗ (Wu et al., [2023](#bib.bib32)) | ✗ | ✗ | ✗ |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| Autogen^∗ (Wu 等, [2023](#bib.bib32)) | ✗ | ✗ | ✗ |'
- en: '| MetaGPT^∗ (Hong et al., [2023](#bib.bib12)) | ✗ | ✗ | ✗ |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| MetaGPT^∗ (Hong 等, [2023](#bib.bib12)) | ✗ | ✗ | ✗ |'
- en: '| AppBuilder-SDK^∗ (Baidubce, [2023b](#bib.bib3)) | ✗ | ✗ | ✗ |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| AppBuilder-SDK^∗ (Baidubce, [2023b](#bib.bib3)) | ✗ | ✗ | ✗ |'
- en: '| Camel^∗ (Li et al., [2023](#bib.bib17)) | ✗ | ✗ | ✗ |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| Camel^∗ (Li 等, [2023](#bib.bib17)) | ✗ | ✗ | ✗ |'
- en: '| AgentVerse^∗ (Chen et al., [2023](#bib.bib8)) | ✗ | ✗ | ✗ |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| AgentVerse^∗ (Chen 等, [2023](#bib.bib8)) | ✗ | ✗ | ✗ |'
- en: 'Table 2: Comparison between AI2Apps and current existing works via the visuality
    of components. The “^∗” indicates that the project has been open-sourced. The
    “Limited” means that the chain cannot be visualized in an intuitive topology diagram.
    All statistics in the table are collected by March 2024.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2：通过组件的可视性比较 AI2Apps 与现有工作。符号 “^∗” 表示该项目已开源。“限制”表示链条无法在直观的拓扑图中可视化。所有统计数据截至
    2024 年 3 月。
- en: 3.2 Code Editor
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2 代码编辑器
- en: 'A code editor is a software tool used by developers to write and edit code
    for software development projects. In code mode, AI2Apps features the AI-assisted
    code editor designed to help developers write high-quality application code. Its
    features include:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 代码编辑器是一种用于软件开发项目的开发工具。AI2Apps 在代码模式下提供了 AI 辅助的代码编辑器，旨在帮助开发者编写高质量的应用代码。其功能包括：
- en: AI Copilot. Our code editor comes with an AI copilot that assists users in generating
    subsequent code at the cursor position based on context or rewriting the entire
    document directly. We allow users to freely modify the topology of the AI copilot
    to enhance its functionality, or users can integrate an external AI copilot through
    APIs.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: AI 副驾驶。我们的代码编辑器配备了 AI 副驾驶，能够根据上下文在光标位置生成后续代码或直接重写整个文档。我们允许用户自由修改 AI 副驾驶的拓扑以增强其功能，或通过
    API 集成外部 AI 副驾驶。
- en: AI UI Creator. The AI UI creator can generate standardized UI code that users
    need through a conversational interface, utilizing over 50 GUI widgets, and display
    it in the prototyping canvas.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: AI UI 创建器。AI UI 创建器可以通过对话界面生成用户所需的标准化 UI 代码，利用超过 50 个 GUI 组件，并在原型画布上展示。
- en: Multi-language. The code editor supports programming languages in any form,
    including JavaScript, Python, and others, enabling developers from any programming
    background to freely integrate their own code.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 多语言支持。代码编辑器支持任何形式的编程语言，包括 JavaScript、Python 等，允许来自不同编程背景的开发者自由地集成自己的代码。
- en: 3.3 Agent Debugger
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3 Agent 调试器
- en: 'The design concept of the agent debugger draws inspiration from the debugging
    functionality found in general-purpose IDEs. Unlike traditional IDEs, which focus
    on debugging code line by line, the agent debugger is specifically tailored to
    follow the trajectory of topology diagrams. Its features include:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 代理调试器的设计理念借鉴了通用 IDE 的调试功能。与传统 IDE 逐行调试代码不同，代理调试器专门用于跟踪拓扑图的轨迹。其特点包括：
- en: Breakpoint. Setting breakpoints allows pausing execution at specific locations
    within the topology diagram. This enables developers to inspect the program’s
    state at particular time points, including variable values, memory status, and
    the program’s execution path. Setting breakpoints is an effective troubleshooting
    method, especially when dealing with complex errors and performance issues.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Breakpoint。设置断点可以在拓扑图的特定位置暂停执行。这使开发人员能够检查程序在特定时间点的状态，包括变量值、内存状态和程序的执行路径。设置断点是一种有效的故障排除方法，尤其在处理复杂错误和性能问题时。
- en: Step Run. The step run feature allows developers to execute the topology diagram
    node by node or to jump into a subgraph within a specific agent, enabling a more
    detailed examination of the execution flow and the state at various time points.
    This method is particularly useful for understanding the execution path of the
    topology diagram, identifying logic errors, and inspecting variable changes.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Step Run。步进运行功能允许开发人员逐节点执行拓扑图，或跳转到特定代理的子图，从而对执行流程和各个时间点的状态进行更详细的检查。这种方法特别有助于理解拓扑图的执行路径，识别逻辑错误，以及检查变量变化。
- en: Trace. The trace feature visually represents the flow trajectory of data variables
    on the topology diagram. Users can save and download trace logs in JSON format
    for subsequent analysis of agents.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Trace。追踪功能以可视化的方式表示数据变量在拓扑图上的流动轨迹。用户可以保存和下载 JSON 格式的追踪日志，以便后续分析代理。
- en: GPT Mimic. During the phase of invoking external LLM APIs, users can set up
    GPT mimic. When the predefined conditions are met, the API call will no longer
    go through the network but will directly return the results set by the GPT mimic.
    This approach can significantly reduce token costs and improve debugging efficiency.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: GPT Mimic。在调用外部 LLM API 的阶段，用户可以设置 GPT 模拟。当满足预定义条件时，API 调用将不再通过网络，而是直接返回由 GPT
    模拟设置的结果。这种方法可以显著降低令牌成本，并提高调试效率。
- en: 3.4 Deployment Tool
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4 部署工具
- en: Most existing mainstream development platforms develop applications that heavily
    rely on the platform’s own runtime environment, hindering the development of AI
    agent applications. However, AI2Apps, as a Visual IDE, integrates multiple deployment
    tools and supports users in directly building externally deployable applications.
    Completed AI agents can be packaged as standalone web/mobile apps. They can also
    be integrated as AI extensions into existing websites/apps with just a few lines
    of code.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现有主流开发平台开发的应用程序在很大程度上依赖于平台自身的运行环境，这阻碍了 AI 代理应用程序的发展。然而，AI2Apps 作为一个可视化 IDE，集成了多个部署工具，并支持用户直接构建可外部部署的应用程序。完成的
    AI 代理可以打包成独立的 Web/移动应用程序，也可以通过几行代码将其作为 AI 扩展集成到现有网站/应用程序中。
- en: 3.5 Plugin Extension System
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.5 插件扩展系统
- en: AI2Apps Extension (AAE) is a plugin extension system specifically designed for
    AI2Apps. AAE offers developers extensive opportunities to enhance applications
    by leveraging open technologies as plugins and draggable components. AAE features
    reusable components that allow developers to combine existing ones or create new
    ones. Developers can share their custom components by publishing them as packages,
    thereby broadening AI2Apps’ functionality through the AAE system.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: AI2Apps 扩展（AAE）是专门为 AI2Apps 设计的插件扩展系统。AAE 为开发人员提供了通过利用开放技术作为插件和可拖拽组件来增强应用程序的广泛机会。AAE
    具有可重用组件，允许开发人员将现有组件组合在一起或创建新的组件。开发人员可以通过发布自定义组件作为包来共享它们，从而通过 AAE 系统扩展 AI2Apps
    的功能。
- en: In our screencast video⁵⁵5[https://youtu.be/tQTqxk1LzzU](https://youtu.be/tQTqxk1LzzU)
    we showcase how a new plugin with 20 components enables web agent applications
    to mimic human-like browsing behavior. Through web extension components, AI2Apps
    is equipped with comprehensive control over web pages, enabling actions such as
    opening/switching pages, reading page content, filling/modifying page content,
    simulating user behavior, and more.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的视频录制中⁵⁵5[https://youtu.be/tQTqxk1LzzU](https://youtu.be/tQTqxk1LzzU)展示了一个具有20个组件的新插件如何使Web代理应用程序模拟类似人类的浏览行为。通过Web扩展组件，AI2Apps具备了对网页的全面控制，能够执行如打开/切换页面、读取页面内容、填写/修改页面内容、模拟用户行为等操作。
- en: 3.6 Management System
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.6 管理系统
- en: 'Management System provides various underlying functional support for AI2Apps,
    including:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 管理系统为AI2Apps提供了各种底层功能支持，包括：
- en: Web-OS System. Based on web API technology, it provides a complete set of desktop
    operating system functions for AI2Apps. Examples include file system, multi-task
    support, network call. It offers users a development experience that is comparable
    to native operating systems, yet more convenient and secure.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Web-OS系统。基于Web API技术，它为AI2Apps提供了一整套桌面操作系统功能。例如文件系统、多任务支持、网络调用。它为用户提供了与本地操作系统相媲美的开发体验，同时更为便捷和安全。
- en: 'Runtime Manger. It provides specialized runtime foundational functions for
    AI-oriented applications, including: application management/scheduling, plugin
    extension/control, integration of AI functionality components, etc.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 运行时管理器。为AI导向应用程序提供专门的运行时基础功能，包括：应用程序管理/调度、插件扩展/控制、AI功能组件集成等。
- en: Package Manager. It extends the capabilities of AI2Apps through packages, which
    include services for building, publishing, sharing packages, as well as installation
    and upgrades.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 包管理器。通过包扩展了AI2Apps的功能，包括构建、发布、分享包的服务，以及安装和升级。
- en: 4 Case Study and Usage
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 案例研究与使用
- en: '![Refer to caption](img/c83a64f9cdbf59bae7e875dfb2fb0851.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/c83a64f9cdbf59bae7e875dfb2fb0851.png)'
- en: 'Figure 3: Screenshot of our usage assistant built by AI2Apps.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：AI2Apps构建的使用助手的截图。
- en: 4.1 Case Study
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.1 案例研究
- en: 'We conduct a case study and find substantial efficiency improvements. In this
    case, we initially utilized AI2Apps to build a complex Agent application for writing
    short stories. It allows specifying drawing styles, precise unlimited-length writing
    with the ability to include covers and illustrations, and possesses powerful editing
    capabilities for articles. It supports paragraph-by-paragraph modifications, including
    content and images, and provides the option to choose whether AI assistance is
    used during editing. We conducted four sets of controlled experiments by clearing
    all prompts from the agent and having eight volunteers attempt to restore the
    functionality of the original agent, with half using the agent debugger and the
    other half without it. With the help of the agent debugger, AI2Apps reduced token
    consumption and API calls when debugging a story writing multimodal agent application
    by approximately 90% and 80%, respectively. The agent debugger user interface
    is shown in Figure [3](#S4.F3 "Figure 3 ‣ 4 Case Study and Usage ‣ AI2Apps: A
    Visual IDE for Building LLM-based AI Agent Applications"). This agent project
    can be accessed at [https://github.com/Avdpro/StoryWriter](https://github.com/Avdpro/StoryWriter)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进行了案例研究，并发现了显著的效率提升。在这个案例中，我们最初利用AI2Apps构建了一个复杂的代理应用程序，用于编写短篇小说。它允许指定绘图风格，精确的无限长度写作，并可以包括封面和插图，具有强大的文章编辑功能。它支持逐段修改，包括内容和图像，并提供了在编辑过程中是否使用AI辅助的选择。我们通过清除代理的所有提示，进行了四组受控实验，让八名志愿者尝试恢复原始代理的功能，其中一半使用代理调试器，另一半则没有。在使用代理调试器的帮助下，AI2Apps在调试故事写作多模态代理应用程序时，将令牌消耗和API调用分别减少了约90%和80%。代理调试器的用户界面如图[3](#S4.F3
    "图3 ‣ 4 案例研究与使用 ‣ AI2Apps：构建基于LLM的AI代理应用程序的可视化IDE")所示。这个代理项目可以访问[https://github.com/Avdpro/StoryWriter](https://github.com/Avdpro/StoryWriter)
- en: 4.2 Usage
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2 使用
- en: 'Given the extensive functionality of AI2Apps, this paper is unable to offer
    detailed usage guidelines within its confined scope. For more information about
    our usage example, please refer to [https://github.com/Avdpro/ai2apps](https://github.com/Avdpro/ai2apps).
    We’ve built a usage assistant using AI2Apps, as shown in Figure [3](#S4.F3 "Figure
    3 ‣ 4 Case Study and Usage ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent
    Applications"), allowing users to get started with AI2Apps by simply running it
    at [https://www.ai2apps.com](https://www.ai2apps.com).'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '鉴于 AI2Apps 的广泛功能，本文无法在其有限的范围内提供详细的使用指南。有关我们使用示例的更多信息，请参阅 [https://github.com/Avdpro/ai2apps](https://github.com/Avdpro/ai2apps)。我们使用
    AI2Apps 构建了一个使用助手，如图 [3](#S4.F3 "Figure 3 ‣ 4 Case Study and Usage ‣ AI2Apps:
    A Visual IDE for Building LLM-based AI Agent Applications") 所示，允许用户通过在 [https://www.ai2apps.com](https://www.ai2apps.com)
    运行 AI2Apps 即可快速上手。'
- en: 5 Comparison with Related Works
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5 与相关工作的比较
- en: 'In Figure [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ AI2Apps: A Visual IDE for
    Building LLM-based AI Agent Applications"), Table [1](#S3.T1 "Table 1 ‣ 3.1 Prototyping
    Canvas ‣ 3 The AI2Apps Framework ‣ AI2Apps: A Visual IDE for Building LLM-based
    AI Agent Applications") and Table [2](#S3.T2 "Table 2 ‣ 3.1 Prototyping Canvas
    ‣ 3 The AI2Apps Framework ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent
    Applications"), we present a detailed comparison of existing works through the
    perspectives of the integrity of development tools and the visuality of components.
    To the best of our knowledge, AI2Apps is the first LLM-based AI agent application
    development environment that achieves the engineering-level integrity and the
    full-stack visuality of a Visual IDE. Visual IDEs can integrate SDKs like traditional
    IDEs, and they can also be integrated into LLMOps platforms. Therefore, the open-source
    release of AI2Apps effectively fills the current gap in development technology,
    facilitating the advancement of AI agent applications.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '在图 [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ AI2Apps: A Visual IDE for Building
    LLM-based AI Agent Applications")、表 [1](#S3.T1 "Table 1 ‣ 3.1 Prototyping Canvas
    ‣ 3 The AI2Apps Framework ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent
    Applications") 和表 [2](#S3.T2 "Table 2 ‣ 3.1 Prototyping Canvas ‣ 3 The AI2Apps
    Framework ‣ AI2Apps: A Visual IDE for Building LLM-based AI Agent Applications")
    中，我们通过开发工具的完整性和组件的可视性两个方面详细比较了现有工作。尽我们所知，AI2Apps 是第一个实现工程级完整性和全栈可视性的 LLM 基础 AI
    代理应用开发环境。可视化 IDE 可以像传统 IDE 一样集成 SDK，也可以集成到 LLMOps 平台中。因此，AI2Apps 的开源发布有效填补了当前开发技术的空白，促进了
    AI 代理应用的发展。'
- en: 6 Conclusion
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6 结论
- en: We introduced AI2Apps, the first Visual IDE with full-cycle capabilities that
    empowers developers to efficiently build deployable LLM-based AI agent Applications.
    AI2Apps offers the engineering-level development tools and the full-stack visual
    components. It features a web-based interface with tools such as a prototyping
    canvas, an AI-powered code editor, a agent debugger, a management system, and
    deployment tools, alongside intuitive drag-and-drop components for code visualization.
    Additionally, we implemented a plugin extension system for this Visual IDE, offering
    developers extensive opportunities to enhance applications by freely leveraging
    open technologies. We conducted a case study and find substantial efficiency improvements.
    With the help of the agent debugger, AI2Apps can reduce token consumption and
    API calls when debugging a story writing multimodal agent application by approximately
    90% and 80%, respectively.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们介绍了 AI2Apps，这是一款具有全周期能力的第一个可视化 IDE，能够帮助开发人员高效构建可部署的 LLM 基础 AI 代理应用程序。AI2Apps
    提供了工程级开发工具和全栈可视化组件。它具有基于 Web 的界面，包含原型画布、AI 驱动的代码编辑器、代理调试器、管理系统和部署工具，并配有直观的拖放组件以进行代码可视化。此外，我们为这个可视化
    IDE 实现了一个插件扩展系统，为开发人员提供了广泛的机会，通过自由利用开放技术来增强应用程序。我们进行了案例研究，并发现效率有了显著提升。在调试一个故事编写多模态代理应用时，借助代理调试器，AI2Apps
    可以将令牌消耗和 API 调用分别减少约 90% 和 80%。
- en: Limitations
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限制
- en: As a Visual IDE, AI2Apps still cannot fully match the flexibility of traditional
    IDEs in app development, nor does it offer the operational capabilities of LLMOps
    platforms for deployed applications. However, its development convenience is noteworthy.
    we warmly welcome LLMOps platforms to integrate this work to enhance their offerings,
    thus jointly promoting related academic research.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个可视化 IDE，AI2Apps 仍无法完全匹配传统 IDE 在应用开发中的灵活性，也不具备 LLMOps 平台在部署应用中的操作能力。然而，它在开发便利性方面值得注意。我们热忱欢迎
    LLMOps 平台集成这项工作，以增强其功能，从而共同推动相关学术研究。
- en: Ethics Statement
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 伦理声明
- en: (1) This material is the authors’ own original work, which at this stage of
    project development has not been previously published elsewhere. (2) The paper
    is not currently being considered for publication elsewhere. (3) The paper reflects
    the authors’ own research and analysis in a truthful and complete manner. (4)
    Our work does not contain identity characteristics. It does not harm anyone. The
    eight participants in the case study part are volunteers recruited from students
    majoring in engineering. Before the case study experiments, all participants are
    provided with detailed guidance in both written and oral form. The only recorded
    user-related information is usernames, which are anonymized and used as identifiers
    to mark different participants. (5) AI2Apps is designed to help users to build
    deployable AI agent applications. (6) Our work does not involve LLM training or
    fine-tuning; we only use publicly available APIs permitted for research purposes.
    Therefore, there are no data-related risks associated with our approach.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: (1) 本材料是作者原创工作，目前阶段尚未在其他地方发表。 (2) 该论文目前未考虑在其他地方发表。 (3) 论文真实完整地反映了作者的研究和分析。 (4)
    我们的工作不涉及身份特征。它不会伤害任何人。案例研究部分的八位参与者是从工程专业的学生中招募的志愿者。在案例研究实验前，所有参与者都提供了详细的书面和口头指导。唯一记录的用户相关信息是用户名，这些用户名经过匿名处理并用作标识符以标记不同的参与者。
    (5) AI2Apps 旨在帮助用户构建可部署的 AI 智能体应用。 (6) 我们的工作不涉及 LLM 训练或微调；我们仅使用公开的、允许用于研究目的的 API。因此，我们的方法没有数据相关风险。
- en: References
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: References
- en: AutoGPT (2023) AutoGPT. 2023. Autogpt. [https://github.com/Significant-Gravitas/AutoGPT](https://github.com/Significant-Gravitas/AutoGPT).
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AutoGPT (2023) AutoGPT. 2023. Autogpt. [https://github.com/Significant-Gravitas/AutoGPT](https://github.com/Significant-Gravitas/AutoGPT).
- en: Baidubce (2023a) Baidubce. 2023a. Appbuilder. [https://cloud.baidu.com/product/AppBuilder](https://cloud.baidu.com/product/AppBuilder).
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Baidubce (2023a) Baidubce. 2023a. Appbuilder. [https://cloud.baidu.com/product/AppBuilder](https://cloud.baidu.com/product/AppBuilder).
- en: Baidubce (2023b) Baidubce. 2023b. Appbuilder-sdk. [https://github.com/baidubce/app-builder](https://github.com/baidubce/app-builder).
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Baidubce (2023b) Baidubce. 2023b. Appbuilder-sdk. [https://github.com/baidubce/app-builder](https://github.com/baidubce/app-builder).
- en: Boiko et al. (2023a) Daniil A Boiko, Robert MacKnight, and Gabe Gomes. 2023a.
    Emergent autonomous scientific research capabilities of large language models.
    *arXiv preprint arXiv:2304.05332*.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Boiko et al. (2023a) Daniil A Boiko, Robert MacKnight, 和 Gabe Gomes. 2023a.
    大型语言模型的突现自主科学研究能力。*arXiv 预印本 arXiv:2304.05332*。
- en: Boiko et al. (2023b) Daniil A Boiko, Robert MacKnight, Ben Kline, and Gabe Gomes.
    2023b. Autonomous chemical research with large language models. *Nature*, 624(7992):570–578.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Boiko et al. (2023b) Daniil A Boiko, Robert MacKnight, Ben Kline, 和 Gabe Gomes.
    2023b. 大型语言模型的自主化学研究。*Nature*, 624(7992):570–578。
- en: Bran et al. (2023) Andres M Bran, Sam Cox, Oliver Schilter, Carlo Baldassari,
    Andrew White, and Philippe Schwaller. 2023. Augmenting large language models with
    chemistry tools. In *NeurIPS 2023 AI for Science Workshop*.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bran et al. (2023) Andres M Bran, Sam Cox, Oliver Schilter, Carlo Baldassari,
    Andrew White, 和 Philippe Schwaller. 2023. 用化学工具增强大型语言模型。在 *NeurIPS 2023 AI for
    Science Workshop*。
- en: 'ByteDance (2023) ByteDance. 2023. Coze: Next-gen ai chatbot developing platform.
    [https://www.coze.com/](https://www.coze.com/).'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ByteDance (2023) ByteDance. 2023. Coze: 下一代 AI 聊天机器人开发平台。 [https://www.coze.com/](https://www.coze.com/).'
- en: 'Chen et al. (2023) Weize Chen, Yusheng Su, Jingwei Zuo, Cheng Yang, Chenfei
    Yuan, Chen Qian, Chi-Min Chan, Yujia Qin, Yaxi Lu, Ruobing Xie, et al. 2023. Agentverse:
    Facilitating multi-agent collaboration and exploring emergent behaviors in agents.
    *arXiv preprint arXiv:2308.10848*.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Chen et al. (2023) Weize Chen, Yusheng Su, Jingwei Zuo, Cheng Yang, Chenfei
    Yuan, Chen Qian, Chi-Min Chan, Yujia Qin, Yaxi Lu, Ruobing Xie, 等. 2023. Agentverse:
    促进多智能体协作并探索智能体中的突现行为。*arXiv 预印本 arXiv:2308.10848*。'
- en: Dataelement (2023) Dataelement. 2023. Bisheng. [https://github.com/dataelement/bisheng](https://github.com/dataelement/bisheng).
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dataelement (2023) Dataelement. 2023. Bisheng. [https://github.com/dataelement/bisheng](https://github.com/dataelement/bisheng).
- en: FlowiseAI (2023) FlowiseAI. 2023. Flowise. [https://github.com/FlowiseAI/Flowise](https://github.com/FlowiseAI/Flowise).
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FlowiseAI (2023) FlowiseAI. 2023. Flowise. [https://github.com/FlowiseAI/Flowise](https://github.com/FlowiseAI/Flowise).
- en: 'Gao et al. (2024) Dawei Gao, Zitao Li, Weirui Kuang, Xuchen Pan, Daoyuan Chen,
    Zhijian Ma, Bingchen Qian, Liuyi Yao, Lin Zhu, Chen Cheng, et al. 2024. Agentscope:
    A flexible yet robust multi-agent platform. *arXiv preprint arXiv:2402.14034*.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Gao et al. (2024) Dawei Gao, Zitao Li, Weirui Kuang, Xuchen Pan, Daoyuan Chen,
    Zhijian Ma, Bingchen Qian, Liuyi Yao, Lin Zhu, Chen Cheng, 等. 2024. Agentscope:
    一个灵活而强大的多智能体平台。*arXiv 预印本 arXiv:2402.14034*。'
- en: 'Hong et al. (2023) Sirui Hong, Mingchen Zhuge, Jonathan Chen, Xiawu Zheng,
    Yuheng Cheng, Jinlin Wang, Ceyao Zhang, Zili Wang, Steven Ka Shing Yau, Zijuan
    Lin, et al. 2023. Metagpt: Meta programming for multi-agent collaborative framework.
    In *The Twelfth International Conference on Learning Representations*.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Hong et al. (2023) Sirui Hong, Mingchen Zhuge, Jonathan Chen, Xiawu Zheng,
    Yuheng Cheng, Jinlin Wang, Ceyao Zhang, Zili Wang, Steven Ka Shing Yau, Zijuan
    Lin, 等. 2023. Metagpt: 元编程用于多智能体协作框架. 发表在 *第十二届国际学习表征会议*.'
- en: Kojima et al. (2022) Takeshi Kojima, Shixiang Shane Gu, Machel Reid, Yutaka
    Matsuo, and Yusuke Iwasawa. 2022. Large language models are zero-shot reasoners.
    *Advances in neural information processing systems*, 35:22199–22213.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kojima et al. (2022) Takeshi Kojima, Shixiang Shane Gu, Machel Reid, Yutaka
    Matsuo, 和 Yusuke Iwasawa. 2022. 大语言模型是零样本推理者. *神经信息处理系统进展*, 35:22199–22213.
- en: LangChain (2023a) LangChain. 2023a. Langchain. [https://github.com/langchain-ai/langchain](https://github.com/langchain-ai/langchain).
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LangChain (2023a) LangChain. 2023a. Langchain. [https://github.com/langchain-ai/langchain](https://github.com/langchain-ai/langchain).
- en: LangChain (2023b) LangChain. 2023b. Langsmith. [https://www.langchain.com/langsmith](https://www.langchain.com/langsmith).
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LangChain (2023b) LangChain. 2023b. Langsmith. [https://www.langchain.com/langsmith](https://www.langchain.com/langsmith).
- en: LangGenius (2023) LangGenius. 2023. Dify. [https://github.com/langgenius/dify](https://github.com/langgenius/dify).
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LangGenius (2023) LangGenius. 2023. Dify. [https://github.com/langgenius/dify](https://github.com/langgenius/dify).
- en: 'Li et al. (2023) Guohao Li, Hasan Abed Al Kader Hammoud, Hani Itani, Dmitrii
    Khizbullin, and Bernard Ghanem. 2023. Camel: Communicative agents for "mind" exploration
    of large language model society. In *Thirty-seventh Conference on Neural Information
    Processing Systems*.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Li et al. (2023) Guohao Li, Hasan Abed Al Kader Hammoud, Hani Itani, Dmitrii
    Khizbullin, 和 Bernard Ghanem. 2023. Camel: 用于“大语言模型社会”中的“心智”探索的交互代理. 发表在 *第三十七届神经信息处理系统会议*.'
- en: Logspace (2023) Logspace. 2023. Langflow. [https://github.com/logspace-ai/langflow](https://github.com/logspace-ai/langflow).
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Logspace (2023) Logspace. 2023. Langflow. [https://github.com/logspace-ai/langflow](https://github.com/logspace-ai/langflow).
- en: 'Microsoft (2023a) Microsoft. 2023a. Autogen studio 2.0: Revolutionizing ai
    agents. [https://autogen-studio.com/](https://autogen-studio.com/).'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '微软 (2023a) 微软. 2023a. Autogen Studio 2.0: 革新 AI 代理. [https://autogen-studio.com/](https://autogen-studio.com/).'
- en: Microsoft (2023b) Microsoft. 2023b. Prompt flow. [https://github.com/microsoft/promptflow](https://github.com/microsoft/promptflow).
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软 (2023b) 微软. 2023b. 提示流. [https://github.com/microsoft/promptflow](https://github.com/microsoft/promptflow).
- en: Microsoft (2023c) Microsoft. 2023c. Prompt flow for vscode. [https://marketplace.visualstudio.com/items?itemName=prompt-flow.prompt-flow](https://marketplace.visualstudio.com/items?itemName=prompt-flow.prompt-flow).
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软 (2023c) 微软. 2023c. 用于 vscode 的提示流. [https://marketplace.visualstudio.com/items?itemName=prompt-flow.prompt-flow](https://marketplace.visualstudio.com/items?itemName=prompt-flow.prompt-flow).
- en: Microsoft (2023d) Microsoft. 2023d. Semantic kernel. [https://github.com/microsoft/semantic-kernel](https://github.com/microsoft/semantic-kernel).
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软 (2023d) 微软. 2023d. 语义内核. [https://github.com/microsoft/semantic-kernel](https://github.com/microsoft/semantic-kernel).
- en: Microsoft (2023e) Microsoft. 2023e. Semantic kernel for vscode. [https://learn.microsoft.com/en-us/semantic-kernel/vs-code-tools/](https://learn.microsoft.com/en-us/semantic-kernel/vs-code-tools/).
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软 (2023e) 微软. 2023e. 用于 vscode 的语义内核. [https://learn.microsoft.com/en-us/semantic-kernel/vs-code-tools/](https://learn.microsoft.com/en-us/semantic-kernel/vs-code-tools/).
- en: Microsoft (2023f) Microsoft. 2023f. Visual studio code - open source. [https://github.com/microsoft/vscode](https://github.com/microsoft/vscode).
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软 (2023f) 微软. 2023f. Visual Studio Code - 开源. [https://github.com/microsoft/vscode](https://github.com/microsoft/vscode).
- en: Nakajima (2023) Yohei Nakajima. 2023. Babyagi. [https://github.com/yoheinakajima/babyagi](https://github.com/yoheinakajima/babyagi).
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nakajima (2023) Yohei Nakajima. 2023. Babyagi. [https://github.com/yoheinakajima/babyagi](https://github.com/yoheinakajima/babyagi).
- en: 'Nakano et al. (2021) Reiichiro Nakano, Jacob Hilton, Suchir Balaji, Jeff Wu,
    Long Ouyang, Christina Kim, Christopher Hesse, Shantanu Jain, Vineet Kosaraju,
    William Saunders, et al. 2021. Webgpt: Browser-assisted question-answering with
    human feedback. *arXiv preprint arXiv:2112.09332*.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Nakano et al. (2021) Reiichiro Nakano, Jacob Hilton, Suchir Balaji, Jeff Wu,
    Long Ouyang, Christina Kim, Christopher Hesse, Shantanu Jain, Vineet Kosaraju,
    William Saunders, 等. 2021. Webgpt: 浏览器辅助的问答系统与人工反馈. *arXiv 预印本 arXiv:2112.09332*.'
- en: Openai (2023) Openai. 2023. Explore gpts. [https://chat.openai.com/gpts](https://chat.openai.com/gpts).
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Openai (2023) Openai. 2023. 探索 GPTs. [https://chat.openai.com/gpts](https://chat.openai.com/gpts).
- en: Qian et al. (2023) Chen Qian, Xin Cong, Cheng Yang, Weize Chen, Yusheng Su,
    Juyuan Xu, Zhiyuan Liu, and Maosong Sun. 2023. Communicative agents for software
    development. *arXiv preprint arXiv:2307.07924*.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qian et al. (2023) 钱晨、聪欣、杨程、陈维泽、苏雨生、徐聚元、刘智远、孙茂松。2023。《Communicative agents for
    software development》。*arXiv 预印本 arXiv:2307.07924*。
- en: 'Schick et al. (2024) Timo Schick, Jane Dwivedi-Yu, Roberto Dessì, Roberta Raileanu,
    Maria Lomeli, Eric Hambro, Luke Zettlemoyer, Nicola Cancedda, and Thomas Scialom.
    2024. Toolformer: Language models can teach themselves to use tools. *Advances
    in Neural Information Processing Systems*, 36.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Schick et al. (2024) 希克·蒂莫、德维维迪-余·简、德西·罗贝托、雷拉努·罗伯塔、洛梅利·玛利亚、汉布罗·埃里克、泽特尔摩耶·卢克、坎切达·尼古拉、斯恰洛姆·托马斯。2024。《Toolformer:
    Language models can teach themselves to use tools》。*神经信息处理系统进展*，36。'
- en: Wang et al. (2023) Lei Wang, Chen Ma, Xueyang Feng, Zeyu Zhang, Hao Yang, Jingsen
    Zhang, Zhiyuan Chen, Jiakai Tang, Xu Chen, Yankai Lin, et al. 2023. A survey on
    large language model based autonomous agents. *arXiv preprint arXiv:2308.11432*.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wang et al. (2023) 王磊、马晨、冯雪阳、张泽宇、杨浩、张靖森、陈智远、唐佳凯、陈旭、林彦凯，等。2023。《A survey on large
    language model based autonomous agents》。*arXiv 预印本 arXiv:2308.11432*。
- en: Wei et al. (2022) Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Fei
    Xia, Ed Chi, Quoc V Le, Denny Zhou, et al. 2022. Chain-of-thought prompting elicits
    reasoning in large language models. *Advances in neural information processing
    systems*, 35:24824–24837.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wei et al. (2022) 韦杰森、王学志、达尔·舒尔曼斯、博斯玛滕、夏飞、艾德·奇、阮维·黎、周登尼，等。2022。《Chain-of-thought
    prompting elicits reasoning in large language models》。*神经信息处理系统进展*，35:24824–24837。
- en: 'Wu et al. (2023) Qingyun Wu, Gagan Bansal, Jieyu Zhang, Yiran Wu, Shaokun Zhang,
    Erkang Zhu, Beibin Li, Li Jiang, Xiaoyun Zhang, and Chi Wang. 2023. Autogen: Enabling
    next-gen llm applications via multi-agent conversation framework. *arXiv preprint
    arXiv:2308.08155*.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Wu et al. (2023) 吴青云、甘根·班萨尔、张杰宇、吴怡然、张少坤、朱尔康、李北宾、蒋莉、小云张、王池。2023。《Autogen: Enabling
    next-gen llm applications via multi-agent conversation framework》。*arXiv 预印本 arXiv:2308.08155*。'
- en: 'Xi et al. (2023) Zhiheng Xi, Wenxiang Chen, Xin Guo, Wei He, Yiwen Ding, Boyang
    Hong, Ming Zhang, Junzhe Wang, Senjie Jin, Enyu Zhou, et al. 2023. The rise and
    potential of large language model based agents: A survey. *arXiv preprint arXiv:2309.07864*.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Xi et al. (2023) 习智恒、陈文祥、郭鑫、何伟、丁一文、洪博洋、张明、王俊哲、金森杰、周恩宇，等。2023。《The rise and
    potential of large language model based agents: A survey》。*arXiv 预印本 arXiv:2309.07864*。'
- en: 'Xie et al. (2023) Tianbao Xie, Fan Zhou, Zhoujun Cheng, Peng Shi, Luoxuan Weng,
    Yitao Liu, Toh Jing Hua, Junning Zhao, Qian Liu, Che Liu, et al. 2023. Openagents:
    An open platform for language agents in the wild. *arXiv preprint arXiv:2310.10634*.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Xie et al. (2023) 谢天宝、周凡、程周军、石鹏、翁洛轩、刘一涛、涂静华、赵军宁、刘乾、刘车，等。2023。《Openagents: An
    open platform for language agents in the wild》。*arXiv 预印本 arXiv:2310.10634*。'
- en: 'Yao et al. (2022) Shunyu Yao, Jeffrey Zhao, Dian Yu, Nan Du, Izhak Shafran,
    Karthik R Narasimhan, and Yuan Cao. 2022. React: Synergizing reasoning and acting
    in language models. In *The Eleventh International Conference on Learning Representations*.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Yao et al. (2022) 姚顺宇、赵杰弗里、余滢、杜楠、伊扎克·沙夫兰、卡尔提克·R·纳拉辛汉、曹远。2022。《React: Synergizing
    reasoning and acting in language models》。发表于*第十一届国际学习表征会议*。'
