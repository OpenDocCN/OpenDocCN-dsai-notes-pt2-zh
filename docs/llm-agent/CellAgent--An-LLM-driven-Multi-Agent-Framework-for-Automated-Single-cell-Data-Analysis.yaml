- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-09-08 18:41:37'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'CellAgent: An LLM-driven Multi-Agent Framework for Automated Single-cell Data
    Analysis'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2407.09811](https://ar5iv.labs.arxiv.org/html/2407.09811)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: \equalcont
  prefs: []
  type: TYPE_NORMAL
- en: These authors contributed equally to this work. \equalcontThese authors contributed
    equally to this work. \equalcontThese authors contributed equally to this work.
    \equalcontThese authors contributed equally to this work. [2]\fnmJianye \surHao
    [1,3]\fnmJiajie \surPeng
  prefs: []
  type: TYPE_NORMAL
- en: '[1]\orgdivAI for Science Interdisciplinary Research Center, \orgnameSchool
    of Computer Science, Northwestern Polytechnical University, \orgaddress\streetNo.1
    Dongxiang Road, \cityXi’an, \countryChina 2]\orgdivCollege of Intelligence and
    Computing, \orgnameTianjin University, \orgaddress\streetNo.92 Weijin Road, \cityTianjin,
    \countryChina'
  prefs: []
  type: TYPE_NORMAL
- en: '[3]\orgdivKey Laboratory of Big Data Storage and Management, Northwestern Polytechnical
    University, Ministry of Industry and Information Technology, \orgaddress\streetNo.1
    Dongxiang Road, \cityXi’an, \countryChina'
  prefs: []
  type: TYPE_NORMAL
- en: \fnmYihang \surXiao    \fnmJinyi \surLiu    \fnmYan \surZheng    \fnmXiaohan
    \surXie    [jianye.hao@tju.edu.cn](mailto:jianye.hao@tju.edu.cn)    \fnmMingzhi
    \surLi    \fnmRuitao \surWang    \fnmFei \surNi    \fnmYuxiao \surLi    \fnmJintian
    \surLuo    \fnmShaoqing \surJiao    [jiajiepeng@nwpu.edu.cn](mailto:jiajiepeng@nwpu.edu.cn)
    * [ *
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Single-cell RNA sequencing (scRNA-seq) data analysis is crucial for biological
    research, as it enables the precise characterization of cellular heterogeneity.
    However, manual manipulation of various tools to achieve desired outcomes can
    be labor-intensive for researchers. To address this, we introduce CellAgent ([http://cell.agent4science.cn/](http://cell.agent4science.cn/)),
    an LLM-driven multi-agent framework, specifically designed for the automatic processing
    and execution of scRNA-seq data analysis tasks, providing high-quality results
    with no human intervention. Firstly, to adapt general LLMs to the biological field,
    CellAgent constructs LLM-driven biological expert roles—planner, executor, and
    evaluator—each with specific responsibilities. Then, CellAgent introduces a hierarchical
    decision-making mechanism to coordinate these biological experts, effectively
    driving the planning and step-by-step execution of complex data analysis tasks.
    Furthermore, we propose a self-iterative optimization mechanism, enabling CellAgent
    to autonomously evaluate and optimize solutions, thereby guaranteeing output quality.
    We evaluate CellAgent on a comprehensive benchmark dataset encompassing dozens
    of tissues and hundreds of distinct cell types. Evaluation results consistently
    show that CellAgent effectively identifies the most suitable tools and hyperparameters
    for single-cell analysis tasks, achieving optimal performance. This automated
    framework dramatically reduces the workload for science data analyses, bringing
    us into the “Agent for Science” era.
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Single-cell RNA sequencing (scRNA-seq) techniques have transformed molecular
    biology by allowing for the analysis of transcriptome profiles with unprecedented
    scale and precision [[1](#bib.bib1)]. Such advances have driven large-scale innovations
    in computational methods, resulting in over 1400 tools currently available for
    analyzing scRNA-seq data from various perspectives  [[2](#bib.bib2)]. These tools,
    including computational frameworks and software libraries [[3](#bib.bib3), [4](#bib.bib4),
    [5](#bib.bib5)], coupled with method benchmarks and best practice workflows [[6](#bib.bib6),
    [7](#bib.bib7)], lead to groundbreaking discoveries in biology [[8](#bib.bib8),
    [9](#bib.bib9)].
  prefs: []
  type: TYPE_NORMAL
- en: However, analyzing scRNA-seq data entails considerable complexity and demands
    specialized knowledge and expertise. The steps involved may include preprocessing,
    batch correction, clustering, marker gene visualization, cell type annotation,
    and trajectory inference, among others. To complete these steps, researchers must
    carefully execute a series of corresponding tools while configuring appropriate
    hyperparameters and models tailored to the specific characteristics of the biological
    data [[7](#bib.bib7)]. This requires researchers to possess not only advanced
    programming skills but also a strong biological background, further increasing
    the cost of conducting single-cell analysis tasks. Therefore, there is an urgent
    need for an intelligent tool capable of automatically assembling and executing
    existing tools to generate analysis results for scRNA-seq data. Such an automated
    tool could significantly reduce the technical barriers in the field of biology
    and remove obstacles in data analysis for biological scientists.
  prefs: []
  type: TYPE_NORMAL
- en: 'Recently, with the remarkable capabilities demonstrated by large language models
    (LLMs) [[10](#bib.bib10), [11](#bib.bib11), [12](#bib.bib12)], there has been
    growing research interest in LLM-driven autonomous AI agents capable of automatically
    handling tasks, such as MetaGPT [[13](#bib.bib13)] for software programming and
    Microsoft Copilot [[14](#bib.bib14)] for office suite assistance. These AI agents
    typically employ LLMs as the core of the agent’s brain, supplemented by necessary
    mechanisms such as memory and tools to expand their capabilities [[15](#bib.bib15),
    [16](#bib.bib16), [17](#bib.bib17)]. Inspired by these advancements, a novel question
    arises: How to employ LLMs to design a biologically proficient agent framework
    for automating single-cell data analysis tasks?'
  prefs: []
  type: TYPE_NORMAL
- en: Applying LLMs directly to complex scRNA-seq data analysis poses significant
    challenges. General LLMs lack comprehensive and accurate knowledge of specialized
    biological tools and concepts, leading to outputs that may lack reasonable biological
    significance. Moreover, LLMs struggle to comprehend the lengthy context involved
    in multi-step tasks, easily losing crucial information. Nevertheless, LLMs are
    unaware of these deficiencies, resulting in unreliable outcomes. Therefore, to
    develop specialized approaches that effectively integrate LLMs’ strengths with
    the specific requirements of scRNA-seq data analysis is crucial, for achieving
    efficient, professional, and automated task execution.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this paper, to address the aforementioned challenges, we propose a specialized,
    zero-code CellAgent, an LLM-driven multi-agent collaborative framework for scRNA-seq
    data analysis. CellAgent can directly comprehend natural language task descriptions,
    completing complex tasks with high quality through effective collaboration, autonomously.
    Firstly, considering the limitations of LLMs in understanding biological expertise,
    we manually gather a few crucial expert experiences and tools. Three types of
    biological expert roles driven by LLM are established: Planner, Executor, and
    Evaluator. To enhance the stability of the execution process and avoid handling
    lengthy steps in a single pass, CellAgent introduces a hierarchical decision-making
    mechanism, with upper-level task planning via Planner, and lower-level task execution
    via Executor. Furthermore, to guarantee high-quality solution outputs from CellAgent,
    we propose a self-iterative optimization mechanism, encouraging Executors to autonomously
    optimize the planning process by incorporating automated evaluation results and
    accounting for potential code execution exceptions. The Evaluator plays a crucial
    role in driving the iterative optimization process, possessing the ability to
    assess the quality of task solutions from a biological expert’s perspective. Through
    the effective collaboration of these biological experts, CellAgent finally possesses
    robust capabilities for automated scRNA-seq data analysis. Without requiring human
    intervention, CellAgent enables the end-to-end automatic execution of the entire
    workflow, ensuring the quality of output results effectively.'
  prefs: []
  type: TYPE_NORMAL
- en: We have developed a benchmark comprising more than 50 single-cell datasets,
    comprising dozens of tissues and encompassing hundreds of distinct cell types,
    encompassing both normal and disease samples. Experimental results on 22 datasets
    with expert-annotated labels demonstrate that CellAgent consistently achieves
    robust performance, matching or surpassing the performance levels of several best
    tools. On the entire dataset, CellAgent completes tasks in 92% of cases, more
    than doubling the task completion rate compared to direct utilization of GPT-4.
    This innovative approach offers a robust automated solution for data processing
    and analysis in single-cell transcriptomics research, substantially lowering the
    technical and financial barriers to entry. Also, CellAgent has the potential to
    be extensively applied in more biomedical research fields, driving more accurate
    and comprehensive biological discoveries.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/7caac168fb21af7b947f3c5689ae425b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: Schematic of the CellAgent Framework. a, Example of user input received
    by the CellAgent, comprising single-cell data and user-provided text information.
    b, Upon receiving user input, the Planner role first parses user intent and decomposes
    the task into subtasks. c, Illustration of final results, including results of
    individual subtasks and the final task outcome. d, Detailed view of the CellAgent’s
    processing flow for subtasks. The current subtask and historical code memory are
    inputted to an Executor, which initially retrieves tools and outputs available
    tools for this step. Subsequently, corresponding documentation for these tools
    is acquired, and the Executor derives solutions (text analysis and code generation)
    based on the documentation. These codes are executed in the code sandbox, and
    if exceptions are encountered, solutions are regenerated until successful execution
    of this task. Then, the Evaluator assesses the results of the current task and
    allows the Executor to optimize solutions. Ultimately, based on its evaluation
    of results under multiple solutions, the Evaluator aggregates results to obtain
    the final outcome of this step.'
  prefs: []
  type: TYPE_NORMAL
- en: 2 Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 2.1 A multi-agent collaborative automated workflow for single-cell RNA-seq analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The process of scRNA-seq data analysis is inherently complex and diverse. For
    analyzing a single-cell dataset, tools and parameters are usually required to
    be manually optimized. The optimal tools and parameters often vary among different
    datasets. To address this challenge, we introduce CellAgent, an LLM-driven sophisticated
    AI agent specialized in automating the entire workflow of scRNA-seq data analysis.
    CellAgent receives data along with a task description in natural language from
    the user as inputs (Figure [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ CellAgent:
    An LLM-driven Multi-Agent Framework for Automated Single-cell Data Analysis")a).
    Subsequently, CellAgent executes a series of automated processes, including task
    decomposition (Fig. [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ CellAgent: An LLM-driven
    Multi-Agent Framework for Automated Single-cell Data Analysis")b), sequential
    execution and optimization of subtasks (Fig. [1](#S1.F1 "Figure 1 ‣ 1 Introduction
    ‣ CellAgent: An LLM-driven Multi-Agent Framework for Automated Single-cell Data
    Analysis")c), and finally delivers the task results to the user (Fig. [1](#S1.F1
    "Figure 1 ‣ 1 Introduction ‣ CellAgent: An LLM-driven Multi-Agent Framework for
    Automated Single-cell Data Analysis")d).'
  prefs: []
  type: TYPE_NORMAL
- en: To enhance the use of LLMs in the context of scRNA-seq data analysis tasks and
    incorporate domain-specific biological knowledge, we design three distinct LLM-driven
    biological expert roles, including Planner, Executor and Evaluator. Then, CellAgent
    effectively organizes the collaboration of these expert roles, through a hierarchical
    decision-making framework and a self-iterative optimization mechanism. Such efficient
    collaboration enables each role to fulfill its responsibilities, facilitating
    effective information exchange and collectively achieving high-quality task completion.
  prefs: []
  type: TYPE_NORMAL
- en: 'Planner: To ensure the rational decomposition and step-by-step resolution of
    complex scRNA-seq data analysis tasks, similar to the process employed by human
    experts in data analysis, CellAgent introduces a hierarchical decision-making
    framework. With a precise understanding of the whole workflows related to scRNA-seq
    data analysis tasks, Planner firstly conducts higher-level planning based on user-provided
    data and requirements (Fig. [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ CellAgent:
    An LLM-driven Multi-Agent Framework for Automated Single-cell Data Analysis")b).
    The Planner possesses the ability to comprehend natural language instructions
    from the user accurately, identify data features, and design task plans judiciously.
    This plan includes necessary data preprocessing tasks such as quality control,
    high variable gene selection, and normalization, as well as potentially required
    analysis steps such as batch effect correction, cell type annotation, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Executor: Then, as shown in Fig. [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ CellAgent:
    An LLM-driven Multi-Agent Framework for Automated Single-cell Data Analysis")d,
    the lower-level Executors are responsible for sequentially executing the decomposed
    subtasks, providing detailed analysis and executable code. Notably, these executors
    possess a comprehensive understanding of the specific methodologies and tools
    utilized in scRNA-seq data analysis tasks, and they can acquire documentation
    for these tools, thereby mitigating code execution failures. If execution exceptions
    are detected, CellAgent will request Executor to resolve the issue until successful
    code execution is achieved.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Evaluator: Evaluator is responsible for assessing the quality of current results
    of specific data processing tasks akin to human experts, providing judgments on
    the effectiveness of various methods. Building upon effective execution of generated
    code, CellAgent proposes a self-iterative optimization mechanism to ensure the
    rationality of this solution. Specifically, based on self-evaluation results or
    potential code exceptions, Executor automatically optimizes the solutions through
    hyperparameter tuning or tool selection, leading to iterative improvement of outcomes.
    Finally, according to the Evaluator’s judgment, CellAgent outputs the best solution
    and corresponding result for this step.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To assess the performance of CellAgent, we conduct detailed evaluations in
    handling specific tasks: batch effect correction, cell type annotation, and trajectory
    inference. Our findings reveal that in the majority of cases, the outcomes yielded
    by CellAgent surpass those generated by other existing tools (Sec. 2.2-2.4). This
    elucidates that CellAgent, through effective collaboration among multiple LLM-driven
    agents, achieves the automation of the scRNA-seq data analysis. The automation
    process above encompasses tool invocation, code generation, code execution, exception
    handling, result evaluation, and solution optimization in a closed-loop fashion,
    culminating in the generation of reliable outcomes. To demonstrate the broader
    applicability of CellAgent across a spectrum of scRNA-seq data analysis tasks,
    we perform a thorough comparison using various types of datasets. The results
    show a remarkable comprehensive completion rate of 92% for CellAgent, doubling
    the performance of the GPT-4 model alone. Furthermore, CellAgent also outperforms
    other scRNA-seq data analysis tools across various tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/f124b1324906996d7858b596342a0873.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: Batch Correction. a, The performance of CellAgent and other batch
    correction algorithms on batch correction, bio-conservation, and overall scores,
    along with their programming languages. b, Violin plot shows the distribution
    of overall score between CellAgent and other methods across all datasets. c, The
    ranking of CellAgent and other methods across different datasets. d, UMAP plots
    show the performance of CellAgent on the heart datasets, using batch labels and
    cell type labels for coloring respectively.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.2 CellAgent enables efficient batch correction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Batch correction aims to eliminate non-biological variations in datasets from
    different batches, which stem from differences in experimental conditions, sample
    handling, or sequencing platforms. These batch effects can obscure or distort
    the actual biological signals [[18](#bib.bib18)]. Therefore, batch correction
    is a crucial step in single-cell analysis.
  prefs: []
  type: TYPE_NORMAL
- en: To evaluate the performance of CellAgent on batch correction, we applied it
    to nine datasets [[19](#bib.bib19)], covering major tissues or organs in the human
    body. We compared CellAgent with five advanced methods, including scVI [[20](#bib.bib20)],
    LIGER [[21](#bib.bib21)], Scanorama [[22](#bib.bib22)], Harmony [[23](#bib.bib23)]
    and Combat [[24](#bib.bib24)]. Ten metrics are used to evaluate these methods
    on their ability to remove batch effects while conserving biological variation.
    Among these metrics, some are for the removal of batch effects (batch correction),
    such as kBET [[25](#bib.bib25)] and $iLISI_{Graph}$ [[26](#bib.bib26)] and ARI [[27](#bib.bib27)].
    The overall score, derived from averaging ten metrics, serves as the final performance
    indicator [[18](#bib.bib18)].
  prefs: []
  type: TYPE_NORMAL
- en: 'The results indicate that CellAgent achieved top scores in both batch correction
    and bio-conservation (Fig. [2](#S2.F2 "Figure 2 ‣ 2.1 A multi-agent collaborative
    automated workflow for single-cell RNA-seq analysis ‣ 2 Results ‣ CellAgent: An
    LLM-driven Multi-Agent Framework for Automated Single-cell Data Analysis")a).
    The average overall score of CellAgent reached 0.684 across multiple datasets.
    CellAgent outperformed the suboptimal method, scVI scoring 0.642\. CellAgent achieved
    the most favorable distribution of overall scores compared with other methods,
    by observing the quantiles and density estimation curve of the violin plot (Fig. [2](#S2.F2
    "Figure 2 ‣ 2.1 A multi-agent collaborative automated workflow for single-cell
    RNA-seq analysis ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework
    for Automated Single-cell Data Analysis")b). The overall scores of CellAgent on
    different datasets are more concentrated, with a median of approximately 0.69,
    surpassing those of other methods. Additionally, CellAgent ranked first on four
    datasets, which demonstrated its advantage (Fig. [2](#S2.F2 "Figure 2 ‣ 2.1 A
    multi-agent collaborative automated workflow for single-cell RNA-seq analysis
    ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework for Automated Single-cell
    Data Analysis")c). The UMAP plots show that CellAgent removed the batch effect
    while preserving true cell types in the clustering result (Fig. [2](#S2.F2 "Figure
    2 ‣ 2.1 A multi-agent collaborative automated workflow for single-cell RNA-seq
    analysis ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework for Automated
    Single-cell Data Analysis")d). Cells of the same type, such as ventricle-enriched
    pericytes cells, myeloid cells, and stromal pericytes cells, from different batches
    are mixed together.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/c79ca316ef7aa6b7a2b0d307a640fdee.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: Cell Type Annotation a, The mean accuracy of cell type annotation
    results with labeled cell types, derived from samples of five distinct human tissues
    and mouse tissues. b, The accuracy of cell type annotation for the 17 clusters
    of human PBMC dataset. c, Detailed cell-type annotations of the human PBMC dataset
    with the CellAgent and expert-annotated cell type Annotations. d, Visualize the
    expression of LILR4A gene (PDCs marker) and CD79A gene(B cells marker) across
    clusters using UMAP plots and violin plots.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.3 CellAgent facilitates more accurate cell type annotation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Cell type annotation is a critical yet often time-consuming precursor step in
    the analysis of scRNA-seq data  [[28](#bib.bib28)]. Various tools have been developed
    for automated cell type annotation. However, these tools exhibit poor generalization
    capabilities, often performing well only on data from specific tissues or organs
    while performing poorly in others.
  prefs: []
  type: TYPE_NORMAL
- en: 'We conducted benchmarking tests on the performance of seven different methods
    in terms of their ability to correctly assign cell type annotations. The datasets
    used in the benchmarking originated from various tissues, including Human Peripheral
    Blood Mononuclear Cells [[29](#bib.bib29)], Human Liver [[30](#bib.bib30)], Human
    Lung [[31](#bib.bib31)], Human Pancreas [[32](#bib.bib32)], and Mouse Retina [[33](#bib.bib33)].
    The diversity of these datasets allowed us to evaluate CellAgent and other methods
    across different sequencing platforms, tissue types, and organisms. CellAgent
    showed superior performance in terms of average accuracy across all datasets (Fig. [3](#S2.F3
    "Figure 3 ‣ 2.2 CellAgent enables efficient batch correction ‣ 2 Results ‣ CellAgent:
    An LLM-driven Multi-Agent Framework for Automated Single-cell Data Analysis")a).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, CellAgent showed high accuracy on the human PMBC dataset, where
    there exist multiple similar subtypes. We evaluated the consistency between the
    CellAgent annotations and expert annotations of seventeen clusters in this dataset.
    Following the evaluation metric in [[28](#bib.bib28)], we categorized the results
    as ‘fully match’, ‘partially match’, and ‘mismatch’, assigning scores of 1, 0.5,
    and 0 respectively to each category. The annotation accuracy, revealing that CellAgent
    achieved ‘fully match’ labeling in ten out of seventeen clusters, ‘partially match’
    results in five clusters, and only one cluster with an ‘mismatch’ labeling result.
    Our model annotated 94% clusters of the PBMC dataset effectively, achieving a
    high level of accuracy (Fig. [3](#S2.F3 "Figure 3 ‣ 2.2 CellAgent enables efficient
    batch correction ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework
    for Automated Single-cell Data Analysis")b). The visualization of the annotation
    results on the human PBMC dataset, including a comparison with expert-annotated
    results, also demonstrates the annotations with CellAgent are close to the true
    cell type labels (Fig. [3](#S2.F3 "Figure 3 ‣ 2.2 CellAgent enables efficient
    batch correction ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework
    for Automated Single-cell Data Analysis")c and Supplementary FigX).'
  prefs: []
  type: TYPE_NORMAL
- en: 'In scRNA-seq data analysis, visualizing the expression of specific genes within
    each cluster or cell type is crucial. These visualizations are essential for understanding
    the underlying biological mechanisms. Given a specific genes, CellAgent also provides
    the function of generating gene expression umap plots and violin plots for users
    (Fig. [3](#S2.F3 "Figure 3 ‣ 2.2 CellAgent enables efficient batch correction
    ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework for Automated Single-cell
    Data Analysis")d).'
  prefs: []
  type: TYPE_NORMAL
- en: 2.4 CellAgent enhances the performance of trajectory inference
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Refer to caption](img/8187b827e747a92e38269eb1870184bc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4: Trajectory Inference. a, Comparison of the performance between CellAgent
    and other trajectory inference algorithms on gold standard datasets, along with
    their programming languages. b, Radar charts display the performance of CellAgent
    and other methods on the metrics, which are not covered in a. c, CellAgent’s output
    on the “aging hsc kowalczyk” dataset. one UMAP plot depicting trajectories colored
    by original cell types, another colored by cell type clusters optimized based
    on milestones within the trajectory, and the last colored by pseudo time. d, Heatmap
    of gene expression, with additional emphasis on the expression of milestones within
    the trajectory. The cell order in the heatmap is optimized according to the trajectory.'
  prefs: []
  type: TYPE_NORMAL
- en: Trajectory inference is employed to decode the temporal sequences of cell development
    and differentiation. It can reconstruct developmental trajectories from static
    single-cell data, unveil transitions between cell states, and identify changes
    in various biological properties over time [[34](#bib.bib34)]. This is crucial
    for understanding the mechanisms that determine cell fate and the associated complex
    biological processes. Although new trajectory inference algorithms have emerged
    in recent years, they are typically suited to specific datasets or topological
    structures [[35](#bib.bib35)]. Selecting the appropriate trajectory inference
    algorithm for researchers and discerning its biological significance remain both
    challenging and valuable.
  prefs: []
  type: TYPE_NORMAL
- en: Through experiments conducted on nine datasets with gold-standard trajectories
    (see Datasets section) [[34](#bib.bib34)]. We compared the performance between
    CellAgent and the other five trajectory inference methods, including Raceid stmid [[36](#bib.bib36)],
    Scorpius [[37](#bib.bib37)], Paga, Page tree [[38](#bib.bib38)], and Slingshot [[39](#bib.bib39)].
    Following previous study [[34](#bib.bib34)], we utilized $\mathit{cor}_{\textrm{dist}}$
    to measure topological similarity, branch matching, cellular position distances,
    and correlation of trajectory-specific genes for trajectory evaluation. The weighted
    average score of these metrics is used to measure the final performance [[34](#bib.bib34)].
  prefs: []
  type: TYPE_NORMAL
- en: 'CellAgent performed best across these datasets with an overall score of 0.496
    (Fig. [4](#S2.F4 "Figure 4 ‣ 2.4 CellAgent enhances the performance of trajectory
    inference ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework for Automated
    Single-cell Data Analysis")a). It surpassed Slingshot, the suboptimal method at
    0.473\. Additionally, CellAgent demonstrated advantages in multiple other metrics [[34](#bib.bib34)]
    such as $\mathit{NMSE}_{\textit{rf}}$ (Fig. [4](#S2.F4 "Figure 4 ‣ 2.4 CellAgent
    enhances the performance of trajectory inference ‣ 2 Results ‣ CellAgent: An LLM-driven
    Multi-Agent Framework for Automated Single-cell Data Analysis")b). On the “aging
    hsc kowalczyk” dataset, CellAgent revealed the developmental trajectory from LT-HSC
    cells, through ST-HSC cells, to the final differentiation into MPP cells (Fig. [4](#S2.F4
    "Figure 4 ‣ 2.4 CellAgent enhances the performance of trajectory inference ‣ 2
    Results ‣ CellAgent: An LLM-driven Multi-Agent Framework for Automated Single-cell
    Data Analysis")c). CellAgent also depicted the changes in their gene expression
    patterns (Fig. [4](#S2.F4 "Figure 4 ‣ 2.4 CellAgent enhances the performance of
    trajectory inference ‣ 2 Results ‣ CellAgent: An LLM-driven Multi-Agent Framework
    for Automated Single-cell Data Analysis")d). The expression of the CD48 and MPO
    genes gradually increased during the differentiation process. The accuracy and
    biological interpretability indicate that CellAgent can help scientists understand
    the mechanisms determining cell fate and related biological processes.'
  prefs: []
  type: TYPE_NORMAL
- en: 3 Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Single-cell RNA-seq is a powerful tool for characterizing cellular properties,
    yet it demands high efficiency and quality in advanced data analytics. In this
    paper, we introduced CellAgent, an LLM-driven automated agent specifically designed
    for single-cell analysis tasks for the first time, which enables high-quality
    and automated analysis of scRNA-seq data.
  prefs: []
  type: TYPE_NORMAL
- en: CellAgent is capable of automatically handling complex single-cell analysis
    tasks, with its key innovation lying in the effective collaboration among multiple
    bio-expert LLM roles. This automation capability stems from its use of powerful
    AI generative models, which are capable of understanding human natural language
    instructions and generating corresponding content. Notably, we found that GPT-4,
    a state-of-the-art LLM, has a foundational understanding of specific biological
    knowledge, including common gene markers and various single-cell analysis tasks.
    However, its limitations are evident in its propensity to confuse certain specialized
    concepts. To address this, CellAgent expands the LLM’s capability boundaries through
    a manually defined tool library and several experiential knowledge, thereby enhancing
    its proficiency in handling single-cell analysis tasks. Then, we create different
    bio-expert roles within CellAgent based on GPT-4, enabling each role to focus
    on solving specific processes. Subsequently, CellAgent enhances the efficiency
    of addressing complex tasks by connecting the task planner with various roles
    responsible for task execution through hierarchical planning. Also, by employing
    a self-iterative optimization mechanism and utilizing modules such as Tool retriever,
    Memory module, and Code sandbox, CellAgent further enhances the quality of output
    results.
  prefs: []
  type: TYPE_NORMAL
- en: It is also worth mentioning that CellAgent proposes using GPT-4V to automatically
    evaluate the results of batch correction and trajectory inference, guiding the
    self-iterative optimization process. To our knowledge, this is the first time
    a multi-modal LLM (MLLM) like GPT-4V has been applied to evaluate these results,
    as a replacement for human judgment. Additionally, CellAgent proposes the first
    attempt of using GPT-4 to effectively aggregate the results from cell type annotation
    results of different tools, obtaining a more reasonable final annotation. These
    developments provide new insights into applying LLMs (or MLLMs) to bioinformatics
    research.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, CellAgent is a versatile, extensible, and automated tool for scRNA-seq
    data analysis. Its process of task completion does not rely on human intervention,
    greatly reducing the difficulty and cost of data analysis. Also, its open architecture
    enables users to provide specific new knowledge and tools, allowing the CellAgent
    to better align with user expectations, as an ideal assistant for researchers.
    The emergence of CellAgent not only opens up new research directions in bioinformatics
    but also expands the application of generative AI in sciences, leading to potential
    new findings and a deeper understanding of biological systems.
  prefs: []
  type: TYPE_NORMAL
- en: Testing on several datasets with expert-annotated labels revealed that the results
    obtained by CellAgent are, in most cases, the best among all tools, demonstrating
    the powerful ability of CellAgent to automate scRNA-seq data analysis and ensure
    quality, reaching the level of human experts. The overall evaluation indicates
    that CellAgent significantly outperforms the data analysis process involving only
    a single GPT-4 model, illustrating that this multi-agent collaboration framework
    deeply taps into the potential of GPT-4 in handling single-cell data analysis
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: However, a notable limitation lies in the imperfect self-evaluation methods
    of the CellAgent. Presently, self-evaluation primarily relies on GPT-4V or GPT-4\.
    While these innovative evaluation processes contribute to self-optimization and
    ensure final effectiveness, CellAgent is limited to support a more diverse range
    of optimization directions. Therefore, when users have specific preferences regarding
    optimization goals, manual specification of evaluation processes can prompt CellAgent
    to optimize according to user expectations. Nevertheless, enabling CellAgent to
    efficiently and automatically integrate new tools provided by users to align with
    user requirements represents a valuable research direction for the next stage
    of development in AI agents for science.
  prefs: []
  type: TYPE_NORMAL
- en: 4 Methods
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 4.1 The composition of CellAgent
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Facing scRNA-seq data analysis tasks, CellAgent enables automated task decomposition,
    code execution, and iterative optimization. During this process, three LLM-driven
    biological expert roles and their communication and collaboration mechanisms serve
    as the core brain of CellAgent, responsible for thinking and providing solutions.
    Besides, to achieve efficient automation, auxiliary components such as memory $\mathcal{M}$
    are essential. These components enable CellAgent to effectively manage and execute
    tasks, allowing the three biological expert roles to focus on their thinking and
    providing efficient solutions, ensuring seamless automation of the whole workflow.
  prefs: []
  type: TYPE_NORMAL
- en: 4.1.1 Biological Expert Agents
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'CellAgent comprises three distinct roles of biological expert LLMs with different
    responsibilities, including Planner, Executor, and Evaluator. To distinguish these
    roles and enhance task execution efficiency, we collect a small amount of human
    expert experience about scRNA-seq data analysis in natural language and integrate
    necessary tools, then inform different LLMs about role assignments, specific expert
    experiences, and tools, thus constructing these biological expert roles. Notably,
    the user input of CellAgent includes three aspects: the data to be processed (${D}$).'
  prefs: []
  type: TYPE_NORMAL
- en: Planner
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Planner is designed to understand user requirements and data, and provide comprehensive
    task planning. Therefore, the system prompt for the Planner ($p^{p}_{\text{sys}}$
    sub-steps according these information is:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $\{t_{1},t_{2},...,t_{n}\}\leftarrow\mathcal{A}^{\text{LLM}}_{p}(p^{p}_{\text{sys}},u_{\text{task}},u_{\text{req}},u_{D},\psi(D)).$
    |  | (1) |'
  prefs: []
  type: TYPE_TB
- en: Executor
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Executor agents are included in CellAgent to enhance the efficiency of specific
    task execution, with the Tool Selector solely responsible for selecting available
    tools, and Code Programmer responsible for generating code to complete the current
    task based on the tools recommended.
  prefs: []
  type: TYPE_NORMAL
- en: 'The system prompt for the Tool Selector, denoted as $p^{t}_{\text{sys}}$, which
    generate a list of available tools in this specific steps, represented as:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $\mathcal{T}_{t_{i}}\leftarrow\mathcal{A}^{\text{LLM}}_{t}(p^{t}_{\text{sys}},u_{\text{req}},\mathcal{T},t_{i}).$
    |  | (2) |'
  prefs: []
  type: TYPE_TB
- en: 'The system prompt for the Code Programmer ($p^{c}_{\text{sys}}$, as:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $(c_{i},w_{i})\leftarrow\mathcal{A}^{\text{LLM}}_{c}(p^{c}_{\text{sys}},u_{\text{req}},u_{D},\mathcal{M},t_{i},\text{Doc}(\mathcal{T}_{t_{i}})).$
    |  | (3) |'
  prefs: []
  type: TYPE_TB
- en: Then, the code $c_{i}$.
  prefs: []
  type: TYPE_NORMAL
- en: Evaluator
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Evaluator is tasked with assessing the results of the current step and choosing
    the best among the multiple outcomes produced by the Executor’s self-optimization.
    The system prompt for the Evaluator ($p^{e}_{\text{sys}}$. Then, the process of
    the Evaluator evaluating and selecting the optimal solution code for the current
    step can be represented as:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $1$2 |  | (4) |'
  prefs: []
  type: TYPE_TB
- en: 4.1.2 Auxiliary components
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Memory Control
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: LLMs do not have the capability to retain historical messages, which necessitates
    incorporating a memory module in LLM-driven Agents. By organizing past information
    rationally through the memory module, LLMs can prevent forgetting previous content
    during planning and process long contexts more efficiently. In CellAgent, the
    internal logic of different subtask processing is mutually independent, meaning
    that each subtask execution process does not need to perceive the internal processing
    of previous steps, such as tool selection, code exception handling, or intermediate
    code generated during iteration. Therefore, CellAgent defines both global memory
    and local memory, storing historical information efficiently. This enables different
    LLM roles to access proper valuable historical information, boosting LLM inference
    efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in Fig. [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ CellAgent: An LLM-driven
    Multi-Agent Framework for Automated Single-cell Data Analysis")d, we define global
    memory to store only the final code of each historical step, which can be represented
    as $\mathcal{M}\leftarrow\{\bar{c_{1}},\bar{c_{2}},...\}$. This allows the Executor
    to generate new code more effectively, reducing redundant work, and increasing
    code generation accuracy. We use code as a memory storage medium, which has high
    information entropy in scRNA-seq data analysis, enabling the transfer of comprehensive
    information with fewer tokens, reducing LLM costs, and improving LLM efficiency.'
  prefs: []
  type: TYPE_NORMAL
- en: Within each subtask processing, the Executor maintains a local memory that only
    retains dialogue information within the current step and resets it when the subtask
    ends. The local memory enables the Executor to perceive the entire self-optimization
    process, including each generated correct or incorrect code snippet, potential
    error messages, and optimization processes. This helps avoid repeated errors during
    optimization, improving processing efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: Tool Retrieval
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: CellAgent integrates multiple tools for single-cell analysis tasks to ensure
    operational stability. This integration is primarily facilitated by the Tool Retrieval
    module, denoted as $\mathcal{T}$. The integrated tools are registered within the
    CellAgent framework, allowing the Tool Selector to detect their presence and retrieve
    a list of potentially useful tools for Code Programmer at the beginning of each
    subtask. Additionally, in our implementation, the Tool classes are equipped with
    standardized documentation, known as docstrings in Python. This feature enables
    the Executor to access documentation for the selected tools, enhancing the accuracy
    of code generation.
  prefs: []
  type: TYPE_NORMAL
- en: Code Sandbox
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: To ensure the security and reliability of code execution, CellAgent implements
    a Code Sandbox, isolating the code generated by LLMs for execution. Specifically,
    this is achieved through Jupyter Notebook Conversion (`nbconvert`), wherein data
    loading and each step of code generated by LLMs are executed within a comprehensive
    Jupyter notebook. This implementation approach decouples the CellAgent framework’s
    running and code execution of single-cell data analysis, enhancing the security
    of executing generated code. Additionally, it facilitates result management for
    single-cell task analysis tasks and reproducibility.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2 Self-iterative Optimization via Self-evaluation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 4.2.1 Preprocessing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: CellAgent first processes the data by removing low-quality cells and genes,
    subsequently identifies highly variable genes. Then, the Evaluator checks the
    effectiveness of these preprocessing steps, optimizes the preprocessing code to
    fit the characteristics of the dataset better, and showing proper visual plots
    to users. Unless specified by the user, CellAgent is required to execute a single
    iteration by default of self-optimization for preprocessing step.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2.2 Batch Correction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: CellAgent utilizes an iterative optimization approach to produce the best batch
    correction result by assessing the outcomes of different methods through UMAP
    plots. Specifically, the Evaluator, integrated with GPT-4v, evaluates these plots
    and ranks these methods. By default, the iteration count is set to three, indicating
    that the self-optimization process will yield three distinct batch correction
    results. Following evaluation, the method with the highest score will be selected
    as the final output.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2.3 Cell Type Annotation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: CellAgent employs both database-based annotation tools, such as CellMarker 2.0
    and ACT, and gene expression-based tools, including CellTypist, SCSA, ScType,
    and GPT-4, for cell type annotation. Utilizing a self-iterative optimization mechanism,
    CellAgent autonomously selects various methods to execute and obtain results.
    The Evaluator, driven by GPT-4, then aggregates these annotations and determines
    the final cell type for each cluster.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2.4 Trajectory Inference
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The evaluation of trajectory inference in CellAgent is analogous to that of
    batch correction. As trajectory information is challenging to describe directly
    through text, the Evaluator scores the visualization results of various trajectory
    inference algorithms. It then selects the highest-scoring visualization as the
    final output during the iterative optimization process. These visualizations typically
    consist of UMAP plots that depict trajectories, integrating both cell and trajectory
    information to enrich the content. Additionally, expert-written knowledge about
    trajectory inference tasks is provided to the Evaluator in the form of prompts.
  prefs: []
  type: TYPE_NORMAL
- en: 4.3 Evaluation metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 4.3.1 Cell Type Annotation Metrics
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To assess the accuracy of cell type annotations and facilitate comparisons across
    various methodologies, we employ an average scoring metric. For predicted and
    actual labels, ’fully match’ is awarded when they directly align in terms of annotation
    terms or CL cell ontology names. ’Partial match’ occurs when labels share general
    cell type category (e.g., fibroblast and stromal cell) but differ in specific
    annotations or ontology names. Conversely, ’mismatch’ is declared when there is
    discrepancy in broad cell type categories, annotations, or ontology names. We
    assign consistency scores of 1, 0.5, and 0 for ’fully match’, ’partial match’,
    and ’mismatch’, respectively [[28](#bib.bib28)]. These scores are then averaged
    across all cell types within each dataset. This average score serves as quantitative
    measure of annotation accuracy, enabling robust comparisons between different
    annotation methods and datasets. This systematic scoring approach ensures that
    researchers can objectively assess precision of cell type classifications and
    refine their analytical methods or data interpretation as needed.
  prefs: []
  type: TYPE_NORMAL
- en: 4.3.2 Batch Correction Metrics
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Ten different metrics are employed to assess the capacity to eliminate batch
    effects while preserving biological variation. These metrics are divided into
    two categories [[18](#bib.bib18)]. The metrics representing the effectiveness
    of batch effect removal include Graph Connectivity, PCR Comparison [[18](#bib.bib18)],
    $iLISI_{Graph}$ [[18](#bib.bib18)]. The weights of these metrics respectively
    represent scores of batch correction and biological conservation. The overall
    score is the weighted average of all these metrics as the final indicator.
  prefs: []
  type: TYPE_NORMAL
- en: 4.3.3 Trajectory Inference Metrics
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Four distinct types of metrics are employed to evaluate different aspects of
    trajectories. These metrics include $\mathit{edgeflip}$ serving as the comprehensive
    trajectory evaluation metric [[34](#bib.bib34)].
  prefs: []
  type: TYPE_NORMAL
- en: 5 Data availability
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For the batch correction task, we utilized nine datasets from different human
    organ atlases including blood, bone marrow, heart, intestine, kidney, liver, lung,
    pancreas, and skeletal muscle. They are available at [https://www.celltypist.org/organs](https://www.celltypist.org/organs).
    We employed the following datasets for the cell type annotation task: PBMC dataset
    ([https://www.10xgenomics.com/resources/datasets/8-k-pbm-cs-from-a-healthy-donor-2-standard-2-1-0](https://www.10xgenomics.com/resources/datasets/8-k-pbm-cs-from-a-healthy-donor-2-standard-2-1-0));
    pancreas dataset including Smart-seq2, 10X Chromium, and Drop-seq ([https://hemberg-lab.github.io/scRNA.seq.datasets/human/pancreas/](https://hemberg-lab.github.io/scRNA.seq.datasets/human/pancreas/));
    multiple PBMC dataset can be obtained from Single Cell Portal and the accession
    code is SCP424; multi-Omics ([https://figshare.com/projects/Tabula_Muris_Transcriptomic_characterization_of_20_organs_and_tissues_from_Mus_musculus_at_single_cell_resolution/27733](https://figshare.com/projects/Tabula_Muris_Transcriptomic_characterization_of_20_organs_and_tissues_from_Mus_musculus_at_single_cell_resolution/27733));
    immune dataset from different donors ([https://figshare.com/ndownloader/files/25717328](https://figshare.com/ndownloader/files/25717328));
    mouse dataset from the brain region ([https://portal.brain-map.org/atlases-and-data/rnaseq/mouse-whole-cortex-and-hippocampus-10x](https://portal.brain-map.org/atlases-and-data/rnaseq/mouse-whole-cortex-and-hippocampus-10x)).
    We employed the following datasets for the trajectory inference task: the aging-hsc-old
    Kowalczyk, and aging-hsc-young Kowalczyk datasets, which encompass developmental
    trajectories of human hematopoietic stem cells; human-embryos petropoulos dataset,
    containing developmental trajectories of human embryonic cells; NKT-differentiation
    engel dataset from thymus; pancreatic-alpha-cell-maturation and cellbench-SC1,
    germline-human, cell-cycle, and stimulated-dendritic-cells-PIC datasets. These
    datasets are deposited on Zenodo ([https://doi.org/10.5281/zenodo.1443566](https://doi.org/10.5281/zenodo.1443566)).'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: \bibcommenthead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Heumos et al. [2023] Heumos, L., Schaar, A.C., Lance, C., Litinetskaya, A.,
    Drost, F., Zappia, L., Lücken, M.D., Strobl, D.C., Henao, J., Curion, F., et al.:
    Best practices for single-cell analysis across modalities. Nature Reviews Genetics
    24(8), 550–572 (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zappia and Theis [2021] Zappia, L., Theis, F.J.: Over 1000 tools reveal trends
    in the single-cell rna-seq analysis landscape. Genome biology 22, 1–18 (2021)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Amezquita et al. [2020] Amezquita, R.A., Lun, A.T., Becht, E., Carey, V.J.,
    Carpp, L.N., Geistlinger, L., Marini, F., Rue-Albrecht, K., Risso, D., Soneson,
    C., et al.: Orchestrating single-cell analysis with bioconductor. Nature methods
    17(2), 137–145 (2020)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hao et al. [2021] Hao, Y., Hao, S., Andersen-Nissen, E., Mauck, W.M., Zheng,
    S., Butler, A., Lee, M.J., Wilk, A.J., Darby, C., Zager, M., et al.: Integrated
    analysis of multimodal single-cell data. Cell 184(13), 3573–3587 (2021)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wolf et al. [2018] Wolf, F.A., Angerer, P., Theis, F.J.: Scanpy: large-scale
    single-cell gene expression data analysis. Genome biology 19, 1–5 (2018)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Luecken and Theis [2019] Luecken, M.D., Theis, F.J.: Current best practices
    in single-cell rna-seq analysis: a tutorial. Molecular systems biology 15(6),
    8746 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Heumos et al. [2023] Heumos, L., Schaar, A.C., Lance, C., Litinetskaya, A.,
    Drost, F., Zappia, L., Lücken, M.D., Strobl, D.C., Henao, J., Curion, F., et al.:
    Best practices for single-cell analysis across modalities. Nature Reviews Genetics,
    1–23 (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Eraslan et al. [2022] Eraslan, G., Drokhlyansky, E., Anand, S., Fiskin, E.,
    Subramanian, A., Slyper, M., Wang, J., Van Wittenberghe, N., Rouhana, J.M., Waldman,
    J., et al.: Single-nucleus cross-tissue molecular reference maps toward understanding
    disease gene function. Science 376(6594), 4290 (2022)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sikkema et al. [2023] Sikkema, L., Ramírez-Suástegui, C., Strobl, D.C., Gillett,
    T.E., Zappia, L., Madissoon, E., Markov, N.S., Zaragosi, L.-E., Ji, Y., Ansari,
    M., et al.: An integrated cell atlas of the lung in health and disease. Nature
    Medicine, 1–15 (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'OpenAI [2023] OpenAI: GPT-4 technical report. CoRR abs/2303.08774 (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Anil et al. [2023] Anil, R., Dai, A.M., Firat, O., Johnson, M., Lepikhin, D.,
    Passos, A., Shakeri, S., Taropa, E., Bailey, P., Chen, Z., Chu, E., Clark, J.H.,
    Shafey, L.E., Huang, Y., Meier-Hellstern, K., Mishra, G., Moreira, E., Omernick,
    M., Robinson, K., Ruder, S., Tay, Y., Xiao, K., Xu, Y., Zhang, Y., Ábrego, G.H.,
    Ahn, J., Austin, J., Barham, P., Botha, J.A., Bradbury, J., Brahma, S., Brooks,
    K., Catasta, M., Cheng, Y., Cherry, C., Choquette-Choo, C.A., Chowdhery, A., Crepy,
    C., Dave, S., Dehghani, M., Dev, S., Devlin, J., Díaz, M., Du, N., Dyer, E., Feinberg,
    V., Feng, F., Fienber, V., Freitag, M., Garcia, X., Gehrmann, S., Gonzalez, L.,
    al.: Palm 2 technical report. CoRR abs/2305.10403 (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Touvron et al. [2023] Touvron, H., Martin, L., Stone, K., Albert, P., Almahairi,
    A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P., Bhosale, S., Bikel, D.,
    Blecher, L., Canton-Ferrer, C., Chen, M., Cucurull, G., Esiobu, D., Fernandes,
    J., Fu, J., Fu, W., Fuller, B., Gao, C., Goswami, V., Goyal, N., Hartshorn, A.,
    Hosseini, S., Hou, R., Inan, H., Kardas, M., Kerkez, V., Khabsa, M., Kloumann,
    I., Korenev, A., Koura, P.S., Lachaux, M., Lavril, T., Lee, J., Liskovich, D.,
    Lu, Y., Mao, Y., Martinet, X., Mihaylov, T., Mishra, P., Molybog, I., Nie, Y.,
    Poulton, A., Reizenstein, J., Rungta, R., Saladi, K., Schelten, A., Silva, R.,
    Smith, E.M., Subramanian, R., Tan, X.E., Tang, B., Taylor, R., Williams, A., Kuan,
    J.X., Xu, P., Yan, Z., Zarov, I., Zhang, Y., Fan, A., Kambadur, M., Narang, S.,
    Rodriguez, A., Stojnic, R., Edunov, S., Scialom, T.: Llama 2: Open foundation
    and fine-tuned chat models. CoRR abs/2307.09288 (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hong et al. [2023] Hong, S., Zhuge, M., Chen, J., Zheng, X., Cheng, Y., Zhang,
    C., Wang, J., Wang, Z., Yau, S.K.S., Lin, Z., Zhou, L., Ran, C., Xiao, L., Wu,
    C., Schmidhuber, J.: MetaGPT: Meta Programming for A Multi-Agent Collaborative
    Framework (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Spataro [2023] Spataro, J.: Introducing Microsoft 365 Copilot – your copilot
    for work. [https://blogs.microsoft.com/blog/2023/03/16/introducing-microsoft-365-copilot-your-copilot-for-work/](https://blogs.microsoft.com/blog/2023/03/16/introducing-microsoft-365-copilot-your-copilot-for-work/).
    Accessed: Mar 16, 2023 (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zhou et al. [2023] Zhou, W., Jiang, Y.E., Li, L., Wu, J., Wang, T., Qiu, S.,
    Zhang, J., Chen, J., Wu, R., Wang, S., Zhu, S., Chen, J., Zhang, W., Zhang, N.,
    Chen, H., Cui, P., Sachan, M.: Agents: An Open-source Framework for Autonomous
    Language Agents (2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Xi et al. [2023] Xi, Z., Chen, W., Guo, X., He, W., Ding, Y., Hong, B., Zhang,
    M., Wang, J., Jin, S., Zhou, E., Zheng, R., Fan, X., Wang, X., Xiong, L., Zhou,
    Y., Wang, W., Jiang, C., Zou, Y., Liu, X., Yin, Z., Dou, S., Weng, R., Cheng,
    W., Zhang, Q., Qin, W., Zheng, Y., Qiu, X., Huan, X., Gui, T.: The rise and potential
    of large language model based agents: A survey. CoRR abs/2309.07864 (2023) [https://doi.org/10.48550/ARXIV.2309.07864](https://doi.org/10.48550/ARXIV.2309.07864)
    [2309.07864](https://arxiv.org/abs/2309.07864)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. [2023] Wang, L., Ma, C., Feng, X., Zhang, Z., Yang, H., Zhang,
    J., Chen, Z., Tang, J., Chen, X., Lin, Y., Zhao, W.X., Wei, Z., Wen, J.: A survey
    on large language model based autonomous agents. CoRR abs/2308.11432 (2023) [https://doi.org/10.48550/ARXIV.2308.11432](https://doi.org/10.48550/ARXIV.2308.11432)
    [2308.11432](https://arxiv.org/abs/2308.11432)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Luecken et al. [2022] Luecken, M.D., Büttner, M., Chaichoompu, K., Danese,
    A., Interlandi, M., Müller, M.F., Strobl, D.C., Zappia, L., Dugas, M., Colomé-Tatché,
    M., et al.: Benchmarking atlas-level data integration in single-cell genomics.
    Nature methods 19(1), 41–50 (2022)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Domínguez Conde et al. [2022] Domínguez Conde, C., Xu, C., Jarvis, L., Rainbow,
    D., Wells, S., Gomes, T., Howlett, S., Suchanek, O., Polanski, K., King, H., et
    al.: Cross-tissue immune cell analysis reveals tissue-specific features in humans.
    Science 376(6594), 5197 (2022)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lopez et al. [2018] Lopez, R., Regier, J., Cole, M.B., Jordan, M.I., Yosef,
    N.: Deep generative modeling for single-cell transcriptomics. Nature methods 15(12),
    1053–1058 (2018)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Liu et al. [2020] Liu, J., Gao, C., Sodicoff, J., Kozareva, V., Macosko, E.Z.,
    Welch, J.D.: Jointly defining cell types from multiple single-cell datasets using
    liger. Nature protocols 15(11), 3632–3662 (2020)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hie et al. [2019] Hie, B., Bryson, B., Berger, B.: Efficient integration of
    heterogeneous single-cell transcriptomes using scanorama. Nature biotechnology
    37(6), 685–691 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Korsunsky et al. [2019] Korsunsky, I., Millard, N., Fan, J., Slowikowski, K.,
    Zhang, F., Wei, K., Baglaenko, Y., Brenner, M., Loh, P.-r., Raychaudhuri, S.:
    Fast, sensitive and accurate integration of single-cell data with harmony. Nature
    methods 16(12), 1289–1296 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Johnson et al. [2007] Johnson, W.E., Li, C., Rabinovic, A.: Adjusting batch
    effects in microarray expression data using empirical bayes methods. Biostatistics
    8(1), 118–127 (2007)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Büttner et al. [2019] Büttner, M., Miao, Z., Wolf, F.A., Teichmann, S.A., Theis,
    F.J.: A test metric for assessing single-cell rna-seq batch correction. Nature
    methods 16(1), 43–49 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Korsunsky et al. [2019] Korsunsky, I., Millard, N., Fan, J., Slowikowski, K.,
    Zhang, F., Wei, K., Baglaenko, Y., Brenner, M., Loh, P.-r., Raychaudhuri, S.:
    Fast, sensitive and accurate integration of single-cell data with harmony. Nature
    methods 16(12), 1289–1296 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hubert and Arabie [1985] Hubert, L., Arabie, P.: Comparing partitions. Journal
    of classification 2, 193–218 (1985)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hou and Ji [2024] Hou, W., Ji, Z.: Assessing gpt-4 for cell type annotation
    in single-cell rna-seq analysis. Nature Methods, 1–4 (2024)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zheng et al. [2017] Zheng, G.X., Terry, J.M., Belgrader, P., Ryvkin, P., Bent,
    Z.W., Wilson, R., Ziraldo, S.B., Wheeler, T.D., McDermott, G.P., Zhu, J., et al.:
    Massively parallel digital transcriptional profiling of single cells. Nature communications
    8(1), 14049 (2017)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'van Galen et al. [2019] Galen, P., Hovestadt, V., Wadsworth II, M.H., Hughes,
    T.K., Griffin, G.K., Battaglia, S., Verga, J.A., Stephansky, J., Pastika, T.J.,
    Story, J.L., et al.: Single-cell rna-seq reveals aml hierarchies relevant to disease
    progression and immunity. Cell 176(6), 1265–1281 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Luecken et al. [2022] Luecken, M.D., Büttner, M., Chaichoompu, K., Danese,
    A., Interlandi, M., Müller, M.F., Strobl, D.C., Zappia, L., Dugas, M., Colomé-Tatché,
    M., et al.: Benchmarking atlas-level data integration in single-cell genomics.
    Nature methods 19(1), 41–50 (2022)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Muraro et al. [2016] Muraro, M.J., Dharmadhikari, G., Grün, D., Groen, N.,
    Dielen, T., Jansen, E., Van Gurp, L., Engelse, M.A., Carlotti, F., De Koning,
    E.J., et al.: A single-cell transcriptome atlas of the human pancreas. Cell systems
    3(4), 385–394 (2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Macosko et al. [2015] Macosko, E.Z., Basu, A., Satija, R., Nemesh, J., Shekhar,
    K., Goldman, M., Tirosh, I., Bialas, A.R., Kamitaki, N., Martersteck, E.M., et
    al.: Highly parallel genome-wide expression profiling of individual cells using
    nanoliter droplets. Cell 161(5), 1202–1214 (2015)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Saelens et al. [2019] Saelens, W., Cannoodt, R., Todorov, H., Saeys, Y.: A
    comparison of single-cell trajectory inference methods. Nature biotechnology 37(5),
    547–554 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Todorov et al. [2020] Todorov, H., Cannoodt, R., Saelens, W., Saeys, Y.: Tinga:
    fast and flexible trajectory inference with growing neural gas. Bioinformatics
    36(Supplement_1), 66–74 (2020)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Grün et al. [2016] Grün, D., Muraro, M.J., Boisset, J.-C., Wiebrands, K., Lyubimova,
    A., Dharmadhikari, G., Born, M., Van Es, J., Jansen, E., Clevers, H., et al.:
    De novo prediction of stem cell identity using single-cell transcriptome data.
    Cell stem cell 19(2), 266–277 (2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cannoodt et al. [2016] Cannoodt, R., Saelens, W., Sichien, D., Tavernier, S.,
    Janssens, S., Guilliams, M., Lambrecht, B., Preter, K.D., Saeys, Y.: Scorpius
    improves trajectory inference and identifies novel modules in dendritic cell development.
    Biorxiv, 079509 (2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wolf et al. [2019] Wolf, F.A., Hamey, F.K., Plass, M., Solana, J., Dahlin,
    J.S., Göttgens, B., Rajewsky, N., Simon, L., Theis, F.J.: Paga: graph abstraction
    reconciles clustering with trajectory inference through a topology preserving
    map of single cells. Genome biology 20, 1–9 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Street et al. [2018] Street, K., Risso, D., Fletcher, R.B., Das, D., Ngai,
    J., Yosef, N., Purdom, E., Dudoit, S.: Slingshot: cell lineage and pseudotime
    inference for single-cell transcriptomics. BMC genomics 19, 1–16 (2018)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Büttner et al. [2019] Büttner, M., Miao, Z., Wolf, F.A., Teichmann, S.A., Theis,
    F.J.: A test metric for assessing single-cell rna-seq batch correction. Nature
    methods 16(1), 43–49 (2019)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pedregosa et al. [2011] Pedregosa, F., Varoquaux, G., Gramfort, A., Michel,
    V., Thirion, B., Grisel, O., Blondel, M., Prettenhofer, P., Weiss, R., Dubourg,
    V., et al.: Scikit-learn: Machine learning in python. the Journal of machine Learning
    research 12, 2825–2830 (2011)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
