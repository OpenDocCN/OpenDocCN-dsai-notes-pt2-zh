- en: P13：13. L3_2 Sampling in Jupyter - Python小能 - BV1CB4y1U7P6
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P13：13. L3_2 Jupyter中的采样 - Python小能 - BV1CB4y1U7P6
- en: Okay， so now let's look at what actually happens when we sample。 Okay。 first
    and simplest thing I can do is I can just， you know， draw random numbers， and。
    in this case I'll just get some numbers between 0 and 1。 This is your run of the
    middle of a nullar。 you know， uniform random number generator running， on a CPU
    or GPU fairly efficiently。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们来看看当我们进行采样时实际上会发生什么。好吧，我能做的最简单的事情就是你知道的，生成一些随机数字，在这种情况下，我只会得到一些介于0和1之间的数字。这就是典型的中等水平的伪随机数生成器，知道吧，它在CPU或GPU上运行得相当高效。
- en: It's probably not the most statistically or cryptographically pure random number
    generator。 but one that's fairly fast。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 它可能不是最统计学上或加密学上最纯粹的随机数生成器，但它是一个相当快速的生成器。
- en: '![](img/cf7ea86debba378b529f9c017657a999_1.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_1.png)'
- en: So， but anyway， so that's what you get。 I guess nothing interesting to be seen
    here。 Now if I wanted to get random integers， well I could do that too。 And， you
    know。 that's invoked by a random int。 And so now you get numbers between this
    case 1 and 100 or actually 1 and 99 and lo and behold。 I actually get 1 twice。
    Let's just see。 Okay， get something else now。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，不管怎样，这就是你得到的结果。我想这里没什么有趣的东西。如果我想得到随机整数，我也可以做到。而且，你知道的，那个是通过一个随机整数来调用的。所以现在你得到的是介于1到100之间的数字，实际上是1到99之间，结果正如预期。我竟然得到了1两次。让我们看看。好吧，现在得到其他的结果了。
- en: '![](img/cf7ea86debba378b529f9c017657a999_3.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_3.png)'
- en: Okay， so nothing particularly special here。 This is the picture that we saw
    before。 but now actually implemented。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这里没有什么特别的。这是我们之前看到的图片，但现在实际上已经实现了。
- en: '![](img/cf7ea86debba378b529f9c017657a999_5.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_5.png)'
- en: Okay， let's explain what's going on。 So I'm just picking， you know， 100 pins
    and doing some。 you know， just plotting， remangling。 And I'm going to generate
    random integers between 0 and 99。 And okay， basically， yeah， so starting it off
    way。 Yeah， like that。 Now what I'm essentially doing is， if I is in the appropriate
    bin， then， you know， go。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我们解释一下发生了什么。所以我只是选择了100个区间并做了一些，你知道的，绘图，重新整理。然后我会生成介于0到99之间的随机整数。好的，基本上，是的，开始的时候是那样的。现在我做的实际上是，如果我在合适的区间里，那么，你知道的，继续。
- en: and add the count。 Otherwise， and then， you know， if the count， you know。 if
    my counter is between 10， 100， and 1000 and so on， I just go and， you know， plot
    this thing。 So what I did here， just for reference， I don't even bother pulling
    out random random。 random explicitly and then checking the entry。 I'm just indexing
    this directly， right？
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然后增加计数。否则，嗯，如果计数器在10、100和1000之间，等等，我就会去绘制这个东西。所以我在这里做的事情，仅供参考，我甚至不费心去明确地调用`random
    random`然后检查条目。我只是直接通过索引来处理它，知道吧？
- en: So counts of random random just goes directly into that field and it increments
    it by 1。 Okay。 so if， for instance， that value is 3， then it increments the bin
    that has value， 3。 Why do we have to go from 0 to 99？ Well， because it's Python。
    Starts all the indices from 0。 And then we can see that as， you know， we sample
    more and more for， you know， million， terms， well。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所以随机的计数值直接进入那个字段，并且它会将值增加1。好吧，比如说，如果那个值是3，那么它就会增加那个值为3的bin。为什么我们要从0到99呢？嗯，因为是Python。它所有的索引都是从0开始的。然后我们可以看到，随着我们越来越多地进行采样，比如说，百万个项，我们就可以看到效果了。
- en: we get something that's fairly smooth but for， you know， 10， it's not so nice。
    Okay。 any questions so far？
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到的东西相对平滑，但对于10来说，就不那么好看了。好了，到目前为止有任何问题吗？
- en: '![](img/cf7ea86debba378b529f9c017657a999_7.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_7.png)'
- en: '![](img/cf7ea86debba378b529f9c017657a999_8.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_8.png)'
- en: I can do things like categorical distributions， right？ So in this case。 I'm
    just looking at two possible outcomes， you know， 0 and 1。 And what I'm doing is
    I'm picking an interval between 0 and 1， right？
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以做一些像分类分布的事情，对吧？所以在这种情况下，我只是看两种可能的结果，你知道的，0和1。我所做的是从0到1之间选择一个区间，对吧？
- en: And if the random variable is below 0。35， and I say it's outcome 0， otherwise
    it's outcome， 0。35。 Okay， so I just hand engineer that sampler。 Okay， it's a pretty
    boring sampler。 I mean。 it's like tossing a bias coin。 And then I go and compute
    that thing again， right？
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果随机变量小于0.35，我就认为它的结果是0，否则它的结果是0.35。好了，我就这样手动做了这个采样器。好吧，这是一个相当无聊的采样器。我的意思是，它就像是在掷一枚有偏的硬币。然后我又重新计算了那个东西，对吧？
- en: So I basically just run this。 And yeah， I'm just checking for each of the random
    variables。 you know， a million of those， whether they are， you know， less or larger
    than 0。35。 I'm doing this in bulk here。 That's a lot faster than a full loop。
    But I guess from homework one by now everybody knows that full loops are evil，
    right？
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我基本上只是运行这个。对，嗯，我在检查每个随机变量。你知道的，有一百万个，看看它们是否大于或小于0.35。我在这里批量处理。比起整个循环，这要快得多。但我想通过第一次作业，现在大家都知道完整的循环是有问题的，对吧？
- en: '![](img/cf7ea86debba378b529f9c017657a999_10.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_10.png)'
- en: And then I plot this。 So if you plot the corresponding fractions， I mean。 they
    all have to sum up to 1。 You can see that， you know。 this wiggles around a bit
    and eventually it goes to 0。35 and 0。65， as you would expect。 Okay。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我绘制这个。所以如果你绘制对应的分数，我是说，它们的总和必须为1。你可以看到，嗯，它在上下波动了一些，最终它趋向于0.35和0.65，就像你预期的那样。好的。
- en: '![](img/cf7ea86debba378b529f9c017657a999_12.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_12.png)'
- en: Now， okay， last but not least， the normal distribution。 And this is how you
    plot 1。 Right？
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，好的，最后但同样重要的是，正态分布。就是这样绘制1，对吧？
- en: This is just， you know， creating range between minus 10 and 10， grid spacing
    0。01。 Then you evaluate this function here。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是，嗯，创建一个范围从-10到10，网格间距为0.01。然后你在这里评估这个函数。
- en: '![](img/cf7ea86debba378b529f9c017657a999_14.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_14.png)'
- en: You plot it。 And that's it。 Right。 Nothing particularly special。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你绘制它。就这样。对吧？没有什么特别的。
- en: '![](img/cf7ea86debba378b529f9c017657a999_16.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_16.png)'
- en: Except that now what we're going to do is we're going to actually try out what
    our run。 our central limit theorem does。 So I'm going to create a run。 run in
    variable which is 0 with what probability？ Exactly。 Because if it's less than
    0。3。 I don't get anything。 What's the probability that that run in variable is
    1？ So the exciting。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 除了现在我们要做的是，我们将实际尝试我们的运行。我们的中心极限定理是怎么做的。所以我将创建一个运行。运行变量为0，概率是多少？没错。因为如果小于0.3，我什么也得不到。那这个运行变量为1的概率是多少？所以这就很激动人心了。
- en: an interesting line is this one here， right？ What's the probability that the
    value is 1？
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的线是这个，对吧？值为1的概率是多少？
- en: You can also read it off in the code， right？ Okay。 Well， so temp is some， you
    know。 random numbers and they are between 0 and 1。 And I created， you know， some
    big array of that。 You know， I basically created 10 instances of， you know， 10，000
    samples。 And now I'm checking for each entry in temp whether it's greater than
    0。3。 Okay。 So therefore。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在代码中读取它，对吧？好的。那么temp是一些，嗯，随机数，它们介于0和1之间。我创建了，嗯，一些大数组，你知道的。基本上我创建了10个实例，每个包含10,000个样本。现在我在检查temp中的每个条目，看看它是否大于0.3。好的。所以因此。
- en: for all the terms where it's not greater than 0。3， well， okay， it's 0。 Now for
    all the entries where it's greater than 0。8， well， basically two inequalities。
    kick in in the same time。 So with probability therefore 0。2， it's 2。 And with
    probability 0。5。 it's 1。 There was a question over there。 Oh， okay。 Oh， okay。
    Sorry， I didn't see you before。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有不大于0.3的项，嗯，好吧，结果是0。现在对于所有大于0.8的条目，嗯，基本上两个不等式同时生效。所以，概率是0.2时，结果是2。而概率是0.5时，结果是1。那边有个问题。哦，好吧。哦，好吧。抱歉，我之前没看到你。
- en: I apologize。 So this， by the way， is just， is also the answers of the question，
    right？ It's 0。5 times 1 plus 0。2 times 2。 And now this is actually just computing
    the variance as we would， right？
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我道歉。顺便说一下，这也正是问题的答案，对吧？它是0.5乘以1加上0.2乘以2。而现在这实际上就是计算方差，就像我们一样，对吧？
- en: This was exactly the decomposition that we have before。 So it's 0。5 times 1
    squared and 0。2 times 2 squared， which is 4， minus mean squared。 Okay。 Then we
    can go and print this and then。 well， okay， we do a little bit of maintenance
    here。 We essentially just aggregate terms。 and divide them by the counts。 Okay，
    let's just do this。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这正是我们之前的分解。所以它是0.5乘以1的平方，加上0.2乘以2的平方，结果是4，减去均方。好的。接下来我们可以打印这个，然后，嗯，好吧，我们做一些维护工作。基本上我们只是将项聚合起来，并按计数除以它们。好了，我们就这么做吧。
- en: '![](img/cf7ea86debba378b529f9c017657a999_18.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_18.png)'
- en: Now let's print it。 So we， on this plot， you can see 10 executions of that average。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们打印它。你可以在这个图表中看到10次执行的平均值。
- en: '![](img/cf7ea86debba378b529f9c017657a999_20.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_20.png)'
- en: And you can see that they're all pretty much converging to one， which just so
    happens to。 be the average here。 Well， closer one。 But then the other thing is
    you'll see the upper and the lower bound。 So look at that slide carefully because
    it'll help you for the own work。 Okay。 And with that。 we're done with the notebook。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到它们都差不多汇聚到了一个点，而这个点恰好就是这里的平均值。嗯，更接近一点。但另一个要点是你会看到上下界。所以仔细看看那张幻灯片，因为它会帮助你完成自己的工作。好的，至此我们已经完成了这本笔记本的内容。
- en: '![](img/cf7ea86debba378b529f9c017657a999_22.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7ea86debba378b529f9c017657a999_22.png)'
- en: Okay。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。
