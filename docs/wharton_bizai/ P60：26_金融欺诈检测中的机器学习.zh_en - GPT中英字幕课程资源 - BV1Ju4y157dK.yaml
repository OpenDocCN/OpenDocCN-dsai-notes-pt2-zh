- en: 沃顿商学院《AI For Business（AI用于商业：AI基础／市场营销+财务／人力／管理）》（中英字幕） - P60：26_金融欺诈检测中的机器学习.zh_en
    - GPT中英字幕课程资源 - BV1Ju4y157dK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this lecture， we are going to explore some of the applications of machine
    learning in。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_1.png)'
  prefs: []
  type: TYPE_IMG
- en: finance in greater detail。 So in our conversation with APUR。
  prefs: []
  type: TYPE_NORMAL
- en: we talked about several applications of machine learning。
  prefs: []
  type: TYPE_NORMAL
- en: in the front office and also in the back office。 So we will start with an application
    in the back office that APURVE mentioned which is。
  prefs: []
  type: TYPE_NORMAL
- en: fraud detection。 Now let's start with credit fraud detection。 Now in the past。
  prefs: []
  type: TYPE_NORMAL
- en: credit fraud detection was something that could not have been done in， real
    time。
  prefs: []
  type: TYPE_NORMAL
- en: The most common situation or scenario was that once fraud occurs， it was much
    later that。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_3.png)'
  prefs: []
  type: TYPE_IMG
- en: somebody detected the fraud。 Most commonly it was detected by the customer when
    they are perhaps reviewing their credit。
  prefs: []
  type: TYPE_NORMAL
- en: card bill and they notice a transaction that is not legitimate。
  prefs: []
  type: TYPE_NORMAL
- en: And they might in turn then call the company and the company might then reverse
    that transaction。
  prefs: []
  type: TYPE_NORMAL
- en: and then send a new card。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_5.png)'
  prefs: []
  type: TYPE_IMG
- en: But in this instance， the customer has been impacted and this has perhaps created
    a lot。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_7.png)'
  prefs: []
  type: TYPE_IMG
- en: of consumer angst。 And furthermore， the transaction has already occurred。
  prefs: []
  type: TYPE_NORMAL
- en: So even though the customer might be reimbursed， there is a loss either to the
    credit card。
  prefs: []
  type: TYPE_NORMAL
- en: company or to the merchant。 Now the way this world of credit card fraud detection
    has been transforming is that machine。
  prefs: []
  type: TYPE_NORMAL
- en: learning algorithms are evaluating transactions as and when they occur。
  prefs: []
  type: TYPE_NORMAL
- en: So right when a customer uses a credit card， whether it's online or whether
    it is at store。
  prefs: []
  type: TYPE_NORMAL
- en: in person， an algorithm might evaluate that transaction and then detect potential
    fraud。
  prefs: []
  type: TYPE_NORMAL
- en: And if it determines that the transaction is likely to be fraudulent， then the
    customer。
  prefs: []
  type: TYPE_NORMAL
- en: is alerted and if needed， a new card is issued to the customer。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_9.png)'
  prefs: []
  type: TYPE_IMG
- en: What this achieves is that we are able to detect fraud before the customer experiences。
  prefs: []
  type: TYPE_NORMAL
- en: any dissatisfaction or angst and also it helps avoid the fraudulent transaction
    in the first， place。
  prefs: []
  type: TYPE_NORMAL
- en: thereby saving either the merchant or the credit card company money。
  prefs: []
  type: TYPE_NORMAL
- en: Now machine learning when it's applied to fraud detection is certainly very
    valuable。
  prefs: []
  type: TYPE_NORMAL
- en: And the accuracy of these algorithms is extremely important because false positives
    or false。
  prefs: []
  type: TYPE_NORMAL
- en: negatives can be costly。 Now a false negative occurs when a business does not
    detect a transaction as fraudulent。
  prefs: []
  type: TYPE_NORMAL
- en: and it allows the fraudster to make the purchase。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_11.png)'
  prefs: []
  type: TYPE_IMG
- en: In this case， the actual card holder discovers the charge， disputes it and is
    perhaps repaid。
  prefs: []
  type: TYPE_NORMAL
- en: by the bank but the merchant or the bank is responsible for the cost of the
    item sold。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_13.png)'
  prefs: []
  type: TYPE_IMG
- en: to the fraudster and therefore there is a loss to either one of them。
  prefs: []
  type: TYPE_NORMAL
- en: The other possibility is a false positive。 This occurs when a transaction is
    flagged as fraudulent and is blocked even though the。
  prefs: []
  type: TYPE_NORMAL
- en: potential purchase was actually not fraudulent。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_15.png)'
  prefs: []
  type: TYPE_IMG
- en: In this case， the challenge is that it affects the customer experience because
    the transaction。
  prefs: []
  type: TYPE_NORMAL
- en: was blocked even when it was not fraudulent and it might affect customer retention
    in the， long run。
  prefs: []
  type: TYPE_NORMAL
- en: So in short， it is very important for companies to make sure that their machine
    learning algorithms。
  prefs: []
  type: TYPE_NORMAL
- en: for fraud detection are highly accurate with low false positives and low false
    negatives。
  prefs: []
  type: TYPE_NORMAL
- en: Now if we open up the black box and look under the hood and see what kinds of
    algorithms。
  prefs: []
  type: TYPE_NORMAL
- en: are being used by companies， they use both supervised learning algorithms and
    unsupervised。
  prefs: []
  type: TYPE_NORMAL
- en: learning algorithms。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_17.png)'
  prefs: []
  type: TYPE_IMG
- en: The supervised learning algorithms are trained based on historical data which
    is essentially。
  prefs: []
  type: TYPE_NORMAL
- en: passed data on transactions which were either subsequently labeled as fraudulent
    or which。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_19.png)'
  prefs: []
  type: TYPE_IMG
- en: were not flagged as fraud at all。 And we might use this data to train an algorithm
    to determine what makes fraudulent transactions。
  prefs: []
  type: TYPE_NORMAL
- en: look different than the regular or legitimate transactions。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_21.png)'
  prefs: []
  type: TYPE_IMG
- en: Unsupervised learning algorithms essentially will look at any transaction and
    will essentially。
  prefs: []
  type: TYPE_NORMAL
- en: do anomaly detection。 They will look at what makes this transaction different
    than other transactions that is。
  prefs: []
  type: TYPE_NORMAL
- en: in the database including other transactions by the same customer。
  prefs: []
  type: TYPE_NORMAL
- en: And therefore a flag of transaction that just looks different。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_23.png)'
  prefs: []
  type: TYPE_IMG
- en: So let's look at each of these ideas。 So first， supervised learning。 For supervised
    learning。
  prefs: []
  type: TYPE_NORMAL
- en: we need a lot of training data。 And given the training data。
  prefs: []
  type: TYPE_NORMAL
- en: the algorithms are looking at certain properties of the transactions。
  prefs: []
  type: TYPE_NORMAL
- en: Some of these are properties that are based on that specific transaction。 For
    example。
  prefs: []
  type: TYPE_NORMAL
- en: what country is this card being used in and what country was the card issued。
  prefs: []
  type: TYPE_NORMAL
- en: in or what is the IP address of the website where a payment is being made and
    things like， that。
  prefs: []
  type: TYPE_NORMAL
- en: And they might also use behavioral data。 For example。
  prefs: []
  type: TYPE_NORMAL
- en: in how many different countries was the card used？
  prefs: []
  type: TYPE_NORMAL
- en: How many transactions have been made on this card in the last one hour relative
    to what。
  prefs: []
  type: TYPE_NORMAL
- en: is the usual rate at which transactions are made around this time？
  prefs: []
  type: TYPE_NORMAL
- en: So these are the kinds of data that might be used。
  prefs: []
  type: TYPE_NORMAL
- en: And a supervised learning algorithm might essentially use a large data set which
    is。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_25.png)'
  prefs: []
  type: TYPE_IMG
- en: all kinds of past transactional data on the customer on past transactions。 And
    with the knowledge。
  prefs: []
  type: TYPE_NORMAL
- en: remember， supervised learning algorithms need clearly labeled output。
  prefs: []
  type: TYPE_NORMAL
- en: So they will need data on whether those past transactions were fraudulent or
    not。
  prefs: []
  type: TYPE_NORMAL
- en: And based on that data， they essentially try and identify a unique signature
    or a unique。
  prefs: []
  type: TYPE_NORMAL
- en: set of features or identifiers of fraudulent transactions。
  prefs: []
  type: TYPE_NORMAL
- en: And then they apply that to future transaction。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_27.png)'
  prefs: []
  type: TYPE_IMG
- en: Based on this past data， one might learn， for example， a decision tree like
    what I've。
  prefs: []
  type: TYPE_NORMAL
- en: shown here on this graph， on this decision tree， essentially the algorithm is
    looking at certain。
  prefs: []
  type: TYPE_NORMAL
- en: attributes of the transaction。 For example， it starts by looking at whether
    the transaction amount is greater than or less。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_29.png)'
  prefs: []
  type: TYPE_IMG
- en: than $20。 If it is greater than $20， it next asks whether the transaction is
    in Canada。
  prefs: []
  type: TYPE_NORMAL
- en: If it's less than $20， it asks whether the card has been used in over two countries。
  prefs: []
  type: TYPE_NORMAL
- en: And so it looks at this kind of data in order to make the decision of whether
    it thinks a。
  prefs: []
  type: TYPE_NORMAL
- en: transaction is fraudulent or not。 This kind of decision tree would be learned
    based on historical data。
  prefs: []
  type: TYPE_NORMAL
- en: So the accuracy of the tree depends on having lots of data and recollect our
    conversation。
  prefs: []
  type: TYPE_NORMAL
- en: on machine learning algorithm。 You need lots of rows of data and lots of columns
    in each row。
  prefs: []
  type: TYPE_NORMAL
- en: So lots of rows of data implies we need millions and perhaps billions of past
    transactions。
  prefs: []
  type: TYPE_NORMAL
- en: And lots of column implies for each of these past transactions， we need to know
    a lot of。
  prefs: []
  type: TYPE_NORMAL
- en: information。 Not just the simple information that was shown in the table in
    a couple slides back。
  prefs: []
  type: TYPE_NORMAL
- en: but rather， very rich data on each transaction， on where the transaction is
    occurring。
  prefs: []
  type: TYPE_NORMAL
- en: what is the amount， of the transaction， what is the IP address， all kinds of
    information。
  prefs: []
  type: TYPE_NORMAL
- en: And that is when we can build accurate supervised machine learning algorithms。
    Now。
  prefs: []
  type: TYPE_NORMAL
- en: as I mentioned earlier， this would be paired with unsupervised learning algorithms。
  prefs: []
  type: TYPE_NORMAL
- en: that are doing anomaly detection。 You might say the transaction is for an exceptionally
    high amount relative to past transaction。
  prefs: []
  type: TYPE_NORMAL
- en: And furthermore， it's in a country where this person has not transacted before。
    And in the past。
  prefs: []
  type: TYPE_NORMAL
- en: foreign transactions were preceded by flight purchases to that country。
  prefs: []
  type: TYPE_NORMAL
- en: and we don't see it this time。 And so all of these factors make this transaction
    look like an anomaly and that might cause the。
  prefs: []
  type: TYPE_NORMAL
- en: transaction to be labeled as fraudulent。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_31.png)'
  prefs: []
  type: TYPE_IMG
- en: So machine learning is actually being used quite extensively in banks these
    days。
  prefs: []
  type: TYPE_NORMAL
- en: We are still in early days of applying machine learning to do fraud detection
    and it can。
  prefs: []
  type: TYPE_NORMAL
- en: add immense value。 First of all， algorithms can detect fraudulent transactions
    faster than any human being。
  prefs: []
  type: TYPE_NORMAL
- en: So speed of detection is extremely important because it helps prevent fraud
    rather than。
  prefs: []
  type: TYPE_NORMAL
- en: detect fraud after the fact。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_33.png)'
  prefs: []
  type: TYPE_IMG
- en: The scale of the solution is extremely important here because human intervention
    or human detection。
  prefs: []
  type: TYPE_NORMAL
- en: of fraudulent transactions simply doesn't scale well， whereas algorithmic detection
    can。
  prefs: []
  type: TYPE_NORMAL
- en: scale very rapidly。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_35.png)'
  prefs: []
  type: TYPE_IMG
- en: And finally， there is the efficiency of using machine learning and perhaps the
    ability to。
  prefs: []
  type: TYPE_NORMAL
- en: detect fraud at greater or higher levels of accuracy than is feasible with human
    beings。
  prefs: []
  type: TYPE_NORMAL
- en: So given that banks today lose billions of dollars in fraudulent transactions，
    the value。
  prefs: []
  type: TYPE_NORMAL
- en: of applying machine learning to reduce those fraud rates is actually very significant
    to。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_37.png)'
  prefs: []
  type: TYPE_IMG
- en: banks and other financial institutions。 At the same time。
  prefs: []
  type: TYPE_NORMAL
- en: there are some limitations of using machine learning for fraud detection。
  prefs: []
  type: TYPE_NORMAL
- en: One of it is that some of the most advanced machine learning algorithms today
    tend to。
  prefs: []
  type: TYPE_NORMAL
- en: be more opaque like a deep learning algorithm or gradient boosting and things
    like that。
  prefs: []
  type: TYPE_NORMAL
- en: And so they become hard to interpret。 If they are hard to interpret。
  prefs: []
  type: TYPE_NORMAL
- en: then sometimes it might be hard to catch issues with the algorithms。
  prefs: []
  type: TYPE_NORMAL
- en: if we don't understand how exactly the algorithm works。 Also。
  prefs: []
  type: TYPE_NORMAL
- en: there might be biases potentially in the algorithm where it's rejecting transactions。
  prefs: []
  type: TYPE_NORMAL
- en: in certain zip codes where minorities might live and someone has to worry about
    that， as well。
  prefs: []
  type: TYPE_NORMAL
- en: This is why there's a lot of interest in the idea of interpretable machine learning
    also。
  prefs: []
  type: TYPE_NORMAL
- en: known as explainable AI。 The idea is how can we have machine predictions come
    with explanations。
  prefs: []
  type: TYPE_NORMAL
- en: We'll talk more about that in module four。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_39.png)'
  prefs: []
  type: TYPE_IMG
- en: And lastly， another limitation of applying machine learning for fraud detection
    is that。
  prefs: []
  type: TYPE_NORMAL
- en: machine learning works if you have high volume of data。
  prefs: []
  type: TYPE_NORMAL
- en: So small organizations with very limited amount of data will not be able to
    get the best。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_41.png)'
  prefs: []
  type: TYPE_IMG
- en: out of machine learning as a result。 [BLANK_AUDIO]。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e4e9fa62859161e4f7f4901ed1acd8e_43.png)'
  prefs: []
  type: TYPE_IMG
