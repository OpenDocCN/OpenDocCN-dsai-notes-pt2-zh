- en: 沃顿商学院《AI For Business（AI用于商业：AI基础／市场营销+财务／人力／管理）》（中英字幕） - P6：5_数据管理基础设施.zh_en
    - GPT中英字幕课程资源 - BV1Ju4y157dK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome back。 In this session， we're going to talk about the data infrastructure
    that。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ee2fe5e50c30d22f9d3bef2c5159f79f_1.png)'
  prefs: []
  type: TYPE_IMG
- en: companies need to have in place before they can embark on large-scale AI-driven
    business。
  prefs: []
  type: TYPE_NORMAL
- en: transformation。 To help us understand what kinds of data infrastructure companies
    need。
  prefs: []
  type: TYPE_NORMAL
- en: to have in place， we have with us Chris Child， who is the Director of Product
    Management。
  prefs: []
  type: TYPE_NORMAL
- en: at Snowflake。 Chris， welcome。 And please tell us a little bit about your background
    in， this space。
  prefs: []
  type: TYPE_NORMAL
- en: Thanks， Karthik。 Excited to be here。 So， as you mentioned， I work at Snowflake，
    Computing。
  prefs: []
  type: TYPE_NORMAL
- en: which is a cloud data warehouse company。 And I've spent my career working， in
    data。
  prefs: []
  type: TYPE_NORMAL
- en: both as an investor and now as an operator， helping build systems that help。
  prefs: []
  type: TYPE_NORMAL
- en: companies make better decisions and really run their businesses better。 So，
    Chris， I。
  prefs: []
  type: TYPE_NORMAL
- en: think a good place for us to begin is to talk about， you know， what exactly
    is the database。
  prefs: []
  type: TYPE_NORMAL
- en: and how exactly are companies thinking about all the different kinds of databases？
    What。
  prefs: []
  type: TYPE_NORMAL
- en: has been that evolution over the last several years？ Sure。 So， there's really
    two types。
  prefs: []
  type: TYPE_NORMAL
- en: of databases that most companies end up needing。 The first is what we call a
    transactional。
  prefs: []
  type: TYPE_NORMAL
- en: database。 And this is a system that keeps track of the important information
    that's。
  prefs: []
  type: TYPE_NORMAL
- en: kind of running your business on a day-to-day basis。 So， if we take in a bank，
    for example。
  prefs: []
  type: TYPE_NORMAL
- en: a bank would have a transactional database that keeps track of the balances
    for all the， customers。
  prefs: []
  type: TYPE_NORMAL
- en: And you would use that every time someone starts a transaction to figure out。
  prefs: []
  type: TYPE_NORMAL
- en: if there's enough money in their account to debit their account or credit their
    account。
  prefs: []
  type: TYPE_NORMAL
- en: and keep the running balance going on。 These are very useful and they need to
    be very fast。
  prefs: []
  type: TYPE_NORMAL
- en: They tend to be very expensive。 On the other hand， you end up with what's called
    an analytic。
  prefs: []
  type: TYPE_NORMAL
- en: database or an analytic system to process much， much larger sets of data over
    a long。
  prefs: []
  type: TYPE_NORMAL
- en: period of time。 So， continuing with the bank example， I might want to keep a
    history of。
  prefs: []
  type: TYPE_NORMAL
- en: every transaction and every balance that each of my customers has ever had。
    It'll be。
  prefs: []
  type: TYPE_NORMAL
- en: very expensive to keep this in my transactional database。 So， I move that data
    to a separate。
  prefs: []
  type: TYPE_NORMAL
- en: database to an analytic database where I can keep these massive long histories。
    And there。
  prefs: []
  type: TYPE_NORMAL
- en: I can ask questions like， "I'd like a list of all of my customers who's balanced
    grew。
  prefs: []
  type: TYPE_NORMAL
- en: by at least 10% in four of the last five years。 My transactional database won't
    be able。
  prefs: []
  type: TYPE_NORMAL
- en: to answer that， but my analytical database will。" So， the transition to analytics
    databases。
  prefs: []
  type: TYPE_NORMAL
- en: clearly would involve investments in infrastructure。 What kind of infrastructure
    are we talking。
  prefs: []
  type: TYPE_NORMAL
- en: about？ Yeah， so when you originally set up a data warehouse or an analytics
    database。
  prefs: []
  type: TYPE_NORMAL
- en: you needed to buy a special hardware。 You needed to buy very expensive special
    software。
  prefs: []
  type: TYPE_NORMAL
- en: from a variety of different vendors。 And again， we're talking about 20， 30 years
    ago， this。
  prefs: []
  type: TYPE_NORMAL
- en: sort of where this methodology of storing your data came into play。 And so，
    as the。
  prefs: []
  type: TYPE_NORMAL
- en: amount of data that people were collecting from lots of different sources， whether
    that。
  prefs: []
  type: TYPE_NORMAL
- en: be from mobile apps， from websites， from marketing campaigns， or even from data
    you're collecting。
  prefs: []
  type: TYPE_NORMAL
- en: physically in your stores about what's happening， or from your entire supply
    chain。 There's。
  prefs: []
  type: TYPE_NORMAL
- en: a lot of different sources of data that started coming in。 Those types of specialized
    analytics。
  prefs: []
  type: TYPE_NORMAL
- en: databases that ran on special hardware started to become very expensive to operate
    and started。
  prefs: []
  type: TYPE_NORMAL
- en: not really being able to keep up with the performance needs of that massive
    amount of， data。 And so。
  prefs: []
  type: TYPE_NORMAL
- en: this time we went through sort of the first big evolution of this。 And from。
  prefs: []
  type: TYPE_NORMAL
- en: these custom built specialized analytics data warehouses， the massive amount
    of data started。
  prefs: []
  type: TYPE_NORMAL
- en: getting stored in a new system called Hadoop。 Hadoop was developed by Google
    to process the。
  prefs: []
  type: TYPE_NORMAL
- en: massive amounts of web data that they collect and track， and was also designed
    to run on。
  prefs: []
  type: TYPE_NORMAL
- en: a giant network of very inexpensive hardware。 So instead of these specialized，
    very expensive。
  prefs: []
  type: TYPE_NORMAL
- en: servers， you could run on hundreds of very cheap servers。 And the result was
    this was。
  prefs: []
  type: TYPE_NORMAL
- en: a much more cost effective way to manage and process these massive， massive
    amounts of， data。 Now。
  prefs: []
  type: TYPE_NORMAL
- en: isn't that really what creating a data lake all about and also aren't we in
    a process。
  prefs: []
  type: TYPE_NORMAL
- en: of seeing many companies transition to newer big data tools or technologies
    like Spark， and others？
  prefs: []
  type: TYPE_NORMAL
- en: Absolutely。 So the data lake is what people used to refer to the basically massive
    sets。
  prefs: []
  type: TYPE_NORMAL
- en: of hard drives that they're storing all of this data in。 So it's a place you
    can pour。
  prefs: []
  type: TYPE_NORMAL
- en: huge amounts of data like a lake， and then you can use tools like Hadoop or
    now Spark。
  prefs: []
  type: TYPE_NORMAL
- en: which is a much more modern version of the Hadoop computation engine to pull
    data out， of that lake。
  prefs: []
  type: TYPE_NORMAL
- en: run some calculations and transformations on it， and then put it back so that
    you can。
  prefs: []
  type: TYPE_NORMAL
- en: find it later。 And traditionally what we saw is once people would sort of finish
    all those。
  prefs: []
  type: TYPE_NORMAL
- en: calculations， they wanted to be able to query that data very quickly。 And so
    they would end。
  prefs: []
  type: TYPE_NORMAL
- en: up putting that into those data warehouses that they were using originally。
    Now they started。
  prefs: []
  type: TYPE_NORMAL
- en: to refer those as data marts， which was where a small set of your customers
    or of your internal。
  prefs: []
  type: TYPE_NORMAL
- en: users could go get a subset of the data。 But in order to get a new data set
    loaded， you。
  prefs: []
  type: TYPE_NORMAL
- en: had to go back and write Hadoop or Spark jobs to get that data transformed and
    loaded into。
  prefs: []
  type: TYPE_NORMAL
- en: those data marts or data warehouses。 For those of you who are not familiar，
    Hadoop and Spark。
  prefs: []
  type: TYPE_NORMAL
- en: these are techniques for storing， and processing large amounts of data and essentially
    they involve distributed storage。
  prefs: []
  type: TYPE_NORMAL
- en: distributed processing of the data and creating a lot of parallelization which
    helps their。
  prefs: []
  type: TYPE_NORMAL
- en: data processing to happen faster。 Now coming back， Chris。
  prefs: []
  type: TYPE_NORMAL
- en: we've also now seen a transition towards cloud data warehousing。
  prefs: []
  type: TYPE_NORMAL
- en: So can you set up what exactly is a data warehouse？
  prefs: []
  type: TYPE_NORMAL
- en: How does it fit in within this whole conversation。
  prefs: []
  type: TYPE_NORMAL
- en: of companies moving their data to data lakes and data marts？ Absolutely。
  prefs: []
  type: TYPE_NORMAL
- en: So a lot of people found that with these data lakes and data marts， it was。
  prefs: []
  type: TYPE_NORMAL
- en: still hard to keep track of all of your data。 It was in different places that
    were massive。
  prefs: []
  type: TYPE_NORMAL
- en: amounts of it。 It was an inconsistent format。 And accessing it often involved
    having your。
  prefs: []
  type: TYPE_NORMAL
- en: engineering team actually write code that could run on these large parallelized
    systems。
  prefs: []
  type: TYPE_NORMAL
- en: And so about 10 years ago， a lot of research started happening into what are
    now called。
  prefs: []
  type: TYPE_NORMAL
- en: cloud data warehouses。 These are systems from Amazon or Google or from Snowflake，
    which are。
  prefs: []
  type: TYPE_NORMAL
- en: a reimagining of the traditional data warehouse。 They're designed to run on
    massively parallel。
  prefs: []
  type: TYPE_NORMAL
- en: sets of inexpensive hardware， just like Hadoop。 Generally， they're run on hardware
    that you。
  prefs: []
  type: TYPE_NORMAL
- en: rent from cloud providers like Amazon or Google or Microsoft instead of having
    to manage those。
  prefs: []
  type: TYPE_NORMAL
- en: servers yourself。 But from the outside， they look and operate and have the performance。
  prefs: []
  type: TYPE_NORMAL
- en: of a traditional data warehouse。 So what that means is they use a language to
    speak to them。
  prefs: []
  type: TYPE_NORMAL
- en: called SQL， which is what the data warehouses and databases use。 This means
    you can natively。
  prefs: []
  type: TYPE_NORMAL
- en: use Tableau or looker or other sort of analytics and BI tools right on top of
    them。 Because。
  prefs: []
  type: TYPE_NORMAL
- en: they use that standard language， they also integrate well with large sets of
    tools。 So。
  prefs: []
  type: TYPE_NORMAL
- en: as we were talking a little bit about before， what you really want from your
    data platform。
  prefs: []
  type: TYPE_NORMAL
- en: overall is somewhere to store all of this data， you need a set of ingest tools。
    So how do you。
  prefs: []
  type: TYPE_NORMAL
- en: get the data into your data platform？ And being SQL based， you can use any of
    a wide variety。
  prefs: []
  type: TYPE_NORMAL
- en: of tools that are built specifically for that。 You then need a set of transformations
    to。
  prefs: []
  type: TYPE_NORMAL
- en: take the raw data that's coming in and turn it into something useful。 And as
    I'm sure you've。
  prefs: []
  type: TYPE_NORMAL
- en: talking about in this class， one of those techniques is machine learning that
    you can。
  prefs: []
  type: TYPE_NORMAL
- en: use to take this raw data and score it and make predictions and figure out what's
    going， to happen。
  prefs: []
  type: TYPE_NORMAL
- en: But there's also simple things like， I might be getting data about the set of
    actions。
  prefs: []
  type: TYPE_NORMAL
- en: a user is taking on a daily basis。 And really， I want to look at that on a monthly
    basis。
  prefs: []
  type: TYPE_NORMAL
- en: So one transformation would be just rolling that up to a monthly basis。 And
    then the final。
  prefs: []
  type: TYPE_NORMAL
- en: piece you need is a query and visualization engine。 As we mentioned Tableau
    or looker。
  prefs: []
  type: TYPE_NORMAL
- en: or other tools like that， a way to actually run queries and for your analyst
    team to build。
  prefs: []
  type: TYPE_NORMAL
- en: dashboards and basically ask questions of the data once it's sort of been transformed。
  prefs: []
  type: TYPE_NORMAL
- en: And so one of the big challenges that people had with Hadoop or even with a
    Spark based。
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem is that those tools often need to be custom built for that ecosystem。
    Whereas。
  prefs: []
  type: TYPE_NORMAL
- en: if you use a cloud data warehouse， you get high performance， you get the scalability
    of， Hadoop。
  prefs: []
  type: TYPE_NORMAL
- en: but you also get access to the standard ecosystem of tools。 So Chris。
  prefs: []
  type: TYPE_NORMAL
- en: when we started our conversation， I mentioned that before companies can start。
  prefs: []
  type: TYPE_NORMAL
- en: using machine learning or other predictive technologies， they need to have a
    data infrastructure。
  prefs: []
  type: TYPE_NORMAL
- en: in place。 Now putting this data infrastructure in place obviously costs the
    money and cannot。
  prefs: []
  type: TYPE_NORMAL
- en: be taken lightly。 So what questions should a manager ask before they embark
    on such an， exercise？
  prefs: []
  type: TYPE_NORMAL
- en: Absolutely。 So one of the mistakes that I've seen people make repeatedly is
    to think that。
  prefs: []
  type: TYPE_NORMAL
- en: having this data infrastructure in and of itself is an important thing to do。
    And so。
  prefs: []
  type: TYPE_NORMAL
- en: they'll set this up and they'll load a bunch of data and they'll buy a bunch
    of tools and。
  prefs: []
  type: TYPE_NORMAL
- en: they won't actually get any value out of it because what they didn't do was
    think ahead。
  prefs: []
  type: TYPE_NORMAL
- en: of time about what they were trying to solve， what problems they had that they
    wanted to。
  prefs: []
  type: TYPE_NORMAL
- en: solve with data。 So what I would suggest is anyone who's going to undertake
    this journey。
  prefs: []
  type: TYPE_NORMAL
- en: think first carefully about the types of questions that you wish you could ask
    but you can't。
  prefs: []
  type: TYPE_NORMAL
- en: because you don't have all of the data， the types of questions that you are
    answering。
  prefs: []
  type: TYPE_NORMAL
- en: today but it's taking a long time。 An example of that is anything where you
    ask someone。
  prefs: []
  type: TYPE_NORMAL
- en: on your team to go spend two weeks collecting data and running analysis in Excel，
    those are。
  prefs: []
  type: TYPE_NORMAL
- en: decent candidates for the types of problems that you could solve in minutes
    if you have。
  prefs: []
  type: TYPE_NORMAL
- en: the correct data infrastructure in place。 And finally， think about what data
    you need in。
  prefs: []
  type: TYPE_NORMAL
- en: order to answer those questions。 It's generally not that useful to go collect
    every single。
  prefs: []
  type: TYPE_NORMAL
- en: piece of data you can possibly think of。 Instead， what are the pieces of data
    that are important。
  prefs: []
  type: TYPE_NORMAL
- en: to your business and are going to help you answer those critical business questions
    so。
  prefs: []
  type: TYPE_NORMAL
- en: that you can run your business better and more efficiently。 It's really at the
    end of the， day。
  prefs: []
  type: TYPE_NORMAL
- en: That's the whole goal。 Chris， that has been a very helpful set of tips and overview。
  prefs: []
  type: TYPE_NORMAL
- en: of the data infrastructure companies need to think through。 Thank you so much
    for joining， us。
  prefs: []
  type: TYPE_NORMAL
- en: Thank you， Karthik。 Appreciate it。 Thanks for having me。 [BLANK_AUDIO]。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ee2fe5e50c30d22f9d3bef2c5159f79f_3.png)'
  prefs: []
  type: TYPE_IMG
