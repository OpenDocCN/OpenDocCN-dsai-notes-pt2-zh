- en: 沃顿商学院《AI For Business（AI用于商业：AI基础／市场营销+财务／人力／管理）》（中英字幕） - P21：20_如何获取训练数据.zh_en
    - GPT中英字幕课程资源 - BV1Ju4y157dK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The key to any machine learning， deep learning， any application of machine learning
    is training。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71916df99d71c4f2e86c2eed7552fc8c_1.png)'
  prefs: []
  type: TYPE_IMG
- en: the model and this requires training data。 So training data really is at the
    heart of the machine learning process。
  prefs: []
  type: TYPE_NORMAL
- en: Training data again is the data that the algorithm learns or uses to learn the
    best mapping between。
  prefs: []
  type: TYPE_NORMAL
- en: the inputs and the right predictions or the output。
  prefs: []
  type: TYPE_NORMAL
- en: And so the question is where does training data come from？
  prefs: []
  type: TYPE_NORMAL
- en: When you're building a machine learning algorithm， where do you get a data set
    with a lot of。
  prefs: []
  type: TYPE_NORMAL
- en: input data and the correct decisions or the correct predictions that should
    be made using。
  prefs: []
  type: TYPE_NORMAL
- en: that data or given that data？ So there's a number of places that training data
    can come from in practice。
  prefs: []
  type: TYPE_NORMAL
- en: So the most common is probably archival or historical data that is already in
    the organization。
  prefs: []
  type: TYPE_NORMAL
- en: In many domains there are records of decisions that have been made that can
    be used to train。
  prefs: []
  type: TYPE_NORMAL
- en: a model。 For example， resume screening。 So any organization that's received
    lots of applications for employment will have a database。
  prefs: []
  type: TYPE_NORMAL
- en: perhaps， of the types of employment applications that have come in。 This might
    include resume data。
  prefs: []
  type: TYPE_NORMAL
- en: interview data， and perhaps final decisions that were made。
  prefs: []
  type: TYPE_NORMAL
- en: on things like whether a person gets moved on to an interview stage， whether
    or not they。
  prefs: []
  type: TYPE_NORMAL
- en: were eventually hired， perhaps how they performed at the firm later on。
  prefs: []
  type: TYPE_NORMAL
- en: And so this is maybe the most common type of training data is archival data
    in the organization。
  prefs: []
  type: TYPE_NORMAL
- en: And beyond HR， of course， there are similar applications in finance and accounting
    and， operations。
  prefs: []
  type: TYPE_NORMAL
- en: All of these domains are going to have historical databases of inputs and decisions
    that were。
  prefs: []
  type: TYPE_NORMAL
- en: actually made。 Anything from hiring to supply reordering to asset trading。
  prefs: []
  type: TYPE_NORMAL
- en: lots and lots of examples， that you can think about at the organizational level。
  prefs: []
  type: TYPE_NORMAL
- en: So that's one source of training data。 If those types of data are not available。
  prefs: []
  type: TYPE_NORMAL
- en: sometimes humans are used to generate training， data。
  prefs: []
  type: TYPE_NORMAL
- en: So you can see the text where you're building a new application， for instance，
    where you。
  prefs: []
  type: TYPE_NORMAL
- en: might need your input data to be labeled so that it can be used as a training
    data source。
  prefs: []
  type: TYPE_NORMAL
- en: So consider images。 It's a very common application。
  prefs: []
  type: TYPE_NORMAL
- en: You have lots of images and you're trying to identify whether they're in one
    category， or another。
  prefs: []
  type: TYPE_NORMAL
- en: So in the medical case， if you have medical images， you may already have information
    on。
  prefs: []
  type: TYPE_NORMAL
- en: whether a doctor has identified the person as having a disease or not。
  prefs: []
  type: TYPE_NORMAL
- en: That's the archival or historical example that we talked about just now。 And
    if that's not the case。
  prefs: []
  type: TYPE_NORMAL
- en: let's say you have another kind of image， you're trying。
  prefs: []
  type: TYPE_NORMAL
- en: to say identify a flower or something like that in an image and you have lots
    of images。
  prefs: []
  type: TYPE_NORMAL
- en: and you're trying to identify which ones have flowers and which ones don't。
  prefs: []
  type: TYPE_NORMAL
- en: Although lots of platforms that you can send the data out to， the image data
    out to， where。
  prefs: []
  type: TYPE_NORMAL
- en: they basically crowdsource this type of task for you。 So you can take thousands
    of images。
  prefs: []
  type: TYPE_NORMAL
- en: make them available on these platforms and you， can crowdsource the task of
    labeling which data or which images have flowers and which。
  prefs: []
  type: TYPE_NORMAL
- en: don't。 What I mean by that is that on these platforms， there are people who
    are going to basically。
  prefs: []
  type: TYPE_NORMAL
- en: look at these images and just visually inspect them and decide whether or not
    they have flowers。
  prefs: []
  type: TYPE_NORMAL
- en: They'll label them in a way that you get the data back that has all the image
    data， the。
  prefs: []
  type: TYPE_NORMAL
- en: original input data with another column of data that indicates whether or not
    something。
  prefs: []
  type: TYPE_NORMAL
- en: has a flower in it or not。 So again， the number of platforms where this kind
    of work can be crowd sourced to thousands。
  prefs: []
  type: TYPE_NORMAL
- en: of people who will do this kind of work so that it can be returned to you officially。
  prefs: []
  type: TYPE_NORMAL
- en: So that's another way in which training data can be derived。
  prefs: []
  type: TYPE_NORMAL
- en: A third and related way that's kind of common is using your customers themselves
    to label， the data。
  prefs: []
  type: TYPE_NORMAL
- en: So there are a number of examples where prominent platforms have basically used
    customer inputs。
  prefs: []
  type: TYPE_NORMAL
- en: to create these labels。 So if you think about Google and spam mail， for instance。
  prefs: []
  type: TYPE_NORMAL
- en: so Gmail does a fantastic job， of identifying what emails are spam。
  prefs: []
  type: TYPE_NORMAL
- en: the way it learned to do that is that historically。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71916df99d71c4f2e86c2eed7552fc8c_3.png)'
  prefs: []
  type: TYPE_IMG
- en: for a long time， we as Gmail customers or Gmail users identified， there were
    lots of buttons。
  prefs: []
  type: TYPE_NORMAL
- en: and so on that we could basically click to identify whether or not something
    was spam， or not。
  prefs: []
  type: TYPE_NORMAL
- en: So if you collect that data from your users over time， you have a database that's
    fairly。
  prefs: []
  type: TYPE_NORMAL
- en: rich that has lots of email information or message information and is identified
    by those。
  prefs: []
  type: TYPE_NORMAL
- en: users whether or not this is authentically spam or not。 Similar thing。
  prefs: []
  type: TYPE_NORMAL
- en: the social networks that have pictures embedded in news feeds， there's a。
  prefs: []
  type: TYPE_NORMAL
- en: lot of time spent by the users identifying faces who someone's friends are and
    so on。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71916df99d71c4f2e86c2eed7552fc8c_5.png)'
  prefs: []
  type: TYPE_IMG
- en: and that can then be used to build an algorithm to identify different people
    or so on。
  prefs: []
  type: TYPE_NORMAL
- en: So lots of examples where users of the platform itself can manually， by interacting
    with the。
  prefs: []
  type: TYPE_NORMAL
- en: platform， essentially create a training data set for the platform to use to
    then go back。
  prefs: []
  type: TYPE_NORMAL
- en: and implement a machine learning algorithm。 Thank you。 [BLANK_AUDIO]。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71916df99d71c4f2e86c2eed7552fc8c_7.png)'
  prefs: []
  type: TYPE_IMG
