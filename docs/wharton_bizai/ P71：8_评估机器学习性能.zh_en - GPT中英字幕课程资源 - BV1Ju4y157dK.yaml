- en: 沃顿商学院《AI For Business（AI用于商业：AI基础／市场营销+财务／人力／管理）》（中英字幕） - P71：8_评估机器学习性能.zh_en
    - GPT中英字幕课程资源 - BV1Ju4y157dK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of factors we might think about when we're trying to decide
    that we。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/543899043bc82c1a0c12f8795925068e_1.png)'
  prefs: []
  type: TYPE_IMG
- en: do a good job making a prediction algorithmically。
  prefs: []
  type: TYPE_NORMAL
- en: There are a number of ways to measure performance and we're not going to talk
    about all of them。
  prefs: []
  type: TYPE_NORMAL
- en: today but I want to mention a few that you might run into when you're talking
    about。
  prefs: []
  type: TYPE_NORMAL
- en: algorithms or hearing about how they're being used in different business contexts。
  prefs: []
  type: TYPE_NORMAL
- en: So different performance metrics with names like accuracy， precision， recall，
    specificity。
  prefs: []
  type: TYPE_NORMAL
- en: all of these are different measures of how well a machine learning algorithm
    is performing。
  prefs: []
  type: TYPE_NORMAL
- en: So why do we need so many？ Why do we have a number of different performance
    metrics？
  prefs: []
  type: TYPE_NORMAL
- en: Well the reason is that prediction is ultimately embedded in a business context
    and different。
  prefs: []
  type: TYPE_NORMAL
- en: types of errors have different costs and benefits。
  prefs: []
  type: TYPE_NORMAL
- en: When we're building an algorithm to make a recommendation we might want to weight
    it according。
  prefs: []
  type: TYPE_NORMAL
- en: to how costly different kinds of errors are。 We may not just want to optimize
    it on one thing。
  prefs: []
  type: TYPE_NORMAL
- en: we may want to optimize it on something else， depending on the errors that appear
    in that particular context。
  prefs: []
  type: TYPE_NORMAL
- en: So， for example， consider an algorithm that moves a resume on to the interview
    stage。
  prefs: []
  type: TYPE_NORMAL
- en: So based on these resume data it predicts whether a candidate is likely to eventually。
  prefs: []
  type: TYPE_NORMAL
- en: be hired so it basically is predicting or recommending that a firm or employer
    should。
  prefs: []
  type: TYPE_NORMAL
- en: give the time to interview this candidate。 So consider the problem or the business
    problem that says I want to make absolutely sure that。
  prefs: []
  type: TYPE_NORMAL
- en: I don't miss any potentially good candidates。 In a very tight labor market where
    you're searching for people with a very rare skill set and。
  prefs: []
  type: TYPE_NORMAL
- en: you don't mind spending the time to on a few candidates who may not be a great
    fit as long。
  prefs: []
  type: TYPE_NORMAL
- en: as you want to make absolutely sure that you don't miss any potentially good
    candidates。
  prefs: []
  type: TYPE_NORMAL
- en: In this case the priority is to make sure that any strong candidate you might
    see that appearing。
  prefs: []
  type: TYPE_NORMAL
- en: in the data are predicted as being strong candidates。
  prefs: []
  type: TYPE_NORMAL
- en: And trust this with a different market where you might say I don't really want
    to waste。
  prefs: []
  type: TYPE_NORMAL
- en: anyone's time in our organization with a candidate who turns out to be not a
    very good， fit。 Right。
  prefs: []
  type: TYPE_NORMAL
- en: so maybe there's lots of potential candidates in the pool。
  prefs: []
  type: TYPE_NORMAL
- en: It's not a hard position to fill but it's very costly to use our own staff's
    time to。
  prefs: []
  type: TYPE_NORMAL
- en: evaluate people。 So you don't want to waste anyone's time with a candidate who
    turns out to be bad。
  prefs: []
  type: TYPE_NORMAL
- en: In this case we want to make sure we don't label or predict that anyone who
    is not a。
  prefs: []
  type: TYPE_NORMAL
- en: very good candidate is going to be predicted accidentally as a strong candidate。
  prefs: []
  type: TYPE_NORMAL
- en: So in these two different cases we may be optimizing on two different things
    and what we think。
  prefs: []
  type: TYPE_NORMAL
- en: about is the important errors to avoid in making an algorithmic prediction。
  prefs: []
  type: TYPE_NORMAL
- en: It turns out there are trade-offs。 So when we think about these systems we have
    to choose often one or the other。
  prefs: []
  type: TYPE_NORMAL
- en: It's very difficult to do really well on votes so it's important to prioritize
    which one。
  prefs: []
  type: TYPE_NORMAL
- en: of these do we really care about and again depending on the business application
    context。
  prefs: []
  type: TYPE_NORMAL
- en: some of these errors may be more or less costly than others。
  prefs: []
  type: TYPE_NORMAL
- en: And this is where it ultimately comes down to is what are the relative costs
    of these。
  prefs: []
  type: TYPE_NORMAL
- en: kinds of different errors。 These false negatives or false positives is what
    they're sometimes called。
  prefs: []
  type: TYPE_NORMAL
- en: How much of these errors costing you is it more expensive to miss a good candidate
    or。
  prefs: []
  type: TYPE_NORMAL
- en: is it more expensive to waste staff time with a candidate who is ultimately
    not going to。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/543899043bc82c1a0c12f8795925068e_3.png)'
  prefs: []
  type: TYPE_IMG
- en: be a good fit。 In the next video we'll talk about an end-to-end example that
    puts some of these concepts together。
  prefs: []
  type: TYPE_NORMAL
- en: Thank you。 the next video。 [BLANK_AUDIO]。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/543899043bc82c1a0c12f8795925068e_5.png)'
  prefs: []
  type: TYPE_IMG
