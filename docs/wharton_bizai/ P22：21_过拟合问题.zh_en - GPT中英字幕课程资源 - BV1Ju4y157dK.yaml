- en: 沃顿商学院《AI For Business（AI用于商业：AI基础／市场营销+财务／人力／管理）》（中英字幕） - P22：21_过拟合问题.zh_en
    - GPT中英字幕课程资源 - BV1Ju4y157dK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we've talked about， the key to algorithms learning a mapping between the
    input data。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a5d0613f6b8ac435e3f9f1087ca50906_1.png)'
  prefs: []
  type: TYPE_IMG
- en: and an output prediction or recommendation is the training data。
  prefs: []
  type: TYPE_NORMAL
- en: This is the data set that the algorithm uses to learn the correct relationship
    between。
  prefs: []
  type: TYPE_NORMAL
- en: the input features and the prediction it should make。
  prefs: []
  type: TYPE_NORMAL
- en: Training data is therefore the key to building algorithms， but we care most
    really about。
  prefs: []
  type: TYPE_NORMAL
- en: performance on what's called out-of-sample data。 The whole point is to predict
    outcomes where we don't already know what's going to happen。
  prefs: []
  type: TYPE_NORMAL
- en: So for training data， we need data where the answer is already known。
  prefs: []
  type: TYPE_NORMAL
- en: That's how the algorithm learns。 But really for it to be useful。
  prefs: []
  type: TYPE_NORMAL
- en: we want it to be able to make predictions on data for， which we don't know the
    answer yet。
  prefs: []
  type: TYPE_NORMAL
- en: That's the whole point of prediction。 As we think about this problem。
  prefs: []
  type: TYPE_NORMAL
- en: we have to think about the overfitting problem。 Overfitting is an important
    machine learning challenge。
  prefs: []
  type: TYPE_NORMAL
- en: It is the danger that the model performs really well on the training data。 We
    give it to train。
  prefs: []
  type: TYPE_NORMAL
- en: but it doesn't perform nearly as well when we take it to out-of-sample， data。
  prefs: []
  type: TYPE_NORMAL
- en: when we put it into production， we start to deploy it。 Its performance falls
    significantly。
  prefs: []
  type: TYPE_NORMAL
- en: So machine learning engineers often have to deal with this problem。
  prefs: []
  type: TYPE_NORMAL
- en: They try to avoid fitting the model to the point that it picks up essentially
    noise in。
  prefs: []
  type: TYPE_NORMAL
- en: the training data。 They are constantly struggling with this overfitting problem。
  prefs: []
  type: TYPE_NORMAL
- en: They are trying to balance using the training data to build an accurate model
    with having。
  prefs: []
  type: TYPE_NORMAL
- en: a model that still performs well on out-of-sample data。
  prefs: []
  type: TYPE_NORMAL
- en: So an example I like to use is kind of studying the test versus studying the
    material。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a5d0613f6b8ac435e3f9f1087ca50906_3.png)'
  prefs: []
  type: TYPE_IMG
- en: So imagine you are studying for a test and you have a lot of sample tests that
    you have。
  prefs: []
  type: TYPE_NORMAL
- en: that you can historical or back test from previous years that you can use to
    help you， study。
  prefs: []
  type: TYPE_NORMAL
- en: So it could be the case that you can think about studying the material to a
    point that。
  prefs: []
  type: TYPE_NORMAL
- en: you take a new test and you perform very well。 There is a level of generality
    if you learn the concepts。
  prefs: []
  type: TYPE_NORMAL
- en: if you learn the material using， the old tests， using other things you have。
  prefs: []
  type: TYPE_NORMAL
- en: you can learn at a level that transfers very， well to any new test you might
    see。
  prefs: []
  type: TYPE_NORMAL
- en: You could also go back and study an old test to the point that you would do
    exceedingly。
  prefs: []
  type: TYPE_NORMAL
- en: well on that test。 For example， you might memorize the questions exactly the
    concepts in those questions。
  prefs: []
  type: TYPE_NORMAL
- en: What that means is that if you were given exactly that test， you would do well，
    you would do。
  prefs: []
  type: TYPE_NORMAL
- en: very well。 But if you are given a new test， that knowledge is not going to transfer
    over as well。
  prefs: []
  type: TYPE_NORMAL
- en: And this is similar to that training overfitting problem。
  prefs: []
  type: TYPE_NORMAL
- en: It is using the training data to get the essential relationships out of it but
    not to the point。
  prefs: []
  type: TYPE_NORMAL
- en: where you are picking it up at a level of uniqueness that doesn't transfer over
    to any。
  prefs: []
  type: TYPE_NORMAL
- en: other data sets or any out-of-sample data that you are using。
  prefs: []
  type: TYPE_NORMAL
- en: So the challenges are always capturing the relevant aspects of the model versus
    capturing。
  prefs: []
  type: TYPE_NORMAL
- en: kind of the idiosyncrasies and the training data。 And this is called the bias
    variance trade-off。
  prefs: []
  type: TYPE_NORMAL
- en: Let's talk about an example with customer targeting。
  prefs: []
  type: TYPE_NORMAL
- en: So let's say we want to run a promotion where we are targeting specific customers
    to see。
  prefs: []
  type: TYPE_NORMAL
- en: if they buy a particular item。 And to do that， we are going to have training
    data based on a small set of customers who we。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a5d0613f6b8ac435e3f9f1087ca50906_5.png)'
  prefs: []
  type: TYPE_IMG
- en: run the promotion on in the past。 We want to use that training data to learn
    what types of customers in the future or in。
  prefs: []
  type: TYPE_NORMAL
- en: the larger population should get that promotion。 Which ones are likely to respond
    to that promotion？
  prefs: []
  type: TYPE_NORMAL
- en: So what we would like to do is run a model which picks up the relevant attributes
    of。
  prefs: []
  type: TYPE_NORMAL
- en: those customers that can be useful for predicting in other customers or in the
    future who is。
  prefs: []
  type: TYPE_NORMAL
- en: most responsive。 And this might be related to demographics。
  prefs: []
  type: TYPE_NORMAL
- en: This might be related to location or other customer attributes。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a5d0613f6b8ac435e3f9f1087ca50906_7.png)'
  prefs: []
  type: TYPE_IMG
- en: Alternatively， we could imagine running the model to the point where it sort
    of studies。
  prefs: []
  type: TYPE_NORMAL
- en: the test so to speak。 It kind of goes overboard and learns particular aspects
    of those customers in the training。
  prefs: []
  type: TYPE_NORMAL
- en: data set that happened to be relevant in that small data set for responding
    to the promotion。
  prefs: []
  type: TYPE_NORMAL
- en: For example， just to use a silly example， in that customer training data set，
    it might。
  prefs: []
  type: TYPE_NORMAL
- en: have been the case that everyone with the first name Julie happened to respond
    to that， promotion。
  prefs: []
  type: TYPE_NORMAL
- en: So machine learning model that's learning on the training data set could rightly
    say that。
  prefs: []
  type: TYPE_NORMAL
- en: having the name Julie is a very good predictor of responding to the promotion
    in the training。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a5d0613f6b8ac435e3f9f1087ca50906_9.png)'
  prefs: []
  type: TYPE_IMG
- en: data。 But that might have been just a characteristic of a single customer or
    a small set of customers。
  prefs: []
  type: TYPE_NORMAL
- en: in the training data。 It may not be real information that's applicable to a
    larger customer data set。
  prefs: []
  type: TYPE_NORMAL
- en: So the point is that you want to be able to balance the models such that it's
    picking。
  prefs: []
  type: TYPE_NORMAL
- en: up relevant signal in the training data set， the features that actually matter
    and ignoring。
  prefs: []
  type: TYPE_NORMAL
- en: the things that happen to be noise in the data set that are not going to transfer
    over。
  prefs: []
  type: TYPE_NORMAL
- en: to a new larger data set。 So dealing with overfitting of this type is really
    one of the most important challenges。
  prefs: []
  type: TYPE_NORMAL
- en: in the machine learning process。 In the next video。
  prefs: []
  type: TYPE_NORMAL
- en: we will discuss the role of test data in avoiding this overfitting problem。
    Thank you。
  prefs: []
  type: TYPE_NORMAL
- en: '[BLANK_AUDIO]。'
  prefs: []
  type: TYPE_NORMAL
