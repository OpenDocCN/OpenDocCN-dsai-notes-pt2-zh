- en: 沃顿商学院《AI For Business（AI用于商业：AI基础／市场营销+财务／人力／管理）》（中英字幕） - P23：22_测试数据.zh_en
    - GPT中英字幕课程资源 - BV1Ju4y157dK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When thinking about the overfitting problem， it's important to understand the
    concept of。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a23e44883cd20e020c458544872bcfd7_1.png)'
  prefs: []
  type: TYPE_IMG
- en: test data， which is one of the tools that engineers use to avoid overfitting。
    So test data。
  prefs: []
  type: TYPE_NORMAL
- en: also called a holdout sample， is a data set that is not used to train or， build
    the model。
  prefs: []
  type: TYPE_NORMAL
- en: but that we can use to validate the model。 So validating performance on a data
    set that's not used to build the model helps ensure that。
  prefs: []
  type: TYPE_NORMAL
- en: the model will also work well on outside samples。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a23e44883cd20e020c458544872bcfd7_3.png)'
  prefs: []
  type: TYPE_IMG
- en: So one can think about having two data sets， training data set， and a test data
    set。
  prefs: []
  type: TYPE_NORMAL
- en: And we can make the model， build the model on the training data， and it's going
    to get。
  prefs: []
  type: TYPE_NORMAL
- en: more and more accurate on the training data。 It's going to get more and more
    accurate on the test data。
  prefs: []
  type: TYPE_NORMAL
- en: At a certain point though， if it starts to fit itself too well to specific characteristics。
  prefs: []
  type: TYPE_NORMAL
- en: of the training data， we start to see a divergence and it starts to perform
    less well on the test。
  prefs: []
  type: TYPE_NORMAL
- en: data。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a23e44883cd20e020c458544872bcfd7_5.png)'
  prefs: []
  type: TYPE_IMG
- en: So having these two data sets available at the same time helps us manage this
    overfitting。
  prefs: []
  type: TYPE_NORMAL
- en: problem and helps us ensure that the training that the model is undergoing is
    applicable。
  prefs: []
  type: TYPE_NORMAL
- en: to outside samples as well。 So where does test data come from？
  prefs: []
  type: TYPE_NORMAL
- en: So keep in mind that we need a data set that was not used to build the model，
    that the machine。
  prefs: []
  type: TYPE_NORMAL
- en: learning algorithm did not learn from， but we still need the correct answers
    to be available。
  prefs: []
  type: TYPE_NORMAL
- en: in the data。 We need those labels to be available in the data for the test data
    as well。
  prefs: []
  type: TYPE_NORMAL
- en: So a common approach is for machine learning engineers to start with all of
    the data for。
  prefs: []
  type: TYPE_NORMAL
- en: which they have labels。 So a large data set for which they have labels available。
  prefs: []
  type: TYPE_NORMAL
- en: the correct answers available， and， then simply divide it up into training and
    test data。
  prefs: []
  type: TYPE_NORMAL
- en: So you might do what's called like a 70/30 split where you keep 70% of the data
    and use。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a23e44883cd20e020c458544872bcfd7_7.png)'
  prefs: []
  type: TYPE_IMG
- en: that to train the model and then take 30% of data that you hold out and use
    that to evaluate。
  prefs: []
  type: TYPE_NORMAL
- en: how the model is doing on that out of sample data。
  prefs: []
  type: TYPE_NORMAL
- en: And there are variations on this that essentially use the same idea which is
    you're training。
  prefs: []
  type: TYPE_NORMAL
- en: the data on one set of the sample or one set of data and you're basically validating
    it。
  prefs: []
  type: TYPE_NORMAL
- en: on something that wasn't used to train the model。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a23e44883cd20e020c458544872bcfd7_9.png)'
  prefs: []
  type: TYPE_IMG
- en: So as an example if you're trying to use insurance data for instance to predict
    accident likelihood。
  prefs: []
  type: TYPE_NORMAL
- en: based on customer attributes driving characteristics so on。
  prefs: []
  type: TYPE_NORMAL
- en: What you might do is you might take all of your historical data on accidents
    as well。
  prefs: []
  type: TYPE_NORMAL
- en: as customer attributes and characteristics and you might divide it up。
  prefs: []
  type: TYPE_NORMAL
- en: You might say let me take everything up until the last six months and use that
    as my training。
  prefs: []
  type: TYPE_NORMAL
- en: data and then everything from six months ago onto the present day I'll use my
    test data。
  prefs: []
  type: TYPE_NORMAL
- en: and so I'll train the model from all the data before six months。
  prefs: []
  type: TYPE_NORMAL
- en: I'll use that model and see how it's doing based on the last six months of data
    that。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a23e44883cd20e020c458544872bcfd7_11.png)'
  prefs: []
  type: TYPE_IMG
- en: way the accidents in the last six months of data are not used to build the model
    but can。
  prefs: []
  type: TYPE_NORMAL
- en: still be used to sort of validate how it's doing on data that are not used to
    actually。
  prefs: []
  type: TYPE_NORMAL
- en: build the model。 And then after that after you're comfortable that the model
    performs well on the test data。
  prefs: []
  type: TYPE_NORMAL
- en: it can then be rolled into deployment to kind of predict accidents that are
    going to happen。
  prefs: []
  type: TYPE_NORMAL
- en: in the future based on different customer attributes and characteristics。 [
    Silence ]。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a23e44883cd20e020c458544872bcfd7_13.png)'
  prefs: []
  type: TYPE_IMG
